{"ast":null,"code":"var _s = $RefreshSig$();\nimport PageWrapper from '@components/common/layout/PageWrapper';\nimport apiConfig from '@constants/apiConfig';\nimport useFetch from '@hooks/useFetch';\nimport useFetchAction from '@hooks/useFetchAction';\nimport useSaveBase from '@hooks/useSaveBase';\nimport { accountActions } from '@store/actions';\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport ProfileForm from './ProfileForm';\nimport useAuth from '@hooks/useAuth';\nimport { UserTypes, storageKeys } from '@constants';\nimport { defineMessages } from 'react-intl';\nimport useTranslate from '@hooks/useTranslate';\nimport { getData } from '@utils/localStorage';\nconst messages = defineMessages({\n  profile: {\n    \"id\": \"modules.profile.index.profile\",\n    \"defaultMessage\": 'Profile'\n  }\n});\nconst userProfileType = {\n  [UserTypes.MANAGER]: 'organize',\n  [UserTypes.DEVELOPER]: 'developer',\n  [UserTypes.STUDENT]: 'student',\n  [UserTypes.COMPANY]: 'company'\n};\nconst ProfilePage = () => {\n  _s();\n  const {\n    profile\n  } = useAuth();\n  const translate = useTranslate();\n  const useKind = getData(storageKeys.USER_KIND);\n  const {\n    data,\n    loading\n  } = useFetch(apiConfig[userProfileType[useKind]].getProfile, {\n    immediate: true,\n    mappingData: res => res.data\n  });\n  const {\n    execute: executeGetProfile\n  } = useFetchAction(accountActions.getProfile);\n  const {\n    mixinFuncs,\n    onSave,\n    setIsChangedFormValues,\n    isEditing\n  } = useSaveBase({\n    options: {\n      getListUrl: `/`,\n      objectName: translate.formatMessage(messages.profile)\n    },\n    apiConfig: {\n      getById: apiConfig[userProfileType[useKind]].getProfile,\n      update: apiConfig[userProfileType[useKind]].updateProfile\n    },\n    override: funcs => {\n      const onSaveCompleted = funcs.onSaveCompleted;\n      funcs.onSaveCompleted = response => {\n        onSaveCompleted(response);\n        executeGetProfile();\n      };\n    }\n  });\n  return /*#__PURE__*/React.createElement(PageWrapper, {\n    loading: loading,\n    routes: [{\n      breadcrumbName: translate.formatMessage(messages.profile)\n    }]\n  }, useKind === UserTypes.MANAGER && /*#__PURE__*/React.createElement(ProfileForm, {\n    setIsChangedFormValues: setIsChangedFormValues,\n    dataDetail: data ? data : {},\n    formId: mixinFuncs.getFormId(),\n    isEditing: isEditing,\n    actions: mixinFuncs.renderActions(),\n    onSubmit: onSave\n    // isAdmin={isAdmin}\n  }));\n};\n_s(ProfilePage, \"M5n6kG/bjW5aALAIn1mN+JF+I90=\", false, function () {\n  return [useAuth, useTranslate, useFetch, useFetchAction, useSaveBase];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["PageWrapper","apiConfig","useFetch","useFetchAction","useSaveBase","accountActions","React","useEffect","useState","useLocation","useParams","ProfileForm","useAuth","UserTypes","storageKeys","defineMessages","useTranslate","getData","messages","profile","userProfileType","MANAGER","DEVELOPER","STUDENT","COMPANY","ProfilePage","_s","translate","useKind","USER_KIND","data","loading","getProfile","immediate","mappingData","res","execute","executeGetProfile","mixinFuncs","onSave","setIsChangedFormValues","isEditing","options","getListUrl","objectName","formatMessage","getById","update","updateProfile","override","funcs","onSaveCompleted","response","createElement","routes","breadcrumbName","dataDetail","formId","getFormId","actions","renderActions","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/PC/Downloads/elms-cms/elms-cms/source/src/modules/profile/index.js"],"sourcesContent":["import PageWrapper from '@components/common/layout/PageWrapper';\r\nimport apiConfig from '@constants/apiConfig';\r\nimport useFetch from '@hooks/useFetch';\r\nimport useFetchAction from '@hooks/useFetchAction';\r\nimport useSaveBase from '@hooks/useSaveBase';\r\nimport { accountActions } from '@store/actions';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport ProfileForm from './ProfileForm';\r\n\r\nimport useAuth from '@hooks/useAuth';\r\nimport { UserTypes, storageKeys } from '@constants';\r\nimport { defineMessages } from 'react-intl';\r\nimport useTranslate from '@hooks/useTranslate';\r\nimport { getData } from '@utils/localStorage';\r\n\r\n\r\nconst messages = defineMessages({\r\n    profile: 'Profile',\r\n});\r\n\r\nconst userProfileType = {\r\n    [UserTypes.MANAGER]: 'organize',\r\n    [UserTypes.DEVELOPER]: 'developer',\r\n    [UserTypes.STUDENT]: 'student',\r\n    [UserTypes.COMPANY]: 'company',\r\n};\r\n\r\nconst ProfilePage = () => {\r\n    const { profile } = useAuth();\r\n    const translate = useTranslate();\r\n    const useKind = getData(storageKeys.USER_KIND);\r\n    const { data, loading } = useFetch(apiConfig[userProfileType[useKind]].getProfile, {\r\n        immediate: true,\r\n        mappingData: (res) => res.data,\r\n    });\r\n    const { execute: executeGetProfile } = useFetchAction(accountActions.getProfile);\r\n    const { mixinFuncs, onSave, setIsChangedFormValues, isEditing } = useSaveBase({\r\n        options: {\r\n            getListUrl: `/`,\r\n            objectName: translate.formatMessage(messages.profile),\r\n        },\r\n        apiConfig: {\r\n            getById: apiConfig[userProfileType[useKind]].getProfile,\r\n            update: apiConfig[userProfileType[useKind]].updateProfile,\r\n        },\r\n        override: (funcs) => {\r\n            const onSaveCompleted = funcs.onSaveCompleted;\r\n\r\n            funcs.onSaveCompleted = (response) => {\r\n                onSaveCompleted(response);\r\n                executeGetProfile();\r\n            };\r\n        },\r\n    });\r\n\r\n    return (\r\n        <PageWrapper loading={loading} routes={[{ breadcrumbName: translate.formatMessage(messages.profile) }]}>\r\n            {useKind === UserTypes.MANAGER && (\r\n                <ProfileForm\r\n                    setIsChangedFormValues={setIsChangedFormValues}\r\n                    dataDetail={data ? data : {}}\r\n                    formId={mixinFuncs.getFormId()}\r\n                    isEditing={isEditing}\r\n                    actions={mixinFuncs.renderActions()}\r\n                    onSubmit={onSave}\r\n                    // isAdmin={isAdmin}\r\n                />\r\n            )}\r\n            \r\n        </PageWrapper>\r\n    );\r\n};\r\n\r\nexport default ProfilePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}