{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCurrency } from '@components/common/elements/Currency';\nimport { UserTypes, storageKeys } from '@constants';\nimport useNotification from '@hooks/useNotification';\nimport routes from '@routes';\nimport { selectRestaurantList } from '@selectors/app';\nimport { removeCacheToken } from '@services/userService';\nimport { accountActions, appActions } from '@store/actions';\nimport { createPathWithData } from '@utils';\nimport { getData } from '@utils/localStorage';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nconst Dashboard = () => {\n  _s();\n  const userKind = getData(storageKeys.USER_KIND);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const notification = useNotification();\n  const {\n    fetchCurrency\n  } = useCurrency();\n  useEffect(() => {\n    if (userKind == UserTypes.ADMIN) {\n      removeCacheToken();\n      dispatch(accountActions.logout());\n      notification({\n        type: 'error',\n        message: 'Loại tài khoản không phù hợp để đăng nhập vô trang này !!!'\n      });\n    } else if (userKind == UserTypes.STUDENT) {\n      navigate(routes.courseStudentListPage.path);\n    } else if (userKind == UserTypes.LEADER) {\n      navigate(routes.projectLeaderListPage.path);\n    } else if (userKind == UserTypes.COMPANY) {\n      navigate(routes.companyRequestListPage.path);\n    } else {\n      navigate(routes.studentListPage.path);\n    }\n  }, []);\n  return null;\n};\n_s(Dashboard, \"5xXLQNMkNTGRGkMOa90l+ycXe7o=\", false, function () {\n  return [useNavigate, useDispatch, useNotification, useCurrency];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useCurrency","UserTypes","storageKeys","useNotification","routes","selectRestaurantList","removeCacheToken","accountActions","appActions","createPathWithData","getData","useEffect","useDispatch","useSelector","useNavigate","Dashboard","_s","userKind","USER_KIND","navigate","dispatch","notification","fetchCurrency","ADMIN","logout","type","message","STUDENT","courseStudentListPage","path","LEADER","projectLeaderListPage","COMPANY","companyRequestListPage","studentListPage","_c","$RefreshReg$"],"sources":["C:/Users/PC/Downloads/elms-cms/elms-cms/source/src/modules/entry/index.js"],"sourcesContent":["import { useCurrency } from '@components/common/elements/Currency';\r\nimport { UserTypes, storageKeys } from '@constants';\r\nimport useNotification from '@hooks/useNotification';\r\nimport routes from '@routes';\r\nimport { selectRestaurantList } from '@selectors/app';\r\nimport { removeCacheToken } from '@services/userService';\r\nimport { accountActions, appActions } from '@store/actions';\r\nimport { createPathWithData } from '@utils';\r\nimport { getData } from '@utils/localStorage';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Dashboard = () => {\r\n    const userKind = getData(storageKeys.USER_KIND);\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const notification = useNotification();\r\n    const { fetchCurrency } = useCurrency();\r\n    useEffect(() => {\r\n        if (userKind == UserTypes.ADMIN) {\r\n            removeCacheToken();\r\n            dispatch(accountActions.logout());\r\n            notification({ type: 'error', message: 'Loại tài khoản không phù hợp để đăng nhập vô trang này !!!' });\r\n        } else if (userKind == UserTypes.STUDENT) {\r\n            navigate(routes.courseStudentListPage.path);\r\n        } else if (userKind == UserTypes.LEADER) {\r\n            navigate(routes.projectLeaderListPage.path);\r\n        } else if (userKind == UserTypes.COMPANY) {\r\n            navigate(routes.companyRequestListPage.path);\r\n        } else {\r\n            navigate(routes.studentListPage.path);\r\n        }\r\n    }, []);\r\n\r\n    return null;\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,sCAAsC;AAClE,SAASC,SAAS,EAAEC,WAAW,QAAQ,YAAY;AACnD,OAAOC,eAAe,MAAM,wBAAwB;AACpD,OAAOC,MAAM,MAAM,SAAS;AAC5B,SAASC,oBAAoB,QAAQ,gBAAgB;AACrD,SAASC,gBAAgB,QAAQ,uBAAuB;AACxD,SAASC,cAAc,EAAEC,UAAU,QAAQ,gBAAgB;AAC3D,SAASC,kBAAkB,QAAQ,QAAQ;AAC3C,SAASC,OAAO,QAAQ,qBAAqB;AAC7C,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGP,OAAO,CAACR,WAAW,CAACgB,SAAS,CAAC;EAC/C,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,YAAY,GAAGlB,eAAe,CAAC,CAAC;EACtC,MAAM;IAAEmB;EAAc,CAAC,GAAGtB,WAAW,CAAC,CAAC;EACvCW,SAAS,CAAC,MAAM;IACZ,IAAIM,QAAQ,IAAIhB,SAAS,CAACsB,KAAK,EAAE;MAC7BjB,gBAAgB,CAAC,CAAC;MAClBc,QAAQ,CAACb,cAAc,CAACiB,MAAM,CAAC,CAAC,CAAC;MACjCH,YAAY,CAAC;QAAEI,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAE;MAA6D,CAAC,CAAC;IAC1G,CAAC,MAAM,IAAIT,QAAQ,IAAIhB,SAAS,CAAC0B,OAAO,EAAE;MACtCR,QAAQ,CAACf,MAAM,CAACwB,qBAAqB,CAACC,IAAI,CAAC;IAC/C,CAAC,MAAM,IAAIZ,QAAQ,IAAIhB,SAAS,CAAC6B,MAAM,EAAE;MACrCX,QAAQ,CAACf,MAAM,CAAC2B,qBAAqB,CAACF,IAAI,CAAC;IAC/C,CAAC,MAAM,IAAIZ,QAAQ,IAAIhB,SAAS,CAAC+B,OAAO,EAAE;MACtCb,QAAQ,CAACf,MAAM,CAAC6B,sBAAsB,CAACJ,IAAI,CAAC;IAChD,CAAC,MAAM;MACHV,QAAQ,CAACf,MAAM,CAAC8B,eAAe,CAACL,IAAI,CAAC;IACzC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,IAAI;AACf,CAAC;AAACb,EAAA,CAvBID,SAAS;EAAA,QAEMD,WAAW,EACXF,WAAW,EACPT,eAAe,EACVH,WAAW;AAAA;AAAAmC,EAAA,GALnCpB,SAAS;AAyBf,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}