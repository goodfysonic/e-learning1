{"ast":null,"code":"var _s = $RefreshSig$();\nimport AutoCompleteField from '@components/common/form/AutoCompleteField';\nimport { BaseForm } from '@components/common/form/BaseForm';\nimport SelectField from '@components/common/form/SelectField';\nimport TextField from '@components/common/form/TextField';\nimport apiConfig from '@constants/apiConfig';\nimport { SalaryOptions, levelOptionSelect, sALARYOptions, statusOptions } from '@constants/masterData';\nimport useBasicForm from '@hooks/useBasicForm';\nimport useFetch from '@hooks/useFetch';\nimport useTranslate from '@hooks/useTranslate';\nimport { Card, Col, Form, Row } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\nimport { commonMessage } from '@locales/intl';\nimport ScheduleTable from '@components/common/table/ScheduleTable';\nimport { AppConstants, DATE_FORMAT_VALUE, TIME_FORMAT_DISPLAY, categoryKinds } from '@constants';\nimport dayjs from 'dayjs';\nimport { daysOfWeekSchedule as daysOfWeekScheduleOptions } from '@constants/masterData';\nimport NumericField from '@components/common/form/NumericField';\nimport CropImageField from '@components/common/form/CropImageField';\nimport DatePickerField from '@components/common/form/DatePickerField';\nimport { validateDate } from '@utils/dayHelper';\nimport { formatDateString } from '@utils';\nconst DeveloperForm = props => {\n  _s();\n  const translate = useTranslate();\n  const {\n    formId,\n    actions,\n    onSubmit,\n    dataDetail,\n    setIsChangedFormValues,\n    isEditing\n  } = props;\n  const statusValues = translate.formatKeys(statusOptions, ['label']);\n  const salaryValues = translate.formatKeys(SalaryOptions, ['label']);\n  const daysOfWeekSchedule = translate.formatKeys(daysOfWeekScheduleOptions, ['label']);\n  const {\n    form,\n    mixinFuncs,\n    onValuesChange,\n    setFieldValue,\n    getFieldValue\n  } = useBasicForm({\n    onSubmit,\n    setIsChangedFormValues\n  });\n  const [imageUrl, setImageUrl] = useState(null);\n  function formatTimeRange(timeArray) {\n    return timeArray.map(time => {\n      if (time.from === '00H00' && time.to === '00H00') {\n        return '';\n      } else {\n        return `${time.from}-${time.to}`;\n      }\n    }).filter(time => time !== '').join('|');\n  }\n  const handleSubmit = values => {\n    if (isEditing) {\n      delete values.roleName;\n    }\n    if (!values.level) {\n      values.level = 1;\n    }\n    if (!values.status) {\n      values.status = 0;\n    }\n    if (!values.salaryKind) {\n      values.salaryKind = 0;\n    }\n    for (const day in values.schedule) {\n      for (const timeRange of values.schedule[day]) {\n        timeRange.from = timeRange.from.set({\n          hour: 0,\n          minute: 0\n        }).format('HH[H]mm');\n        timeRange.to = timeRange.to.set({\n          hour: 0,\n          minute: 0\n        }).format('HH[H]mm');\n      }\n    }\n    const newSchedule = {\n      t2: formatTimeRange(values.schedule.monday),\n      t3: formatTimeRange(values.schedule.tuesday),\n      t4: formatTimeRange(values.schedule.wednesday),\n      t5: formatTimeRange(values.schedule.thursday),\n      t6: formatTimeRange(values.schedule.friday),\n      t7: formatTimeRange(values.schedule.saturday),\n      cn: formatTimeRange(values.schedule.sunday)\n    };\n    const filterNewSchedule = Object.entries(newSchedule).filter(([key, value]) => value !== '').reduce((acc, [key, value]) => {\n      acc[key] = value;\n      return acc;\n    }, {});\n    values.schedule = values.schedule && JSON.stringify(filterNewSchedule);\n    values.birthday = formatDateString(values?.birthday, DATE_FORMAT_VALUE) + ' 00:00:00';\n    return mixinFuncs.handleSubmit({\n      ...values,\n      avatar: imageUrl,\n      developerRoleId: values.developerRole.id\n    });\n  };\n  function addFrameTime(data) {\n    const result = {};\n    const keys = ['t2', 't3', 't4', 't5', 't6', 't7', 'cn'];\n    keys.forEach(key => {\n      if (Object.hasOwnProperty.call(data, key)) {\n        result[key] = data[key];\n      } else {\n        result[key] = '00H00-00H00|00H00-00H00|00H00-00H00';\n      }\n    });\n\n    // Split time and update missing fields\n    Object.keys(result).forEach(key => {\n      const timeArray = result[key].split('|');\n      if (timeArray.length < 3) {\n        while (timeArray.length < 3) {\n          timeArray.push('00H00-00H00');\n        }\n        result[key] = timeArray.join('|');\n      }\n    });\n    return result;\n  }\n  const splitTime = data => {\n    const result = {};\n    const dataNew = {\n      monday: data.t2,\n      tuesday: data.t3,\n      wednesday: data.t4,\n      thursday: data.t5,\n      friday: data.t6,\n      saturday: data.t7,\n      sunday: data.cn\n    };\n    for (const key in dataNew) {\n      if (Object.hasOwn(dataNew, key)) {\n        const value = dataNew[key];\n        if (value && value.length > 0) {\n          const timeRanges = value.split('|');\n          const fromTo = timeRanges.map(timeRange => {\n            const [from, to] = timeRange.split('-');\n            return {\n              from,\n              to\n            };\n          });\n          result[key] = fromTo;\n        }\n      }\n    }\n    return result;\n  };\n  useEffect(() => {\n    let data = dataDetail?.schedule && JSON.parse(dataDetail?.schedule);\n    if (data) {\n      const dataFullFrame = addFrameTime(data);\n      data = splitTime(dataFullFrame);\n    }\n    let dataDefault = {};\n    daysOfWeekSchedule.map(day => {\n      dataDefault = {\n        [day.value]: [{\n          from: '00H00',\n          to: '00H00'\n        }, {\n          from: '00H00',\n          to: '00H00'\n        }, {\n          from: '00H00',\n          to: '00H00'\n        }],\n        ...dataDefault\n      };\n    });\n    for (const day in data) {\n      for (const timeRange of data[day]) {\n        timeRange.from = dayjs(timeRange.from, 'HH:mm');\n        timeRange.to = dayjs(timeRange.to, 'HH:mm');\n      }\n    }\n    for (const day in dataDefault) {\n      for (const timeRange of dataDefault[day]) {\n        timeRange.from = dayjs(timeRange.from, 'HH:mm');\n        timeRange.to = dayjs(timeRange.to, 'HH:mm');\n      }\n    }\n    dataDetail.schedule = data || dataDefault;\n    dataDetail.birthday = dataDetail?.accountDto?.birthday && dayjs(dataDetail?.accountDto?.birthday, DATE_FORMAT_VALUE);\n    form.setFieldsValue({\n      ...dataDetail,\n      fullName: dataDetail?.accountDto?.fullName,\n      phone: dataDetail?.accountDto?.phone,\n      email: dataDetail?.accountDto?.email,\n      leaderId: dataDetail?.leader?.accountDto?.id,\n      studentId: dataDetail?.student?.account?.id\n    });\n    setImageUrl(dataDetail.accountDto?.avatar);\n  }, [dataDetail]);\n  useEffect(() => {\n    if (!isEditing > 0) {\n      form.setFieldsValue({\n        status: statusValues[1].value,\n        salaryKind: salaryValues[1].value\n      });\n    }\n  }, [isEditing]);\n  const onSelectScheduleTabletRandom = (fieldName, value) => {\n    try {\n      const schedule = getFieldValue('schedule');\n      const [dayKey, dayIndexKey, frameKey] = fieldName;\n      if (frameKey === 'from') {\n        const to = schedule[dayKey][dayIndexKey].to;\n        if (to && to.format(TIME_FORMAT_DISPLAY) < value.format(TIME_FORMAT_DISPLAY)) {\n          // schedule[dayKey][dayIndexKey].to = value;\n        }\n      } else if (frameKey === 'to') {\n        const from = schedule[dayKey][dayIndexKey].from;\n        if (from && value.format(TIME_FORMAT_DISPLAY) < from.format(TIME_FORMAT_DISPLAY)) {\n          value = from;\n        }\n      }\n      schedule[dayKey][dayIndexKey][frameKey] = value;\n      setFieldValue('schedule', schedule);\n      onValuesChange();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleOk = () => {\n    document.activeElement.blur();\n  };\n  const handleTimeChange = (fieldName, value) => {\n    if (!value) {\n      try {\n        const schedule = getFieldValue('schedule');\n        const [dayKey, dayIndexKey, frameKey] = fieldName;\n        if (frameKey === 'from') {\n          schedule[dayKey][dayIndexKey].from = dayjs('00:00', 'HH:mm');\n        } else if (frameKey === 'to') {\n          schedule[dayKey][dayIndexKey].to = dayjs('00:00', 'HH:mm');\n          // schedule[dayKey][dayIndexKey].to = schedule[dayKey][dayIndexKey].from;\n        }\n        setFieldValue('schedule', schedule);\n        onValuesChange();\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n  const handleReset = day => {\n    const schedule = getFieldValue('schedule');\n    for (let dayIndexKey = 0; dayIndexKey < 3; dayIndexKey++) {\n      schedule[day][dayIndexKey].from = dayjs('00:00', 'HH:mm');\n      schedule[day][dayIndexKey].to = dayjs('00:00', 'HH:mm');\n    }\n    setFieldValue('schedule', schedule);\n    onValuesChange();\n  };\n  const handleApplyAll = e => {\n    e.preventDefault();\n    const schedule = getFieldValue('schedule');\n    const {\n      monday = []\n    } = schedule;\n    for (let {\n      value\n    } of daysOfWeekSchedule) {\n      schedule[value] = monday.map(frame => ({\n        from: dayjs(frame.from, TIME_FORMAT_DISPLAY),\n        to: dayjs(frame.to, TIME_FORMAT_DISPLAY)\n      }));\n    }\n    // form.resetFields();\n    setFieldValue('schedule', schedule);\n    onValuesChange();\n  };\n  const onFieldsChange = () => {\n    onValuesChange();\n  };\n  const {\n    execute: executeUpFile\n  } = useFetch(apiConfig.file.upload);\n  const uploadFile = (file, onSuccess, onError) => {\n    executeUpFile({\n      data: {\n        type: 'AVATAR',\n        file: file\n      },\n      onCompleted: response => {\n        if (response.result === true) {\n          onSuccess();\n          setImageUrl(response.data.filePath);\n          setIsChangedFormValues(true);\n        }\n      },\n      onError: error => {\n        onError();\n      }\n    });\n  };\n  const checkPhone = (_, value) => {\n    const phoneRegex = /^[0-9]{10}$/; // Regex để kiểm tra số điện thoại có 10 chữ số\n    if (!phoneRegex.test(value)) {\n      return Promise.reject('Số điện thoại không hợp lệ, vui lòng nhập lại');\n    }\n    return Promise.resolve();\n  };\n  return /*#__PURE__*/React.createElement(BaseForm, {\n    formId: formId,\n    onFinish: handleSubmit,\n    form: form,\n    onFieldsChange: onFieldsChange,\n    size: \"1100px\"\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-form\",\n    bordered: false\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '980px'\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 16\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12\n  }, /*#__PURE__*/React.createElement(CropImageField, {\n    label: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"modules.account.developer.DeveloperForm.2018760484\",\n      defaultMessage: \"Avatar\"\n    }),\n    name: \"avatar\",\n    imageUrl: imageUrl && `${AppConstants.contentRootUrl}${imageUrl}`,\n    aspect: 1 / 1,\n    uploadFile: uploadFile\n  }))), /*#__PURE__*/React.createElement(Row, {\n    gutter: 16\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: translate.formatMessage(commonMessage.name),\n    required: isEditing ? false : true,\n    disabled: isEditing,\n    name: \"fullName\"\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 12\n  }, /*#__PURE__*/React.createElement(DatePickerField, {\n    name: \"birthday\",\n    label: \"Ng\\xE0y sinh\",\n    placeholder: \"Ng\\xE0y sinh\",\n    format: DATE_FORMAT_VALUE,\n    style: {\n      width: '100%'\n    },\n    required: isEditing ? false : true,\n    rules: [{\n      validator: validateDate\n    }]\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 12\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: translate.formatMessage(commonMessage.phone),\n    type: \"phone\",\n    name: \"phone\",\n    required: isEditing ? false : true,\n    rules: [{\n      validator: checkPhone\n    }]\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 12\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: translate.formatMessage(commonMessage.email),\n    type: \"email\",\n    name: \"email\",\n    required: isEditing ? false : true\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 12\n  }, /*#__PURE__*/React.createElement(NumericField, {\n    label: translate.formatMessage(commonMessage.hourlySalary),\n    name: \"hourlySalary\",\n    min: 0,\n    max: 100000000000000,\n    addonAfter: \"$\"\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 12\n  }, /*#__PURE__*/React.createElement(NumericField, {\n    label: translate.formatMessage(commonMessage.salary),\n    name: \"salary\",\n    min: 0,\n    max: 100000000000000,\n    addonAfter: \"$\"\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 12\n  }, /*#__PURE__*/React.createElement(AutoCompleteField, {\n    label: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"modules.account.developer.DeveloperForm.162306282\",\n      defaultMessage: \"Leader\"\n    }),\n    name: \"leaderId\",\n    apiConfig: apiConfig.developer.autocomplete,\n    mappingOptions: item => ({\n      value: item.id,\n      label: item.account.fullName\n    })\n    // initialSearchParams={{ pageNumber: 0 }}\n    ,\n    searchParams: text => ({\n      name: text\n    })\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 12\n  }, /*#__PURE__*/React.createElement(AutoCompleteField, {\n    label: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"modules.account.developer.DeveloperForm.3139586306\",\n      defaultMessage: \"Vai tr\\xF2 d\\u1EF1 \\xE1n\"\n    }),\n    name: ['developerRole', 'id'],\n    apiConfig: apiConfig.category.autocomplete,\n    mappingOptions: item => ({\n      value: item.id,\n      label: item.categoryName\n    }),\n    initialSearchParams: {\n      kind: categoryKinds.CATEGORY_KIND_ROLE\n    },\n    searchParams: text => ({\n      categoryName: text\n    }),\n    required: isEditing ? false : true\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 12\n  }, /*#__PURE__*/React.createElement(AutoCompleteField, {\n    label: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"modules.account.developer.DeveloperForm.2384192347\",\n      defaultMessage: \"Sinh vi\\xEAn\"\n    }),\n    name: ['studentId'],\n    apiConfig: apiConfig.student.autocomplete,\n    mappingOptions: item => ({\n      value: item.id,\n      label: item.account.fullName\n    })\n    // initialSearchParams={{ kind: categoryKinds.CATEGORY_KIND_ROLE }}\n    ,\n    searchParams: text => ({\n      fullName: text\n    }),\n    onChange: value => console.log(value)\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 12\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: translate.formatMessage(commonMessage.password),\n    rules: [{\n      min: 6,\n      message: 'Mật khẩu phải có ít nhất 6 kí tự!'\n    }],\n    required: isEditing ? false : true,\n    name: \"password\",\n    type: \"password\"\n  }))), /*#__PURE__*/React.createElement(ScheduleTable, {\n    handleOk: handleOk,\n    label: translate.formatMessage(commonMessage.schedule),\n    onSelectScheduleTabletRandom: onSelectScheduleTabletRandom,\n    translate: translate,\n    handleApplyAll: handleApplyAll,\n    daysOfWeekSchedule: daysOfWeekSchedule,\n    handleTimeChange: handleTimeChange,\n    handleReset: handleReset\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer-card-form\",\n    style: {\n      marginTop: '20px',\n      marginRight: '69px'\n    }\n  }, actions)));\n};\n_s(DeveloperForm, \"7DZTW1mOcxpcbOZNcNTmdCM9/4k=\", false, function () {\n  return [useTranslate, useBasicForm, useFetch];\n});\n_c = DeveloperForm;\nexport default DeveloperForm;\nvar _c;\n$RefreshReg$(_c, \"DeveloperForm\");","map":{"version":3,"names":["AutoCompleteField","BaseForm","SelectField","TextField","apiConfig","SalaryOptions","levelOptionSelect","sALARYOptions","statusOptions","useBasicForm","useFetch","useTranslate","Card","Col","Form","Row","React","useEffect","useState","FormattedMessage","defineMessages","commonMessage","ScheduleTable","AppConstants","DATE_FORMAT_VALUE","TIME_FORMAT_DISPLAY","categoryKinds","dayjs","daysOfWeekSchedule","daysOfWeekScheduleOptions","NumericField","CropImageField","DatePickerField","validateDate","formatDateString","DeveloperForm","props","_s","translate","formId","actions","onSubmit","dataDetail","setIsChangedFormValues","isEditing","statusValues","formatKeys","salaryValues","form","mixinFuncs","onValuesChange","setFieldValue","getFieldValue","imageUrl","setImageUrl","formatTimeRange","timeArray","map","time","from","to","filter","join","handleSubmit","values","roleName","level","status","salaryKind","day","schedule","timeRange","set","hour","minute","format","newSchedule","t2","monday","t3","tuesday","t4","wednesday","t5","thursday","t6","friday","t7","saturday","cn","sunday","filterNewSchedule","Object","entries","key","value","reduce","acc","JSON","stringify","birthday","avatar","developerRoleId","developerRole","id","addFrameTime","data","result","keys","forEach","hasOwnProperty","call","split","length","push","splitTime","dataNew","hasOwn","timeRanges","fromTo","parse","dataFullFrame","dataDefault","accountDto","setFieldsValue","fullName","phone","email","leaderId","leader","studentId","student","account","onSelectScheduleTabletRandom","fieldName","dayKey","dayIndexKey","frameKey","error","console","log","handleOk","document","activeElement","blur","handleTimeChange","handleReset","handleApplyAll","e","preventDefault","frame","onFieldsChange","execute","executeUpFile","file","upload","uploadFile","onSuccess","onError","type","onCompleted","response","filePath","checkPhone","_","phoneRegex","test","Promise","reject","resolve","createElement","onFinish","size","className","bordered","style","width","gutter","span","label","defaultMessage","name","contentRootUrl","aspect","formatMessage","required","disabled","placeholder","rules","validator","hourlySalary","min","max","addonAfter","salary","developer","autocomplete","mappingOptions","item","searchParams","text","category","categoryName","initialSearchParams","kind","CATEGORY_KIND_ROLE","onChange","password","message","marginTop","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/PC/Downloads/elms-cms/elms-cms/source/src/modules/account/developer/DeveloperForm.js"],"sourcesContent":["import AutoCompleteField from '@components/common/form/AutoCompleteField';\r\nimport { BaseForm } from '@components/common/form/BaseForm';\r\nimport SelectField from '@components/common/form/SelectField';\r\nimport TextField from '@components/common/form/TextField';\r\nimport apiConfig from '@constants/apiConfig';\r\nimport { SalaryOptions, levelOptionSelect, sALARYOptions, statusOptions } from '@constants/masterData';\r\nimport useBasicForm from '@hooks/useBasicForm';\r\nimport useFetch from '@hooks/useFetch';\r\nimport useTranslate from '@hooks/useTranslate';\r\nimport { Card, Col, Form, Row } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { FormattedMessage, defineMessages } from 'react-intl';\r\nimport { commonMessage } from '@locales/intl';\r\nimport ScheduleTable from '@components/common/table/ScheduleTable';\r\nimport { AppConstants, DATE_FORMAT_VALUE, TIME_FORMAT_DISPLAY, categoryKinds } from '@constants';\r\nimport dayjs from 'dayjs';\r\nimport { daysOfWeekSchedule as daysOfWeekScheduleOptions } from '@constants/masterData';\r\nimport NumericField from '@components/common/form/NumericField';\r\nimport CropImageField from '@components/common/form/CropImageField';\r\nimport DatePickerField from '@components/common/form/DatePickerField';\r\nimport { validateDate } from '@utils/dayHelper';\r\nimport { formatDateString } from '@utils';\r\n\r\nconst DeveloperForm = (props) => {\r\n    const translate = useTranslate();\r\n    const { formId, actions, onSubmit, dataDetail, setIsChangedFormValues, isEditing } = props;\r\n    const statusValues = translate.formatKeys(statusOptions, ['label']);\r\n    const salaryValues = translate.formatKeys(SalaryOptions, ['label']);\r\n    const daysOfWeekSchedule = translate.formatKeys(daysOfWeekScheduleOptions, ['label']);\r\n    const { form, mixinFuncs, onValuesChange, setFieldValue, getFieldValue } = useBasicForm({\r\n        onSubmit,\r\n        setIsChangedFormValues,\r\n    });\r\n    const [imageUrl, setImageUrl] = useState(null);\r\n    function formatTimeRange(timeArray) {\r\n        return timeArray\r\n            .map((time) => {\r\n                if (time.from === '00H00' && time.to === '00H00') {\r\n                    return '';\r\n                } else {\r\n                    return `${time.from}-${time.to}`;\r\n                }\r\n            })\r\n            .filter((time) => time !== '')\r\n            .join('|');\r\n    }\r\n    const handleSubmit = (values) => {\r\n        if (isEditing) {\r\n            delete values.roleName;\r\n        }\r\n        if (!values.level) {\r\n            values.level = 1;\r\n        }\r\n        if (!values.status) {\r\n            values.status = 0;\r\n        }\r\n        if (!values.salaryKind) {\r\n            values.salaryKind = 0;\r\n        }\r\n        for (const day in values.schedule) {\r\n            for (const timeRange of values.schedule[day]) {\r\n                timeRange.from = timeRange.from.set({ hour: 0, minute: 0 }).format('HH[H]mm');\r\n                timeRange.to = timeRange.to.set({ hour: 0, minute: 0 }).format('HH[H]mm');\r\n            }\r\n        }\r\n        const newSchedule = {\r\n            t2: formatTimeRange(values.schedule.monday),\r\n            t3: formatTimeRange(values.schedule.tuesday),\r\n            t4: formatTimeRange(values.schedule.wednesday),\r\n            t5: formatTimeRange(values.schedule.thursday),\r\n            t6: formatTimeRange(values.schedule.friday),\r\n            t7: formatTimeRange(values.schedule.saturday),\r\n            cn: formatTimeRange(values.schedule.sunday),\r\n        };\r\n        const filterNewSchedule = Object.entries(newSchedule)\r\n            .filter(([key, value]) => value !== '')\r\n            .reduce((acc, [key, value]) => {\r\n                acc[key] = value;\r\n                return acc;\r\n            }, {});\r\n        values.schedule = values.schedule && JSON.stringify(filterNewSchedule);\r\n        values.birthday = formatDateString(values?.birthday, DATE_FORMAT_VALUE) + ' 00:00:00';\r\n        return mixinFuncs.handleSubmit({ ...values, avatar: imageUrl, developerRoleId: values.developerRole.id });\r\n    };\r\n    function addFrameTime(data) {\r\n        const result = {};\r\n        const keys = ['t2', 't3', 't4', 't5', 't6', 't7', 'cn'];\r\n\r\n        keys.forEach((key) => {\r\n            if (Object.hasOwnProperty.call(data, key)) {\r\n                result[key] = data[key];\r\n            } else {\r\n                result[key] = '00H00-00H00|00H00-00H00|00H00-00H00';\r\n            }\r\n        });\r\n\r\n        // Split time and update missing fields\r\n        Object.keys(result).forEach((key) => {\r\n            const timeArray = result[key].split('|');\r\n            if (timeArray.length < 3) {\r\n                while (timeArray.length < 3) {\r\n                    timeArray.push('00H00-00H00');\r\n                }\r\n                result[key] = timeArray.join('|');\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    const splitTime = (data) => {\r\n        const result = {};\r\n        const dataNew = {\r\n            monday: data.t2,\r\n            tuesday: data.t3,\r\n            wednesday: data.t4,\r\n            thursday: data.t5,\r\n            friday: data.t6,\r\n            saturday: data.t7,\r\n            sunday: data.cn,\r\n        };\r\n        for (const key in dataNew) {\r\n            if (Object.hasOwn(dataNew, key)) {\r\n                const value = dataNew[key];\r\n                if (value && value.length > 0) {\r\n                    const timeRanges = value.split('|');\r\n                    const fromTo = timeRanges.map((timeRange) => {\r\n                        const [from, to] = timeRange.split('-');\r\n                        return {\r\n                            from,\r\n                            to,\r\n                        };\r\n                    });\r\n                    result[key] = fromTo;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    useEffect(() => {\r\n        let data = dataDetail?.schedule && JSON.parse(dataDetail?.schedule);\r\n        if (data) {\r\n            const dataFullFrame = addFrameTime(data);\r\n            data = splitTime(dataFullFrame);\r\n        }\r\n        let dataDefault = {};\r\n        daysOfWeekSchedule.map((day) => {\r\n            dataDefault = {\r\n                [day.value]: [\r\n                    {\r\n                        from: '00H00',\r\n                        to: '00H00',\r\n                    },\r\n                    {\r\n                        from: '00H00',\r\n                        to: '00H00',\r\n                    },\r\n                    {\r\n                        from: '00H00',\r\n                        to: '00H00',\r\n                    },\r\n                ],\r\n                ...dataDefault,\r\n            };\r\n        });\r\n        for (const day in data) {\r\n            for (const timeRange of data[day]) {\r\n                timeRange.from = dayjs(timeRange.from, 'HH:mm');\r\n                timeRange.to = dayjs(timeRange.to, 'HH:mm');\r\n            }\r\n        }\r\n        for (const day in dataDefault) {\r\n            for (const timeRange of dataDefault[day]) {\r\n                timeRange.from = dayjs(timeRange.from, 'HH:mm');\r\n                timeRange.to = dayjs(timeRange.to, 'HH:mm');\r\n            }\r\n        }\r\n\r\n        dataDetail.schedule = data || dataDefault;\r\n        dataDetail.birthday =\r\n            dataDetail?.accountDto?.birthday && dayjs(dataDetail?.accountDto?.birthday, DATE_FORMAT_VALUE);\r\n        form.setFieldsValue({\r\n            ...dataDetail,\r\n            fullName: dataDetail?.accountDto?.fullName,\r\n            phone: dataDetail?.accountDto?.phone,\r\n            email: dataDetail?.accountDto?.email,\r\n            leaderId: dataDetail?.leader?.accountDto?.id,\r\n            studentId: dataDetail?.student?.account?.id,\r\n        });\r\n\r\n        setImageUrl(dataDetail.accountDto?.avatar);\r\n    }, [dataDetail]);\r\n    useEffect(() => {\r\n        if (!isEditing > 0) {\r\n            form.setFieldsValue({\r\n                status: statusValues[1].value,\r\n                salaryKind: salaryValues[1].value,\r\n            });\r\n        }\r\n    }, [isEditing]);\r\n    const onSelectScheduleTabletRandom = (fieldName, value) => {\r\n        try {\r\n            const schedule = getFieldValue('schedule');\r\n            const [dayKey, dayIndexKey, frameKey] = fieldName;\r\n            if (frameKey === 'from') {\r\n                const to = schedule[dayKey][dayIndexKey].to;\r\n                if (to && to.format(TIME_FORMAT_DISPLAY) < value.format(TIME_FORMAT_DISPLAY)) {\r\n                    // schedule[dayKey][dayIndexKey].to = value;\r\n                }\r\n            } else if (frameKey === 'to') {\r\n                const from = schedule[dayKey][dayIndexKey].from;\r\n                if (from && value.format(TIME_FORMAT_DISPLAY) < from.format(TIME_FORMAT_DISPLAY)) {\r\n                    value = from;\r\n                }\r\n            }\r\n            schedule[dayKey][dayIndexKey][frameKey] = value;\r\n            setFieldValue('schedule', schedule);\r\n            onValuesChange();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    const handleOk = () => {\r\n        document.activeElement.blur();\r\n    };\r\n    const handleTimeChange = (fieldName, value) => {\r\n        if (!value) {\r\n            try {\r\n                const schedule = getFieldValue('schedule');\r\n                const [dayKey, dayIndexKey, frameKey] = fieldName;\r\n                if (frameKey === 'from') {\r\n                    schedule[dayKey][dayIndexKey].from = dayjs('00:00', 'HH:mm');\r\n                } else if (frameKey === 'to') {\r\n                    schedule[dayKey][dayIndexKey].to = dayjs('00:00', 'HH:mm');\r\n                    // schedule[dayKey][dayIndexKey].to = schedule[dayKey][dayIndexKey].from;\r\n                }\r\n                setFieldValue('schedule', schedule);\r\n                onValuesChange();\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    };\r\n    const handleReset = (day) => {\r\n        const schedule = getFieldValue('schedule');\r\n        for (let dayIndexKey = 0; dayIndexKey < 3; dayIndexKey++) {\r\n            schedule[day][dayIndexKey].from = dayjs('00:00', 'HH:mm');\r\n            schedule[day][dayIndexKey].to = dayjs('00:00', 'HH:mm');\r\n        }\r\n        setFieldValue('schedule', schedule);\r\n        onValuesChange();\r\n    };\r\n    const handleApplyAll = (e) => {\r\n        e.preventDefault();\r\n        const schedule = getFieldValue('schedule');\r\n        const { monday = [] } = schedule;\r\n\r\n        for (let { value } of daysOfWeekSchedule) {\r\n            schedule[value] = monday.map((frame) => ({\r\n                from: dayjs(frame.from, TIME_FORMAT_DISPLAY),\r\n                to: dayjs(frame.to, TIME_FORMAT_DISPLAY),\r\n            }));\r\n        }\r\n        // form.resetFields();\r\n        setFieldValue('schedule', schedule);\r\n        onValuesChange();\r\n    };\r\n    const onFieldsChange = () => {\r\n        onValuesChange();\r\n    };\r\n    const { execute: executeUpFile } = useFetch(apiConfig.file.upload);\r\n    const uploadFile = (file, onSuccess, onError) => {\r\n        executeUpFile({\r\n            data: {\r\n                type: 'AVATAR',\r\n                file: file,\r\n            },\r\n            onCompleted: (response) => {\r\n                if (response.result === true) {\r\n                    onSuccess();\r\n                    setImageUrl(response.data.filePath);\r\n                    setIsChangedFormValues(true);\r\n                }\r\n            },\r\n            onError: (error) => {\r\n                onError();\r\n            },\r\n        });\r\n    };\r\n\r\n    const checkPhone = (_, value) => {\r\n        const phoneRegex = /^[0-9]{10}$/; // Regex để kiểm tra số điện thoại có 10 chữ số\r\n        if (!phoneRegex.test(value)) {\r\n            return Promise.reject('Số điện thoại không hợp lệ, vui lòng nhập lại');\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n\r\n    return (\r\n        <BaseForm formId={formId} onFinish={handleSubmit} form={form} onFieldsChange={onFieldsChange} size=\"1100px\">\r\n            <Card className=\"card-form\" bordered={false}>\r\n                <div style={{ width: '980px' }}>\r\n                    <Row gutter={16}>\r\n                        <Col span={12}>\r\n                            <CropImageField\r\n                                label={<FormattedMessage defaultMessage=\"Avatar\" />}\r\n                                name=\"avatar\"\r\n                                imageUrl={imageUrl && `${AppConstants.contentRootUrl}${imageUrl}`}\r\n                                aspect={1 / 1}\r\n                                uploadFile={uploadFile}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={16}>\r\n                        <Col span={12}>\r\n                            <TextField\r\n                                label={translate.formatMessage(commonMessage.name)}\r\n                                required={isEditing ? false : true}\r\n                                disabled={isEditing}\r\n                                name=\"fullName\"\r\n                            />\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <DatePickerField\r\n                                name=\"birthday\"\r\n                                label=\"Ngày sinh\"\r\n                                placeholder=\"Ngày sinh\"\r\n                                format={DATE_FORMAT_VALUE}\r\n                                style={{ width: '100%' }}\r\n                                required={isEditing ? false : true}\r\n                                rules={[\r\n                                    {\r\n                                        validator: validateDate,\r\n                                    },\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <TextField\r\n                                label={translate.formatMessage(commonMessage.phone)}\r\n                                type=\"phone\"\r\n                                name=\"phone\"\r\n                                required={isEditing ? false : true}\r\n                                rules={[\r\n                                    {\r\n                                        validator: checkPhone,\r\n                                    },\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <TextField\r\n                                label={translate.formatMessage(commonMessage.email)}\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                required={isEditing ? false : true}\r\n                            />\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <NumericField\r\n                                label={translate.formatMessage(commonMessage.hourlySalary)}\r\n                                name=\"hourlySalary\"\r\n                                min={0}\r\n                                max={100000000000000}\r\n                                addonAfter=\"$\"\r\n                            />\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <NumericField\r\n                                label={translate.formatMessage(commonMessage.salary)}\r\n                                name=\"salary\"\r\n                                min={0}\r\n                                max={100000000000000}\r\n                                addonAfter=\"$\"\r\n                            />\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <AutoCompleteField\r\n                                label={<FormattedMessage defaultMessage=\"Leader\" />}\r\n                                name=\"leaderId\"\r\n                                apiConfig={apiConfig.developer.autocomplete}\r\n                                mappingOptions={(item) => ({ value: item.id, label: item.account.fullName })}\r\n                                // initialSearchParams={{ pageNumber: 0 }}\r\n                                searchParams={(text) => ({ name: text })}\r\n                            />\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <AutoCompleteField\r\n                                label={<FormattedMessage defaultMessage=\"Vai trò dự án\" />}\r\n                                name={['developerRole', 'id']}\r\n                                apiConfig={apiConfig.category.autocomplete}\r\n                                mappingOptions={(item) => ({ value: item.id, label: item.categoryName })}\r\n                                initialSearchParams={{ kind: categoryKinds.CATEGORY_KIND_ROLE }}\r\n                                searchParams={(text) => ({ categoryName: text })}\r\n                                required={isEditing ? false : true}\r\n                            />\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <AutoCompleteField\r\n                                label={<FormattedMessage defaultMessage=\"Sinh viên\" />}\r\n                                name={['studentId']}\r\n                                apiConfig={apiConfig.student.autocomplete}\r\n                                mappingOptions={(item) => ({ value: item.id, label: item.account.fullName })}\r\n                                // initialSearchParams={{ kind: categoryKinds.CATEGORY_KIND_ROLE }}\r\n                                searchParams={(text) => ({ fullName: text })}\r\n                                onChange={(value) => console.log(value)}\r\n                            />\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <TextField\r\n                                label={translate.formatMessage(commonMessage.password)}\r\n                                rules={[\r\n                                    {\r\n                                        min: 6,\r\n                                        message: 'Mật khẩu phải có ít nhất 6 kí tự!',\r\n                                    },\r\n                                ]}\r\n                                required={isEditing ? false : true}\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <ScheduleTable\r\n                        handleOk={handleOk}\r\n                        label={translate.formatMessage(commonMessage.schedule)}\r\n                        onSelectScheduleTabletRandom={onSelectScheduleTabletRandom}\r\n                        translate={translate}\r\n                        handleApplyAll={handleApplyAll}\r\n                        daysOfWeekSchedule={daysOfWeekSchedule}\r\n                        handleTimeChange={handleTimeChange}\r\n                        handleReset={handleReset}\r\n                    />\r\n                </div>\r\n                <div className=\"footer-card-form\" style={{ marginTop: '20px', marginRight: '69px' }}>\r\n                    {actions}\r\n                </div>\r\n            </Card>\r\n        </BaseForm>\r\n    );\r\n};\r\n\r\nexport default DeveloperForm;\r\n"],"mappings":";AAAA,OAAOA,iBAAiB,MAAM,2CAA2C;AACzE,SAASC,QAAQ,QAAQ,kCAAkC;AAC3D,OAAOC,WAAW,MAAM,qCAAqC;AAC7D,OAAOC,SAAS,MAAM,mCAAmC;AACzD,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,SAASC,aAAa,EAAEC,iBAAiB,EAAEC,aAAa,EAAEC,aAAa,QAAQ,uBAAuB;AACtG,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,SAASC,IAAI,EAAEC,GAAG,EAAEC,IAAI,EAAEC,GAAG,QAAQ,MAAM;AAC3C,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,gBAAgB,EAAEC,cAAc,QAAQ,YAAY;AAC7D,SAASC,aAAa,QAAQ,eAAe;AAC7C,OAAOC,aAAa,MAAM,wCAAwC;AAClE,SAASC,YAAY,EAAEC,iBAAiB,EAAEC,mBAAmB,EAAEC,aAAa,QAAQ,YAAY;AAChG,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,kBAAkB,IAAIC,yBAAyB,QAAQ,uBAAuB;AACvF,OAAOC,YAAY,MAAM,sCAAsC;AAC/D,OAAOC,cAAc,MAAM,wCAAwC;AACnE,OAAOC,eAAe,MAAM,yCAAyC;AACrE,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,gBAAgB,QAAQ,QAAQ;AAEzC,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAMC,SAAS,GAAG3B,YAAY,CAAC,CAAC;EAChC,MAAM;IAAE4B,MAAM;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,UAAU;IAAEC,sBAAsB;IAAEC;EAAU,CAAC,GAAGR,KAAK;EAC1F,MAAMS,YAAY,GAAGP,SAAS,CAACQ,UAAU,CAACtC,aAAa,EAAE,CAAC,OAAO,CAAC,CAAC;EACnE,MAAMuC,YAAY,GAAGT,SAAS,CAACQ,UAAU,CAACzC,aAAa,EAAE,CAAC,OAAO,CAAC,CAAC;EACnE,MAAMuB,kBAAkB,GAAGU,SAAS,CAACQ,UAAU,CAACjB,yBAAyB,EAAE,CAAC,OAAO,CAAC,CAAC;EACrF,MAAM;IAAEmB,IAAI;IAAEC,UAAU;IAAEC,cAAc;IAAEC,aAAa;IAAEC;EAAc,CAAC,GAAG3C,YAAY,CAAC;IACpFgC,QAAQ;IACRE;EACJ,CAAC,CAAC;EACF,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EAC9C,SAASqC,eAAeA,CAACC,SAAS,EAAE;IAChC,OAAOA,SAAS,CACXC,GAAG,CAAEC,IAAI,IAAK;MACX,IAAIA,IAAI,CAACC,IAAI,KAAK,OAAO,IAAID,IAAI,CAACE,EAAE,KAAK,OAAO,EAAE;QAC9C,OAAO,EAAE;MACb,CAAC,MAAM;QACH,OAAQ,GAAEF,IAAI,CAACC,IAAK,IAAGD,IAAI,CAACE,EAAG,EAAC;MACpC;IACJ,CAAC,CAAC,CACDC,MAAM,CAAEH,IAAI,IAAKA,IAAI,KAAK,EAAE,CAAC,CAC7BI,IAAI,CAAC,GAAG,CAAC;EAClB;EACA,MAAMC,YAAY,GAAIC,MAAM,IAAK;IAC7B,IAAIpB,SAAS,EAAE;MACX,OAAOoB,MAAM,CAACC,QAAQ;IAC1B;IACA,IAAI,CAACD,MAAM,CAACE,KAAK,EAAE;MACfF,MAAM,CAACE,KAAK,GAAG,CAAC;IACpB;IACA,IAAI,CAACF,MAAM,CAACG,MAAM,EAAE;MAChBH,MAAM,CAACG,MAAM,GAAG,CAAC;IACrB;IACA,IAAI,CAACH,MAAM,CAACI,UAAU,EAAE;MACpBJ,MAAM,CAACI,UAAU,GAAG,CAAC;IACzB;IACA,KAAK,MAAMC,GAAG,IAAIL,MAAM,CAACM,QAAQ,EAAE;MAC/B,KAAK,MAAMC,SAAS,IAAIP,MAAM,CAACM,QAAQ,CAACD,GAAG,CAAC,EAAE;QAC1CE,SAAS,CAACZ,IAAI,GAAGY,SAAS,CAACZ,IAAI,CAACa,GAAG,CAAC;UAAEC,IAAI,EAAE,CAAC;UAAEC,MAAM,EAAE;QAAE,CAAC,CAAC,CAACC,MAAM,CAAC,SAAS,CAAC;QAC7EJ,SAAS,CAACX,EAAE,GAAGW,SAAS,CAACX,EAAE,CAACY,GAAG,CAAC;UAAEC,IAAI,EAAE,CAAC;UAAEC,MAAM,EAAE;QAAE,CAAC,CAAC,CAACC,MAAM,CAAC,SAAS,CAAC;MAC7E;IACJ;IACA,MAAMC,WAAW,GAAG;MAChBC,EAAE,EAAEtB,eAAe,CAACS,MAAM,CAACM,QAAQ,CAACQ,MAAM,CAAC;MAC3CC,EAAE,EAAExB,eAAe,CAACS,MAAM,CAACM,QAAQ,CAACU,OAAO,CAAC;MAC5CC,EAAE,EAAE1B,eAAe,CAACS,MAAM,CAACM,QAAQ,CAACY,SAAS,CAAC;MAC9CC,EAAE,EAAE5B,eAAe,CAACS,MAAM,CAACM,QAAQ,CAACc,QAAQ,CAAC;MAC7CC,EAAE,EAAE9B,eAAe,CAACS,MAAM,CAACM,QAAQ,CAACgB,MAAM,CAAC;MAC3CC,EAAE,EAAEhC,eAAe,CAACS,MAAM,CAACM,QAAQ,CAACkB,QAAQ,CAAC;MAC7CC,EAAE,EAAElC,eAAe,CAACS,MAAM,CAACM,QAAQ,CAACoB,MAAM;IAC9C,CAAC;IACD,MAAMC,iBAAiB,GAAGC,MAAM,CAACC,OAAO,CAACjB,WAAW,CAAC,CAChDf,MAAM,CAAC,CAAC,CAACiC,GAAG,EAAEC,KAAK,CAAC,KAAKA,KAAK,KAAK,EAAE,CAAC,CACtCC,MAAM,CAAC,CAACC,GAAG,EAAE,CAACH,GAAG,EAAEC,KAAK,CAAC,KAAK;MAC3BE,GAAG,CAACH,GAAG,CAAC,GAAGC,KAAK;MAChB,OAAOE,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC;IACVjC,MAAM,CAACM,QAAQ,GAAGN,MAAM,CAACM,QAAQ,IAAI4B,IAAI,CAACC,SAAS,CAACR,iBAAiB,CAAC;IACtE3B,MAAM,CAACoC,QAAQ,GAAGlE,gBAAgB,CAAC8B,MAAM,EAAEoC,QAAQ,EAAE5E,iBAAiB,CAAC,GAAG,WAAW;IACrF,OAAOyB,UAAU,CAACc,YAAY,CAAC;MAAE,GAAGC,MAAM;MAAEqC,MAAM,EAAEhD,QAAQ;MAAEiD,eAAe,EAAEtC,MAAM,CAACuC,aAAa,CAACC;IAAG,CAAC,CAAC;EAC7G,CAAC;EACD,SAASC,YAAYA,CAACC,IAAI,EAAE;IACxB,MAAMC,MAAM,GAAG,CAAC,CAAC;IACjB,MAAMC,IAAI,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAEvDA,IAAI,CAACC,OAAO,CAAEf,GAAG,IAAK;MAClB,IAAIF,MAAM,CAACkB,cAAc,CAACC,IAAI,CAACL,IAAI,EAAEZ,GAAG,CAAC,EAAE;QACvCa,MAAM,CAACb,GAAG,CAAC,GAAGY,IAAI,CAACZ,GAAG,CAAC;MAC3B,CAAC,MAAM;QACHa,MAAM,CAACb,GAAG,CAAC,GAAG,qCAAqC;MACvD;IACJ,CAAC,CAAC;;IAEF;IACAF,MAAM,CAACgB,IAAI,CAACD,MAAM,CAAC,CAACE,OAAO,CAAEf,GAAG,IAAK;MACjC,MAAMtC,SAAS,GAAGmD,MAAM,CAACb,GAAG,CAAC,CAACkB,KAAK,CAAC,GAAG,CAAC;MACxC,IAAIxD,SAAS,CAACyD,MAAM,GAAG,CAAC,EAAE;QACtB,OAAOzD,SAAS,CAACyD,MAAM,GAAG,CAAC,EAAE;UACzBzD,SAAS,CAAC0D,IAAI,CAAC,aAAa,CAAC;QACjC;QACAP,MAAM,CAACb,GAAG,CAAC,GAAGtC,SAAS,CAACM,IAAI,CAAC,GAAG,CAAC;MACrC;IACJ,CAAC,CAAC;IAEF,OAAO6C,MAAM;EACjB;EAEA,MAAMQ,SAAS,GAAIT,IAAI,IAAK;IACxB,MAAMC,MAAM,GAAG,CAAC,CAAC;IACjB,MAAMS,OAAO,GAAG;MACZtC,MAAM,EAAE4B,IAAI,CAAC7B,EAAE;MACfG,OAAO,EAAE0B,IAAI,CAAC3B,EAAE;MAChBG,SAAS,EAAEwB,IAAI,CAACzB,EAAE;MAClBG,QAAQ,EAAEsB,IAAI,CAACvB,EAAE;MACjBG,MAAM,EAAEoB,IAAI,CAACrB,EAAE;MACfG,QAAQ,EAAEkB,IAAI,CAACnB,EAAE;MACjBG,MAAM,EAAEgB,IAAI,CAACjB;IACjB,CAAC;IACD,KAAK,MAAMK,GAAG,IAAIsB,OAAO,EAAE;MACvB,IAAIxB,MAAM,CAACyB,MAAM,CAACD,OAAO,EAAEtB,GAAG,CAAC,EAAE;QAC7B,MAAMC,KAAK,GAAGqB,OAAO,CAACtB,GAAG,CAAC;QAC1B,IAAIC,KAAK,IAAIA,KAAK,CAACkB,MAAM,GAAG,CAAC,EAAE;UAC3B,MAAMK,UAAU,GAAGvB,KAAK,CAACiB,KAAK,CAAC,GAAG,CAAC;UACnC,MAAMO,MAAM,GAAGD,UAAU,CAAC7D,GAAG,CAAEc,SAAS,IAAK;YACzC,MAAM,CAACZ,IAAI,EAAEC,EAAE,CAAC,GAAGW,SAAS,CAACyC,KAAK,CAAC,GAAG,CAAC;YACvC,OAAO;cACHrD,IAAI;cACJC;YACJ,CAAC;UACL,CAAC,CAAC;UACF+C,MAAM,CAACb,GAAG,CAAC,GAAGyB,MAAM;QACxB;MACJ;IACJ;IACA,OAAOZ,MAAM;EACjB,CAAC;EAED1F,SAAS,CAAC,MAAM;IACZ,IAAIyF,IAAI,GAAGhE,UAAU,EAAE4B,QAAQ,IAAI4B,IAAI,CAACsB,KAAK,CAAC9E,UAAU,EAAE4B,QAAQ,CAAC;IACnE,IAAIoC,IAAI,EAAE;MACN,MAAMe,aAAa,GAAGhB,YAAY,CAACC,IAAI,CAAC;MACxCA,IAAI,GAAGS,SAAS,CAACM,aAAa,CAAC;IACnC;IACA,IAAIC,WAAW,GAAG,CAAC,CAAC;IACpB9F,kBAAkB,CAAC6B,GAAG,CAAEY,GAAG,IAAK;MAC5BqD,WAAW,GAAG;QACV,CAACrD,GAAG,CAAC0B,KAAK,GAAG,CACT;UACIpC,IAAI,EAAE,OAAO;UACbC,EAAE,EAAE;QACR,CAAC,EACD;UACID,IAAI,EAAE,OAAO;UACbC,EAAE,EAAE;QACR,CAAC,EACD;UACID,IAAI,EAAE,OAAO;UACbC,EAAE,EAAE;QACR,CAAC,CACJ;QACD,GAAG8D;MACP,CAAC;IACL,CAAC,CAAC;IACF,KAAK,MAAMrD,GAAG,IAAIqC,IAAI,EAAE;MACpB,KAAK,MAAMnC,SAAS,IAAImC,IAAI,CAACrC,GAAG,CAAC,EAAE;QAC/BE,SAAS,CAACZ,IAAI,GAAGhC,KAAK,CAAC4C,SAAS,CAACZ,IAAI,EAAE,OAAO,CAAC;QAC/CY,SAAS,CAACX,EAAE,GAAGjC,KAAK,CAAC4C,SAAS,CAACX,EAAE,EAAE,OAAO,CAAC;MAC/C;IACJ;IACA,KAAK,MAAMS,GAAG,IAAIqD,WAAW,EAAE;MAC3B,KAAK,MAAMnD,SAAS,IAAImD,WAAW,CAACrD,GAAG,CAAC,EAAE;QACtCE,SAAS,CAACZ,IAAI,GAAGhC,KAAK,CAAC4C,SAAS,CAACZ,IAAI,EAAE,OAAO,CAAC;QAC/CY,SAAS,CAACX,EAAE,GAAGjC,KAAK,CAAC4C,SAAS,CAACX,EAAE,EAAE,OAAO,CAAC;MAC/C;IACJ;IAEAlB,UAAU,CAAC4B,QAAQ,GAAGoC,IAAI,IAAIgB,WAAW;IACzChF,UAAU,CAAC0D,QAAQ,GACf1D,UAAU,EAAEiF,UAAU,EAAEvB,QAAQ,IAAIzE,KAAK,CAACe,UAAU,EAAEiF,UAAU,EAAEvB,QAAQ,EAAE5E,iBAAiB,CAAC;IAClGwB,IAAI,CAAC4E,cAAc,CAAC;MAChB,GAAGlF,UAAU;MACbmF,QAAQ,EAAEnF,UAAU,EAAEiF,UAAU,EAAEE,QAAQ;MAC1CC,KAAK,EAAEpF,UAAU,EAAEiF,UAAU,EAAEG,KAAK;MACpCC,KAAK,EAAErF,UAAU,EAAEiF,UAAU,EAAEI,KAAK;MACpCC,QAAQ,EAAEtF,UAAU,EAAEuF,MAAM,EAAEN,UAAU,EAAEnB,EAAE;MAC5C0B,SAAS,EAAExF,UAAU,EAAEyF,OAAO,EAAEC,OAAO,EAAE5B;IAC7C,CAAC,CAAC;IAEFlD,WAAW,CAACZ,UAAU,CAACiF,UAAU,EAAEtB,MAAM,CAAC;EAC9C,CAAC,EAAE,CAAC3D,UAAU,CAAC,CAAC;EAChBzB,SAAS,CAAC,MAAM;IACZ,IAAI,CAAC2B,SAAS,GAAG,CAAC,EAAE;MAChBI,IAAI,CAAC4E,cAAc,CAAC;QAChBzD,MAAM,EAAEtB,YAAY,CAAC,CAAC,CAAC,CAACkD,KAAK;QAC7B3B,UAAU,EAAErB,YAAY,CAAC,CAAC,CAAC,CAACgD;MAChC,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACnD,SAAS,CAAC,CAAC;EACf,MAAMyF,4BAA4B,GAAGA,CAACC,SAAS,EAAEvC,KAAK,KAAK;IACvD,IAAI;MACA,MAAMzB,QAAQ,GAAGlB,aAAa,CAAC,UAAU,CAAC;MAC1C,MAAM,CAACmF,MAAM,EAAEC,WAAW,EAAEC,QAAQ,CAAC,GAAGH,SAAS;MACjD,IAAIG,QAAQ,KAAK,MAAM,EAAE;QACrB,MAAM7E,EAAE,GAAGU,QAAQ,CAACiE,MAAM,CAAC,CAACC,WAAW,CAAC,CAAC5E,EAAE;QAC3C,IAAIA,EAAE,IAAIA,EAAE,CAACe,MAAM,CAAClD,mBAAmB,CAAC,GAAGsE,KAAK,CAACpB,MAAM,CAAClD,mBAAmB,CAAC,EAAE;UAC1E;QAAA;MAER,CAAC,MAAM,IAAIgH,QAAQ,KAAK,IAAI,EAAE;QAC1B,MAAM9E,IAAI,GAAGW,QAAQ,CAACiE,MAAM,CAAC,CAACC,WAAW,CAAC,CAAC7E,IAAI;QAC/C,IAAIA,IAAI,IAAIoC,KAAK,CAACpB,MAAM,CAAClD,mBAAmB,CAAC,GAAGkC,IAAI,CAACgB,MAAM,CAAClD,mBAAmB,CAAC,EAAE;UAC9EsE,KAAK,GAAGpC,IAAI;QAChB;MACJ;MACAW,QAAQ,CAACiE,MAAM,CAAC,CAACC,WAAW,CAAC,CAACC,QAAQ,CAAC,GAAG1C,KAAK;MAC/C5C,aAAa,CAAC,UAAU,EAAEmB,QAAQ,CAAC;MACnCpB,cAAc,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOwF,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;EACD,MAAMG,QAAQ,GAAGA,CAAA,KAAM;IACnBC,QAAQ,CAACC,aAAa,CAACC,IAAI,CAAC,CAAC;EACjC,CAAC;EACD,MAAMC,gBAAgB,GAAGA,CAACX,SAAS,EAAEvC,KAAK,KAAK;IAC3C,IAAI,CAACA,KAAK,EAAE;MACR,IAAI;QACA,MAAMzB,QAAQ,GAAGlB,aAAa,CAAC,UAAU,CAAC;QAC1C,MAAM,CAACmF,MAAM,EAAEC,WAAW,EAAEC,QAAQ,CAAC,GAAGH,SAAS;QACjD,IAAIG,QAAQ,KAAK,MAAM,EAAE;UACrBnE,QAAQ,CAACiE,MAAM,CAAC,CAACC,WAAW,CAAC,CAAC7E,IAAI,GAAGhC,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC;QAChE,CAAC,MAAM,IAAI8G,QAAQ,KAAK,IAAI,EAAE;UAC1BnE,QAAQ,CAACiE,MAAM,CAAC,CAACC,WAAW,CAAC,CAAC5E,EAAE,GAAGjC,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC;UAC1D;QACJ;QACAwB,aAAa,CAAC,UAAU,EAAEmB,QAAQ,CAAC;QACnCpB,cAAc,CAAC,CAAC;MACpB,CAAC,CAAC,OAAOwF,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB;IACJ;EACJ,CAAC;EACD,MAAMQ,WAAW,GAAI7E,GAAG,IAAK;IACzB,MAAMC,QAAQ,GAAGlB,aAAa,CAAC,UAAU,CAAC;IAC1C,KAAK,IAAIoF,WAAW,GAAG,CAAC,EAAEA,WAAW,GAAG,CAAC,EAAEA,WAAW,EAAE,EAAE;MACtDlE,QAAQ,CAACD,GAAG,CAAC,CAACmE,WAAW,CAAC,CAAC7E,IAAI,GAAGhC,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC;MACzD2C,QAAQ,CAACD,GAAG,CAAC,CAACmE,WAAW,CAAC,CAAC5E,EAAE,GAAGjC,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC;IAC3D;IACAwB,aAAa,CAAC,UAAU,EAAEmB,QAAQ,CAAC;IACnCpB,cAAc,CAAC,CAAC;EACpB,CAAC;EACD,MAAMiG,cAAc,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAM/E,QAAQ,GAAGlB,aAAa,CAAC,UAAU,CAAC;IAC1C,MAAM;MAAE0B,MAAM,GAAG;IAAG,CAAC,GAAGR,QAAQ;IAEhC,KAAK,IAAI;MAAEyB;IAAM,CAAC,IAAInE,kBAAkB,EAAE;MACtC0C,QAAQ,CAACyB,KAAK,CAAC,GAAGjB,MAAM,CAACrB,GAAG,CAAE6F,KAAK,KAAM;QACrC3F,IAAI,EAAEhC,KAAK,CAAC2H,KAAK,CAAC3F,IAAI,EAAElC,mBAAmB,CAAC;QAC5CmC,EAAE,EAAEjC,KAAK,CAAC2H,KAAK,CAAC1F,EAAE,EAAEnC,mBAAmB;MAC3C,CAAC,CAAC,CAAC;IACP;IACA;IACA0B,aAAa,CAAC,UAAU,EAAEmB,QAAQ,CAAC;IACnCpB,cAAc,CAAC,CAAC;EACpB,CAAC;EACD,MAAMqG,cAAc,GAAGA,CAAA,KAAM;IACzBrG,cAAc,CAAC,CAAC;EACpB,CAAC;EACD,MAAM;IAAEsG,OAAO,EAAEC;EAAc,CAAC,GAAG/I,QAAQ,CAACN,SAAS,CAACsJ,IAAI,CAACC,MAAM,CAAC;EAClE,MAAMC,UAAU,GAAGA,CAACF,IAAI,EAAEG,SAAS,EAAEC,OAAO,KAAK;IAC7CL,aAAa,CAAC;MACV/C,IAAI,EAAE;QACFqD,IAAI,EAAE,QAAQ;QACdL,IAAI,EAAEA;MACV,CAAC;MACDM,WAAW,EAAGC,QAAQ,IAAK;QACvB,IAAIA,QAAQ,CAACtD,MAAM,KAAK,IAAI,EAAE;UAC1BkD,SAAS,CAAC,CAAC;UACXvG,WAAW,CAAC2G,QAAQ,CAACvD,IAAI,CAACwD,QAAQ,CAAC;UACnCvH,sBAAsB,CAAC,IAAI,CAAC;QAChC;MACJ,CAAC;MACDmH,OAAO,EAAGpB,KAAK,IAAK;QAChBoB,OAAO,CAAC,CAAC;MACb;IACJ,CAAC,CAAC;EACN,CAAC;EAED,MAAMK,UAAU,GAAGA,CAACC,CAAC,EAAErE,KAAK,KAAK;IAC7B,MAAMsE,UAAU,GAAG,aAAa,CAAC,CAAC;IAClC,IAAI,CAACA,UAAU,CAACC,IAAI,CAACvE,KAAK,CAAC,EAAE;MACzB,OAAOwE,OAAO,CAACC,MAAM,CAAC,+CAA+C,CAAC;IAC1E;IACA,OAAOD,OAAO,CAACE,OAAO,CAAC,CAAC;EAC5B,CAAC;EAED,oBACIzJ,KAAA,CAAA0J,aAAA,CAACzK,QAAQ;IAACsC,MAAM,EAAEA,MAAO;IAACoI,QAAQ,EAAE5G,YAAa;IAACf,IAAI,EAAEA,IAAK;IAACuG,cAAc,EAAEA,cAAe;IAACqB,IAAI,EAAC;EAAQ,gBACvG5J,KAAA,CAAA0J,aAAA,CAAC9J,IAAI;IAACiK,SAAS,EAAC,WAAW;IAACC,QAAQ,EAAE;EAAM,gBACxC9J,KAAA,CAAA0J,aAAA;IAAKK,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAQ;EAAE,gBAC3BhK,KAAA,CAAA0J,aAAA,CAAC3J,GAAG;IAACkK,MAAM,EAAE;EAAG,gBACZjK,KAAA,CAAA0J,aAAA,CAAC7J,GAAG;IAACqK,IAAI,EAAE;EAAG,gBACVlK,KAAA,CAAA0J,aAAA,CAAC3I,cAAc;IACXoJ,KAAK,eAAEnK,KAAA,CAAA0J,aAAA,CAACvJ,gBAAgB;MAAAqF,EAAA;MAAC4E,cAAc,EAAC;IAAQ,CAAE,CAAE;IACpDC,IAAI,EAAC,QAAQ;IACbhI,QAAQ,EAAEA,QAAQ,IAAK,GAAE9B,YAAY,CAAC+J,cAAe,GAAEjI,QAAS,EAAE;IAClEkI,MAAM,EAAE,CAAC,GAAG,CAAE;IACd3B,UAAU,EAAEA;EAAW,CAC1B,CACA,CACJ,CAAC,eACN5I,KAAA,CAAA0J,aAAA,CAAC3J,GAAG;IAACkK,MAAM,EAAE;EAAG,gBACZjK,KAAA,CAAA0J,aAAA,CAAC7J,GAAG;IAACqK,IAAI,EAAE;EAAG,gBACVlK,KAAA,CAAA0J,aAAA,CAACvK,SAAS;IACNgL,KAAK,EAAE7I,SAAS,CAACkJ,aAAa,CAACnK,aAAa,CAACgK,IAAI,CAAE;IACnDI,QAAQ,EAAE7I,SAAS,GAAG,KAAK,GAAG,IAAK;IACnC8I,QAAQ,EAAE9I,SAAU;IACpByI,IAAI,EAAC;EAAU,CAClB,CACA,CAAC,eACNrK,KAAA,CAAA0J,aAAA,CAAC7J,GAAG;IAACqK,IAAI,EAAE;EAAG,gBACVlK,KAAA,CAAA0J,aAAA,CAAC1I,eAAe;IACZqJ,IAAI,EAAC,UAAU;IACfF,KAAK,EAAC,cAAW;IACjBQ,WAAW,EAAC,cAAW;IACvBhH,MAAM,EAAEnD,iBAAkB;IAC1BuJ,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAO,CAAE;IACzBS,QAAQ,EAAE7I,SAAS,GAAG,KAAK,GAAG,IAAK;IACnCgJ,KAAK,EAAE,CACH;MACIC,SAAS,EAAE5J;IACf,CAAC;EACH,CACL,CACA,CAAC,eACNjB,KAAA,CAAA0J,aAAA,CAAC7J,GAAG;IAACqK,IAAI,EAAE;EAAG,gBACVlK,KAAA,CAAA0J,aAAA,CAACvK,SAAS;IACNgL,KAAK,EAAE7I,SAAS,CAACkJ,aAAa,CAACnK,aAAa,CAACyG,KAAK,CAAE;IACpDiC,IAAI,EAAC,OAAO;IACZsB,IAAI,EAAC,OAAO;IACZI,QAAQ,EAAE7I,SAAS,GAAG,KAAK,GAAG,IAAK;IACnCgJ,KAAK,EAAE,CACH;MACIC,SAAS,EAAE1B;IACf,CAAC;EACH,CACL,CACA,CAAC,eACNnJ,KAAA,CAAA0J,aAAA,CAAC7J,GAAG;IAACqK,IAAI,EAAE;EAAG,gBACVlK,KAAA,CAAA0J,aAAA,CAACvK,SAAS;IACNgL,KAAK,EAAE7I,SAAS,CAACkJ,aAAa,CAACnK,aAAa,CAAC0G,KAAK,CAAE;IACpDgC,IAAI,EAAC,OAAO;IACZsB,IAAI,EAAC,OAAO;IACZI,QAAQ,EAAE7I,SAAS,GAAG,KAAK,GAAG;EAAK,CACtC,CACA,CAAC,eACN5B,KAAA,CAAA0J,aAAA,CAAC7J,GAAG;IAACqK,IAAI,EAAE;EAAG,gBACVlK,KAAA,CAAA0J,aAAA,CAAC5I,YAAY;IACTqJ,KAAK,EAAE7I,SAAS,CAACkJ,aAAa,CAACnK,aAAa,CAACyK,YAAY,CAAE;IAC3DT,IAAI,EAAC,cAAc;IACnBU,GAAG,EAAE,CAAE;IACPC,GAAG,EAAE,eAAgB;IACrBC,UAAU,EAAC;EAAG,CACjB,CACA,CAAC,eACNjL,KAAA,CAAA0J,aAAA,CAAC7J,GAAG;IAACqK,IAAI,EAAE;EAAG,gBACVlK,KAAA,CAAA0J,aAAA,CAAC5I,YAAY;IACTqJ,KAAK,EAAE7I,SAAS,CAACkJ,aAAa,CAACnK,aAAa,CAAC6K,MAAM,CAAE;IACrDb,IAAI,EAAC,QAAQ;IACbU,GAAG,EAAE,CAAE;IACPC,GAAG,EAAE,eAAgB;IACrBC,UAAU,EAAC;EAAG,CACjB,CACA,CAAC,eACNjL,KAAA,CAAA0J,aAAA,CAAC7J,GAAG;IAACqK,IAAI,EAAE;EAAG,gBACVlK,KAAA,CAAA0J,aAAA,CAAC1K,iBAAiB;IACdmL,KAAK,eAAEnK,KAAA,CAAA0J,aAAA,CAACvJ,gBAAgB;MAAAqF,EAAA;MAAC4E,cAAc,EAAC;IAAQ,CAAE,CAAE;IACpDC,IAAI,EAAC,UAAU;IACfjL,SAAS,EAAEA,SAAS,CAAC+L,SAAS,CAACC,YAAa;IAC5CC,cAAc,EAAGC,IAAI,KAAM;MAAEvG,KAAK,EAAEuG,IAAI,CAAC9F,EAAE;MAAE2E,KAAK,EAAEmB,IAAI,CAAClE,OAAO,CAACP;IAAS,CAAC;IAC3E;IAAA;IACA0E,YAAY,EAAGC,IAAI,KAAM;MAAEnB,IAAI,EAAEmB;IAAK,CAAC;EAAE,CAC5C,CACA,CAAC,eACNxL,KAAA,CAAA0J,aAAA,CAAC7J,GAAG;IAACqK,IAAI,EAAE;EAAG,gBACVlK,KAAA,CAAA0J,aAAA,CAAC1K,iBAAiB;IACdmL,KAAK,eAAEnK,KAAA,CAAA0J,aAAA,CAACvJ,gBAAgB;MAAAqF,EAAA;MAAC4E,cAAc,EAAC;IAAe,CAAE,CAAE;IAC3DC,IAAI,EAAE,CAAC,eAAe,EAAE,IAAI,CAAE;IAC9BjL,SAAS,EAAEA,SAAS,CAACqM,QAAQ,CAACL,YAAa;IAC3CC,cAAc,EAAGC,IAAI,KAAM;MAAEvG,KAAK,EAAEuG,IAAI,CAAC9F,EAAE;MAAE2E,KAAK,EAAEmB,IAAI,CAACI;IAAa,CAAC,CAAE;IACzEC,mBAAmB,EAAE;MAAEC,IAAI,EAAElL,aAAa,CAACmL;IAAmB,CAAE;IAChEN,YAAY,EAAGC,IAAI,KAAM;MAAEE,YAAY,EAAEF;IAAK,CAAC,CAAE;IACjDf,QAAQ,EAAE7I,SAAS,GAAG,KAAK,GAAG;EAAK,CACtC,CACA,CAAC,eACN5B,KAAA,CAAA0J,aAAA,CAAC7J,GAAG;IAACqK,IAAI,EAAE;EAAG,gBACVlK,KAAA,CAAA0J,aAAA,CAAC1K,iBAAiB;IACdmL,KAAK,eAAEnK,KAAA,CAAA0J,aAAA,CAACvJ,gBAAgB;MAAAqF,EAAA;MAAC4E,cAAc,EAAC;IAAW,CAAE,CAAE;IACvDC,IAAI,EAAE,CAAC,WAAW,CAAE;IACpBjL,SAAS,EAAEA,SAAS,CAAC+H,OAAO,CAACiE,YAAa;IAC1CC,cAAc,EAAGC,IAAI,KAAM;MAAEvG,KAAK,EAAEuG,IAAI,CAAC9F,EAAE;MAAE2E,KAAK,EAAEmB,IAAI,CAAClE,OAAO,CAACP;IAAS,CAAC;IAC3E;IAAA;IACA0E,YAAY,EAAGC,IAAI,KAAM;MAAE3E,QAAQ,EAAE2E;IAAK,CAAC,CAAE;IAC7CM,QAAQ,EAAG/G,KAAK,IAAK4C,OAAO,CAACC,GAAG,CAAC7C,KAAK;EAAE,CAC3C,CACA,CAAC,eACN/E,KAAA,CAAA0J,aAAA,CAAC7J,GAAG;IAACqK,IAAI,EAAE;EAAG,gBACVlK,KAAA,CAAA0J,aAAA,CAACvK,SAAS;IACNgL,KAAK,EAAE7I,SAAS,CAACkJ,aAAa,CAACnK,aAAa,CAAC0L,QAAQ,CAAE;IACvDnB,KAAK,EAAE,CACH;MACIG,GAAG,EAAE,CAAC;MACNiB,OAAO,EAAE;IACb,CAAC,CACH;IACFvB,QAAQ,EAAE7I,SAAS,GAAG,KAAK,GAAG,IAAK;IACnCyI,IAAI,EAAC,UAAU;IACftB,IAAI,EAAC;EAAU,CAClB,CACA,CACJ,CAAC,eACN/I,KAAA,CAAA0J,aAAA,CAACpJ,aAAa;IACVuH,QAAQ,EAAEA,QAAS;IACnBsC,KAAK,EAAE7I,SAAS,CAACkJ,aAAa,CAACnK,aAAa,CAACiD,QAAQ,CAAE;IACvD+D,4BAA4B,EAAEA,4BAA6B;IAC3D/F,SAAS,EAAEA,SAAU;IACrB6G,cAAc,EAAEA,cAAe;IAC/BvH,kBAAkB,EAAEA,kBAAmB;IACvCqH,gBAAgB,EAAEA,gBAAiB;IACnCC,WAAW,EAAEA;EAAY,CAC5B,CACA,CAAC,eACNlI,KAAA,CAAA0J,aAAA;IAAKG,SAAS,EAAC,kBAAkB;IAACE,KAAK,EAAE;MAAEkC,SAAS,EAAE,MAAM;MAAEC,WAAW,EAAE;IAAO;EAAE,GAC/E1K,OACA,CACH,CACA,CAAC;AAEnB,CAAC;AAACH,EAAA,CAlaIF,aAAa;EAAA,QACGxB,YAAY,EAK6CF,YAAY,EAkPpDC,QAAQ;AAAA;AAAAyM,EAAA,GAxPzChL,aAAa;AAoanB,eAAeA,aAAa;AAAC,IAAAgL,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}