{"ast":null,"code":"var _s = $RefreshSig$();\nimport { moveArrayElement } from '@utils';\nimport React, { useEffect, useState } from 'react';\nimport useFetch from './useFetch';\nimport useNotification from './useNotification';\nconst sortColumn = {\n  key: 'sort',\n  width: 30\n};\nfunction useDrapDropTableItem({\n  data = [],\n  apiConfig,\n  setTableLoading,\n  indexField,\n  idField\n}) {\n  _s();\n  const [sortedData, setSortedData] = useState(data || []);\n  const {\n    execute: executeOrdering\n  } = useFetch(apiConfig);\n  const notification = useNotification();\n  const onDragEnd = ({\n    id: dragId\n  }, {\n    id: hoverId\n  }) => {\n    if (dragId == hoverId) return;\n    const backupData = sortedData;\n    setTableLoading(true);\n    const dragIndex = sortedData.findIndex(item => item.id == dragId);\n    const hoverIndex = sortedData.findIndex(item => item.id == hoverId);\n    const movedData = moveArrayElement(sortedData, dragIndex, hoverIndex);\n    const before = movedData[hoverIndex + 1]?.[indexField];\n    const after = movedData[hoverIndex - 1]?.[indexField];\n    setSortedData(movedData);\n    executeOrdering({\n      pathParams: {\n        id: sortedData[dragIndex].id\n      },\n      data: {\n        ...data[dragIndex],\n        rank: after,\n        rankBehind: before,\n        [idField]: data[dragIndex]._id\n      },\n      onCompleted: () => {\n        setTableLoading(false);\n      },\n      onError: err => {\n        console.log(err);\n        setTableLoading(false);\n        setSortedData(backupData);\n        notification({\n          type: 'error',\n          message: 'Change order error!'\n        });\n      }\n    });\n  };\n  useEffect(() => {\n    if (data) setSortedData(data);else setSortedData([]);\n  }, [data]);\n  return {\n    sortedData,\n    onDragEnd,\n    sortColumn\n  };\n}\n_s(useDrapDropTableItem, \"zFIaBmLu6xQp6MpLWNxVZr3n9P4=\", false, function () {\n  return [useFetch, useNotification];\n});\nexport default useDrapDropTableItem;","map":{"version":3,"names":["moveArrayElement","React","useEffect","useState","useFetch","useNotification","sortColumn","key","width","useDrapDropTableItem","data","apiConfig","setTableLoading","indexField","idField","_s","sortedData","setSortedData","execute","executeOrdering","notification","onDragEnd","id","dragId","hoverId","backupData","dragIndex","findIndex","item","hoverIndex","movedData","before","after","pathParams","rank","rankBehind","_id","onCompleted","onError","err","console","log","type","message"],"sources":["C:/Users/PC/Downloads/elms-cms/elms-cms/source/src/hooks/useDrapDropTableItem.js"],"sourcesContent":["import { moveArrayElement } from '@utils';\r\nimport React, { useEffect, useState } from 'react';\r\nimport useFetch from './useFetch';\r\nimport useNotification from './useNotification';\r\n\r\nconst sortColumn = {\r\n    key: 'sort',\r\n    width: 30,\r\n};\r\n\r\nfunction useDrapDropTableItem({ data = [], apiConfig, setTableLoading, indexField, idField }) {\r\n    const [sortedData, setSortedData] = useState(data || []);\r\n    const { execute: executeOrdering } = useFetch(apiConfig);\r\n    const notification = useNotification();\r\n\r\n    const onDragEnd = ({ id: dragId }, { id: hoverId }) => {\r\n        if (dragId == hoverId) return;\r\n\r\n        const backupData = sortedData;\r\n        setTableLoading(true);\r\n        const dragIndex = sortedData.findIndex((item) => item.id == dragId);\r\n        const hoverIndex = sortedData.findIndex((item) => item.id == hoverId);\r\n        const movedData = moveArrayElement(sortedData, dragIndex, hoverIndex);\r\n        const before = movedData[hoverIndex + 1]?.[indexField];\r\n        const after = movedData[hoverIndex - 1]?.[indexField];\r\n        setSortedData(movedData);\r\n\r\n        executeOrdering({\r\n            pathParams: {\r\n                id: sortedData[dragIndex].id,\r\n            },\r\n            data: {\r\n                ...data[dragIndex],\r\n                rank: after,\r\n                rankBehind: before,\r\n                [idField]: data[dragIndex]._id,\r\n            },\r\n            onCompleted: () => {\r\n                setTableLoading(false);\r\n            },\r\n            onError: (err) => {\r\n                console.log(err);\r\n                setTableLoading(false);\r\n                setSortedData(backupData);\r\n                notification({ type: 'error', message: 'Change order error!' });\r\n            },\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (data) setSortedData(data);\r\n        else setSortedData([]);\r\n    }, [data]);\r\n\r\n    return { sortedData, onDragEnd, sortColumn };\r\n}\r\n\r\nexport default useDrapDropTableItem;\r\n"],"mappings":";AAAA,SAASA,gBAAgB,QAAQ,QAAQ;AACzC,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,eAAe,MAAM,mBAAmB;AAE/C,MAAMC,UAAU,GAAG;EACfC,GAAG,EAAE,MAAM;EACXC,KAAK,EAAE;AACX,CAAC;AAED,SAASC,oBAAoBA,CAAC;EAAEC,IAAI,GAAG,EAAE;EAAEC,SAAS;EAAEC,eAAe;EAAEC,UAAU;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC1F,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAACO,IAAI,IAAI,EAAE,CAAC;EACxD,MAAM;IAAEQ,OAAO,EAAEC;EAAgB,CAAC,GAAGf,QAAQ,CAACO,SAAS,CAAC;EACxD,MAAMS,YAAY,GAAGf,eAAe,CAAC,CAAC;EAEtC,MAAMgB,SAAS,GAAGA,CAAC;IAAEC,EAAE,EAAEC;EAAO,CAAC,EAAE;IAAED,EAAE,EAAEE;EAAQ,CAAC,KAAK;IACnD,IAAID,MAAM,IAAIC,OAAO,EAAE;IAEvB,MAAMC,UAAU,GAAGT,UAAU;IAC7BJ,eAAe,CAAC,IAAI,CAAC;IACrB,MAAMc,SAAS,GAAGV,UAAU,CAACW,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACN,EAAE,IAAIC,MAAM,CAAC;IACnE,MAAMM,UAAU,GAAGb,UAAU,CAACW,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACN,EAAE,IAAIE,OAAO,CAAC;IACrE,MAAMM,SAAS,GAAG9B,gBAAgB,CAACgB,UAAU,EAAEU,SAAS,EAAEG,UAAU,CAAC;IACrE,MAAME,MAAM,GAAGD,SAAS,CAACD,UAAU,GAAG,CAAC,CAAC,GAAGhB,UAAU,CAAC;IACtD,MAAMmB,KAAK,GAAGF,SAAS,CAACD,UAAU,GAAG,CAAC,CAAC,GAAGhB,UAAU,CAAC;IACrDI,aAAa,CAACa,SAAS,CAAC;IAExBX,eAAe,CAAC;MACZc,UAAU,EAAE;QACRX,EAAE,EAAEN,UAAU,CAACU,SAAS,CAAC,CAACJ;MAC9B,CAAC;MACDZ,IAAI,EAAE;QACF,GAAGA,IAAI,CAACgB,SAAS,CAAC;QAClBQ,IAAI,EAAEF,KAAK;QACXG,UAAU,EAAEJ,MAAM;QAClB,CAACjB,OAAO,GAAGJ,IAAI,CAACgB,SAAS,CAAC,CAACU;MAC/B,CAAC;MACDC,WAAW,EAAEA,CAAA,KAAM;QACfzB,eAAe,CAAC,KAAK,CAAC;MAC1B,CAAC;MACD0B,OAAO,EAAGC,GAAG,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChB3B,eAAe,CAAC,KAAK,CAAC;QACtBK,aAAa,CAACQ,UAAU,CAAC;QACzBL,YAAY,CAAC;UAAEsB,IAAI,EAAE,OAAO;UAAEC,OAAO,EAAE;QAAsB,CAAC,CAAC;MACnE;IACJ,CAAC,CAAC;EACN,CAAC;EAEDzC,SAAS,CAAC,MAAM;IACZ,IAAIQ,IAAI,EAAEO,aAAa,CAACP,IAAI,CAAC,CAAC,KACzBO,aAAa,CAAC,EAAE,CAAC;EAC1B,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;EAEV,OAAO;IAAEM,UAAU;IAAEK,SAAS;IAAEf;EAAW,CAAC;AAChD;AAACS,EAAA,CA7CQN,oBAAoB;EAAA,QAEYL,QAAQ,EACxBC,eAAe;AAAA;AA4CxC,eAAeI,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}