{"ast":null,"code":"var _s = $RefreshSig$();\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport { ClearOutlined, SearchOutlined } from '@ant-design/icons';\nimport { FieldTypes } from '@constants/formConfig';\nimport { Button, Col, Form, Row } from 'antd';\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport DatePickerField from './DatePickerField';\nimport DateRangePickerField from './DateRangePickerField';\nimport InputTextField from './InputTextField';\nimport SelectField from './SelectField';\nimport dayjs from 'dayjs';\nimport AutoCompleteField from './AutoCompleteField';\nimport styles from './SearchForm.module.scss';\nimport { isObject } from 'lodash';\n// import InputPhoneField from './InputPhoneField';\n\nconst disabledDate = current => {\n  return current && current > dayjs().endOf('day');\n};\nconst searchFields = {\n  [FieldTypes.SELECT]: SelectField,\n  [FieldTypes.DATE]: DatePickerField,\n  [FieldTypes.DATE_RANGE]: props => /*#__PURE__*/React.createElement(DateRangePickerField, _extends({\n    disabledDate: disabledDate\n  }, props)),\n  [FieldTypes.AUTOCOMPLETE]: AutoCompleteField,\n  // [FieldTypes.PHONE]: InputPhoneField,\n  default: InputTextField\n};\nconst message = defineMessages({\n  search: {\n    \"id\": \"components.common.form.SearchForm.search\",\n    \"defaultMessage\": 'Tìm kiếm'\n  },\n  clear: {\n    \"id\": \"components.common.form.SearchForm.clear\",\n    \"defaultMessage\": 'Xóa'\n  }\n});\nfunction SearchForm({\n  fields = [],\n  hiddenAction,\n  onSearch,\n  className,\n  onReset,\n  initialValues,\n  width = 1100,\n  alignSearchField,\n  getFormInstance,\n  searchParams\n}) {\n  _s();\n  const [form] = Form.useForm();\n  const intl = useIntl();\n  const dateRangeKey = useRef({});\n  const handleSearchSubmit = useCallback(values => {\n    onSearch?.({\n      ...searchParams,\n      ...values\n    });\n  }, [form, onSearch]);\n  const handleClearSearch = () => {\n    form.resetFields();\n    onReset?.();\n  };\n  const renderField = useCallback(({\n    type,\n    submitOnChanged,\n    onChange,\n    key,\n    renderItem,\n    style,\n    component,\n    ...props\n  }) => {\n    if (renderItem) {\n      return /*#__PURE__*/React.createElement(Form.Item, _extends({}, props, {\n        name: key,\n        style: {\n          marginBottom: '0px'\n        }\n      }), renderItem());\n    }\n    const Field = component || searchFields[type] || searchFields.default;\n    return /*#__PURE__*/React.createElement(Field, _extends({}, props, {\n      name: key,\n      fieldProps: {\n        style: {\n          ...style,\n          width: '100%',\n          height: 32\n        }\n      },\n      style: {\n        ...style,\n        width: '100%',\n        height: 32\n      },\n      onChange: e => {\n        if (submitOnChanged) {\n          form.submit();\n        } else {\n          onChange?.(e);\n        }\n      }\n    }));\n  }, [handleSearchSubmit]);\n  useEffect(() => {\n    getFormInstance?.(form);\n  }, [form]);\n  useEffect(() => {\n    const normalizeValues = {\n      ...initialValues\n    };\n    Object.keys(normalizeValues).forEach(key => {\n      if (!isNaN(normalizeValues[key]) && !isObject(normalizeValues[key])) {\n        normalizeValues[key] = Number(normalizeValues[key]);\n      }\n    });\n    form.setFieldsValue(normalizeValues);\n  }, [initialValues]);\n  return /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    layout: \"horizontal\",\n    className: className || styles.searchForm,\n    onFinish: handleSearchSubmit\n  }, /*#__PURE__*/React.createElement(Row, {\n    align: alignSearchField,\n    gutter: 10,\n    style: {\n      maxWidth: width\n    }\n  }, fields.map(field => {\n    const {\n      key,\n      colSpan,\n      className,\n      ...props\n    } = field;\n    return /*#__PURE__*/React.createElement(Col, {\n      key: key,\n      span: colSpan || 3,\n      className: className\n    }, renderField({\n      ...props,\n      key\n    }));\n  }), !hiddenAction && fields.length > 0 && /*#__PURE__*/React.createElement(Col, null, /*#__PURE__*/React.createElement(Button, {\n    icon: /*#__PURE__*/React.createElement(SearchOutlined, null),\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, intl.formatMessage(message.search)), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginLeft: 8\n    },\n    icon: /*#__PURE__*/React.createElement(ClearOutlined, null),\n    onClick: handleClearSearch\n  }, intl.formatMessage(message.clear)))));\n}\n_s(SearchForm, \"Im6bvQ0GIoi3/0W3UyL0el4zCAk=\", false, function () {\n  return [Form.useForm, useIntl];\n});\n_c = SearchForm;\nexport default SearchForm;\nvar _c;\n$RefreshReg$(_c, \"SearchForm\");","map":{"version":3,"names":["ClearOutlined","SearchOutlined","FieldTypes","Button","Col","Form","Row","React","useCallback","useEffect","useRef","defineMessages","useIntl","DatePickerField","DateRangePickerField","InputTextField","SelectField","dayjs","AutoCompleteField","styles","isObject","disabledDate","current","endOf","searchFields","SELECT","DATE","DATE_RANGE","props","createElement","_extends","AUTOCOMPLETE","default","message","search","clear","SearchForm","fields","hiddenAction","onSearch","className","onReset","initialValues","width","alignSearchField","getFormInstance","searchParams","_s","form","useForm","intl","dateRangeKey","handleSearchSubmit","values","handleClearSearch","resetFields","renderField","type","submitOnChanged","onChange","key","renderItem","style","component","Item","name","marginBottom","Field","fieldProps","height","e","submit","normalizeValues","Object","keys","forEach","isNaN","Number","setFieldsValue","layout","searchForm","onFinish","align","gutter","maxWidth","map","field","colSpan","span","length","icon","htmlType","formatMessage","marginLeft","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PC/Downloads/elms-cms/elms-cms/source/src/components/common/form/SearchForm.js"],"sourcesContent":["import { ClearOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport { FieldTypes } from '@constants/formConfig';\r\nimport { Button, Col, Form, Row } from 'antd';\r\nimport React, { useCallback, useEffect, useRef } from 'react';\r\nimport { defineMessages, useIntl } from 'react-intl';\r\nimport DatePickerField from './DatePickerField';\r\nimport DateRangePickerField from './DateRangePickerField';\r\nimport InputTextField from './InputTextField';\r\nimport SelectField from './SelectField';\r\n\r\nimport dayjs from 'dayjs';\r\nimport AutoCompleteField from './AutoCompleteField';\r\nimport styles from './SearchForm.module.scss';\r\nimport { isObject } from 'lodash';\r\n// import InputPhoneField from './InputPhoneField';\r\n\r\nconst disabledDate = (current) => {\r\n    return current && current > dayjs().endOf('day');\r\n};\r\n\r\nconst searchFields = {\r\n    [FieldTypes.SELECT]: SelectField,\r\n    [FieldTypes.DATE]: DatePickerField,\r\n    [FieldTypes.DATE_RANGE]: (props) => <DateRangePickerField disabledDate={disabledDate} {...props} />,\r\n    [FieldTypes.AUTOCOMPLETE]: AutoCompleteField,\r\n    // [FieldTypes.PHONE]: InputPhoneField,\r\n    default: InputTextField,\r\n};\r\n\r\nconst message = defineMessages({\r\n    search: 'Tìm kiếm',\r\n    clear: 'Xóa',\r\n});\r\n\r\nfunction SearchForm({\r\n    fields = [],\r\n    hiddenAction,\r\n    onSearch,\r\n    className,\r\n    onReset,\r\n    initialValues,\r\n    width = 1100,\r\n    alignSearchField,\r\n    getFormInstance,\r\n    searchParams,\r\n}) {\r\n    const [form] = Form.useForm();\r\n    const intl = useIntl();\r\n    const dateRangeKey = useRef({});\r\n\r\n    const handleSearchSubmit = useCallback(\r\n        (values) => {\r\n            \r\n            onSearch?.({ ...searchParams, ...values });\r\n        },\r\n        [form, onSearch],\r\n    );\r\n\r\n    const handleClearSearch = () => {\r\n        form.resetFields();\r\n        onReset?.();\r\n    };\r\n\r\n    const renderField = useCallback(\r\n        ({ type, submitOnChanged, onChange, key, renderItem, style, component, ...props }) => {\r\n            if (renderItem) {\r\n                return (\r\n                    <Form.Item {...props} name={key} style={{ marginBottom: '0px' }}>\r\n                        {renderItem()}\r\n                    </Form.Item>\r\n                );\r\n            }\r\n\r\n            const Field = component || searchFields[type] || searchFields.default;\r\n            return (\r\n                <Field\r\n                    {...props}\r\n                    name={key}\r\n                    fieldProps={{\r\n                        style: { ...style, width: '100%', height: 32 },\r\n                    }}\r\n                    style={{ ...style, width: '100%', height: 32 }}\r\n                    onChange={(e) => {\r\n                        if (submitOnChanged) {\r\n                            form.submit();\r\n                        } else {\r\n                            onChange?.(e);\r\n                        }\r\n                    }}\r\n                />\r\n            );\r\n        },\r\n        [handleSearchSubmit],\r\n    );\r\n\r\n    useEffect(() => {\r\n        getFormInstance?.(form);\r\n    }, [form]);\r\n\r\n    useEffect(() => {\r\n      \r\n        const normalizeValues = { ...initialValues };\r\n        \r\n        Object.keys(normalizeValues).forEach((key) => {\r\n          \r\n            if (!isNaN(normalizeValues[key]) && !isObject(normalizeValues[key])) {\r\n                normalizeValues[key] = Number(normalizeValues[key]);\r\n            }\r\n        });\r\n        form.setFieldsValue(normalizeValues);\r\n     \r\n    }, [initialValues]);\r\n\r\n    return (\r\n        <Form form={form} layout=\"horizontal\" className={className || styles.searchForm} onFinish={handleSearchSubmit}>\r\n            <Row align={alignSearchField} gutter={10} style={{ maxWidth: width }}>\r\n                {fields.map((field) => {\r\n                    const { key, colSpan, className, ...props } = field;\r\n                    return (\r\n                        <Col key={key} span={colSpan || 3} className={className}>\r\n                            {renderField({ ...props, key })}\r\n                        </Col>\r\n                    );\r\n                })}\r\n                {!hiddenAction && fields.length > 0 && (\r\n                    <Col>\r\n                        <Button icon={<SearchOutlined />} type=\"primary\" htmlType=\"submit\">\r\n                            {intl.formatMessage(message.search)}\r\n                        </Button>\r\n                        <Button style={{ marginLeft: 8 }} icon={<ClearOutlined />} onClick={handleClearSearch}>\r\n                            {intl.formatMessage(message.clear)}\r\n                        </Button>\r\n                    </Col>\r\n                )}\r\n            </Row>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default SearchForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}