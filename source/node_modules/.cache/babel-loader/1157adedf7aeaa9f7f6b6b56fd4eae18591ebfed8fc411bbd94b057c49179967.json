{"ast":null,"code":"import { Button, Form, Space } from 'antd';\nimport React from 'react';\nimport TimePickerField from '../form/TimePickerField';\nimport { defineMessages } from 'react-intl';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport { BaseTooltip } from '../form/BaseTooltip';\nconst messages = defineMessages({\n  dayOfWeek: {\n    \"id\": \"components.common.table.ScheduleTable.dayOfWeek\",\n    \"defaultMessage\": 'Thứ'\n  },\n  timeFrame: {\n    \"id\": \"components.common.table.ScheduleTable.timeFrame\",\n    \"defaultMessage\": 'Khung giờ'\n  },\n  applyAll: {\n    \"id\": \"components.common.table.ScheduleTable.applyAll\",\n    \"defaultMessage\": 'Áp dụng tất cả'\n  },\n  frame: {\n    \"id\": \"components.common.table.ScheduleTable.frame\",\n    \"defaultMessage\": 'Khung'\n  },\n  reset: {\n    \"id\": \"components.common.table.ScheduleTable.reset\",\n    \"defaultMessage\": 'Đặt lại khung giờ'\n  }\n});\nfunction ScheduleTable({\n  label,\n  onSelectScheduleTabletRandom,\n  translate,\n  daysOfWeekSchedule,\n  canApplyAll = true,\n  handleApplyAll,\n  handleOk,\n  handleTimeChange,\n  handleReset\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '10px'\n    }\n  }, label), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"happy-hours-table\",\n    style: {\n      width: '100%'\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", null, /*#__PURE__*/React.createElement(\"th\", {\n    width: \"14%\"\n  }, translate.formatMessage(messages.dayOfWeek)), /*#__PURE__*/React.createElement(\"th\", null, translate.formatMessage(messages.timeFrame)))), /*#__PURE__*/React.createElement(\"tbody\", null, daysOfWeekSchedule.map((day, dayIndex) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: day.value\n  }, /*#__PURE__*/React.createElement(\"td\", null, day.label), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      padding: '10px'\n    }\n  }, /*#__PURE__*/React.createElement(Form.List, {\n    name: ['schedule', day.value]\n  }, fields => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"no-margin-form-item\",\n      style: {\n        display: 'flex',\n        alignItems: 'end'\n      }\n    }, /*#__PURE__*/React.createElement(Space, {\n      className: \"box-flex\",\n      size: 24\n    }, fields.map((field, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: field.key\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frame-label\"\n    }, translate.formatMessage(messages.frame), \" \", index + 1), /*#__PURE__*/React.createElement(Space, {\n      className: \"box-flex\"\n    }, /*#__PURE__*/React.createElement(TimePickerField, {\n      onChange: value => handleTimeChange([day.value, field.name, 'from'], value),\n      onOk: handleOk,\n      style: {\n        width: '76px'\n      },\n      size: \"small\",\n      name: [field.name, 'from'],\n      onSelect: value => onSelectScheduleTabletRandom([day.value, field.name, 'from'], value),\n      width: \"100%\",\n      placeholder: \"From\"\n    }), /*#__PURE__*/React.createElement(TimePickerField, {\n      onOk: handleOk,\n      style: {\n        width: '76px'\n      },\n      size: \"small\",\n      name: [field.name, 'to'],\n      onSelect: value => onSelectScheduleTabletRandom([day.value, field.name, 'to'], value),\n      onChange: value => handleTimeChange([day.value, field.name, 'to'], value),\n      width: \"100%\",\n      required: true,\n      placeholder: \"to\",\n      requiredMsg: \"Enter to\",\n      validateTrigger: ['onBlur']\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrap-btn-apply-all\"\n    }, /*#__PURE__*/React.createElement(BaseTooltip, {\n      title: translate.formatMessage(messages.reset)\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"default\",\n      size: \"middle\",\n      style: {\n        marginRight: '30px'\n      },\n      onClick: () => handleReset(day.value)\n    }, /*#__PURE__*/React.createElement(ReloadOutlined, null))), !dayIndex && /*#__PURE__*/React.createElement(Button, {\n      disabled: !canApplyAll,\n      type: \"primary\",\n      size: \"middle\",\n      onClick: handleApplyAll\n    }, translate.formatMessage(messages.applyAll))));\n  })))))));\n}\n_c = ScheduleTable;\nexport default ScheduleTable;\nvar _c;\n$RefreshReg$(_c, \"ScheduleTable\");","map":{"version":3,"names":["Button","Form","Space","React","TimePickerField","defineMessages","ReloadOutlined","BaseTooltip","messages","dayOfWeek","timeFrame","applyAll","frame","reset","ScheduleTable","label","onSelectScheduleTabletRandom","translate","daysOfWeekSchedule","canApplyAll","handleApplyAll","handleOk","handleTimeChange","handleReset","createElement","style","padding","className","width","formatMessage","map","day","dayIndex","key","value","List","name","fields","display","alignItems","size","field","index","onChange","onOk","onSelect","placeholder","required","requiredMsg","validateTrigger","title","type","marginRight","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/PC/Downloads/elms-cms/elms-cms/source/src/components/common/table/ScheduleTable.js"],"sourcesContent":["import { Button, Form, Space } from 'antd';\r\nimport React from 'react';\r\nimport TimePickerField from '../form/TimePickerField';\r\nimport { defineMessages } from 'react-intl';\r\nimport { ReloadOutlined } from '@ant-design/icons';\r\nimport { BaseTooltip } from '../form/BaseTooltip';\r\nconst messages = defineMessages({\r\n    dayOfWeek: 'Thứ',\r\n    timeFrame: 'Khung giờ',\r\n    applyAll: 'Áp dụng tất cả',\r\n    frame: 'Khung',\r\n    reset: 'Đặt lại khung giờ',\r\n});\r\nfunction ScheduleTable({\r\n    label,\r\n    onSelectScheduleTabletRandom,\r\n    translate,\r\n    daysOfWeekSchedule,\r\n    canApplyAll = true,\r\n    handleApplyAll,\r\n    handleOk,\r\n    handleTimeChange,\r\n    handleReset,\r\n}) {\r\n    return (\r\n        <div>\r\n            <div style={{ padding: '10px' }}>{label}</div>\r\n            <table className=\"happy-hours-table\" style={{ width: '100%' }}>\r\n                <thead>\r\n                    <tr>\r\n                        <th width=\"14%\">{translate.formatMessage(messages.dayOfWeek)}</th>\r\n                        <th>{translate.formatMessage(messages.timeFrame)}</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {daysOfWeekSchedule.map((day, dayIndex) => (\r\n                        <tr key={day.value}>\r\n                            <td>{day.label}</td>\r\n                            <td style={{ padding: '10px' }}>\r\n                                <Form.List name={['schedule', day.value]}>\r\n                                    {(fields) => {\r\n                                        return (\r\n                                            <div className=\"no-margin-form-item\" style={{ display: 'flex', alignItems: 'end' }}>\r\n                                                <Space className=\"box-flex\" size={24}>\r\n                                                    {fields.map((field, index) => (\r\n                                                        <div key={field.key}>\r\n                                                            <div className=\"frame-label\">\r\n                                                                {translate.formatMessage(messages.frame)} {index + 1}\r\n                                                            </div>\r\n                                                            <Space className=\"box-flex\">\r\n                                                                <TimePickerField\r\n                                                                    onChange={(value) =>\r\n                                                                        handleTimeChange(\r\n                                                                            [day.value, field.name, 'from'],\r\n                                                                            value,\r\n                                                                        )\r\n                                                                    }\r\n                                                                    onOk={handleOk}\r\n                                                                    style={{ width: '76px' }}\r\n                                                                    size=\"small\"\r\n                                                                    name={[field.name, 'from']}\r\n                                                                    onSelect={(value) =>\r\n                                                                        onSelectScheduleTabletRandom(\r\n                                                                            [day.value, field.name, 'from'],\r\n                                                                            value,\r\n                                                                        )\r\n                                                                    }\r\n                                                                    width=\"100%\"\r\n                                                                    placeholder=\"From\"\r\n                                                                />\r\n                                                                <TimePickerField\r\n                                                                    onOk={handleOk}\r\n                                                                    style={{ width: '76px' }}\r\n                                                                    size=\"small\"\r\n                                                                    name={[field.name, 'to']}\r\n                                                                    onSelect={(value) =>\r\n                                                                        onSelectScheduleTabletRandom(\r\n                                                                            [day.value, field.name, 'to'],\r\n                                                                            value,\r\n                                                                        )\r\n                                                                    }\r\n                                                                    onChange={(value) =>\r\n                                                                        handleTimeChange(\r\n                                                                            [day.value, field.name, 'to'],\r\n                                                                            value,\r\n                                                                        )\r\n                                                                    }\r\n                                                                    width=\"100%\"\r\n                                                                    required\r\n                                                                    placeholder=\"to\"\r\n                                                                    requiredMsg=\"Enter to\"\r\n                                                                    validateTrigger={['onBlur']}\r\n                                                                />\r\n                                                            </Space>\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </Space>\r\n                                                <div className=\"wrap-btn-apply-all\">\r\n                                                    <BaseTooltip title={translate.formatMessage(messages.reset)}>\r\n                                                        <Button\r\n                                                            type=\"default\"\r\n                                                            size=\"middle\"\r\n                                                            style={{ marginRight: '30px' }}\r\n                                                            onClick={() => handleReset(day.value)}\r\n                                                        >\r\n                                                            <ReloadOutlined />\r\n                                                        </Button>\r\n                                                    </BaseTooltip>\r\n                                                    {!dayIndex && (\r\n                                                        <Button\r\n                                                            disabled={!canApplyAll}\r\n                                                            type=\"primary\"\r\n                                                            size=\"middle\"\r\n                                                            onClick={handleApplyAll}\r\n                                                        >\r\n                                                            {translate.formatMessage(messages.applyAll)}\r\n                                                        </Button>\r\n                                                    )}\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    }}\r\n                                </Form.List>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\nexport default ScheduleTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}