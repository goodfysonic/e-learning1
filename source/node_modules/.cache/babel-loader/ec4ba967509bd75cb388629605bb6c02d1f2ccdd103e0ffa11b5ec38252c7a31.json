{"ast":null,"code":"var _s = $RefreshSig$();\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React, { useEffect, useMemo, useState } from 'react';\nimport useQueryParams from './useQueryParams';\nimport { commonStatus, commonStatusColor, DEFAULT_TABLE_ITEM_SIZE, DEFAULT_TABLE_PAGE_START, STATUS_INACTIVE, storageKeys } from '@constants';\nimport { Modal, Button, Divider, Tag } from 'antd';\nimport { DeleteOutlined, LockOutlined, CheckOutlined, EditOutlined } from '@ant-design/icons';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Link, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport ActionBar from '@components/common/elements/ActionBar';\nimport useFetch from './useFetch';\nimport useNotification from './useNotification';\nimport SearchForm from '@components/common/form/SearchForm';\nimport HasPermission from '@components/common/elements/HasPermission';\nimport useAuth from './useAuth';\nimport { validatePermission } from '@utils';\nimport { BaseTooltip } from '@components/common/form/BaseTooltip';\nimport { getData } from '@utils/localStorage';\nconst message = defineMessages({\n  deleteConfirm: {\n    \"id\": \"hooks.useListBase.deleteConfirm\",\n    title: {\n      id: 'hook.useListBase.deleteConfirm.title',\n      defaultMessage: 'Bạn có chắc chắn muốn xóa {objectName} này không?'\n    },\n    ok: {\n      id: 'hook.useListBase.deleteConfirm.ok',\n      defaultMessage: 'Có'\n    },\n    cancel: {\n      id: 'hook.useListBase.deleteConfirm.cancel',\n      defaultMessage: 'Không'\n    }\n  },\n  changeStatusConfirm: {\n    \"id\": \"hooks.useListBase.changeStatusConfirm\",\n    title: {\n      id: 'hook.useListBase.deleteConfirm.title',\n      defaultMessage: 'Bạn có chắc chắn muốn khóa {objectName} này không?'\n    },\n    ok: {\n      id: 'hook.useListBase.deleteConfirm.ok',\n      defaultMessage: 'Có'\n    },\n    cancel: {\n      id: 'hook.useListBase.deleteConfirm.cancel',\n      defaultMessage: 'Không'\n    }\n  },\n  tableColumn: {\n    \"id\": \"hooks.useListBase.tableColumn\",\n    action: {\n      id: 'hook.useListBase.tableColumn.action',\n      defaultMessage: 'Hành động'\n    },\n    status: {\n      title: {\n        id: 'hook.useListBase.tableColumn.status.title',\n        defaultMessage: 'Trạng thái'\n      },\n      [commonStatus.ACTIVE]: {\n        id: 'hook.useListBase.tableColumn.status.active',\n        defaultMessage: 'Hoạt động'\n      },\n      [commonStatus.PENDING]: {\n        id: 'hook.useListBase.tableColumn.status.pending',\n        defaultMessage: 'Đang chờ'\n      },\n      [commonStatus.INACTIVE]: {\n        id: 'hook.useListBase.tableColumn.status.lock',\n        defaultMessage: 'Khóa'\n      }\n    }\n  },\n  notification: {\n    \"id\": \"hooks.useListBase.notification\",\n    deleteSuccess: {\n      id: 'hook.useListBase.notification.deleteSuccess',\n      defaultMessage: 'Xóa {objectName} thành công'\n    }\n  }\n});\nconst useListBase = ({\n  apiConfig = {\n    getList: null,\n    delete: null,\n    create: null,\n    update: null,\n    getById: null,\n    changeStatus: null\n  },\n  options = {\n    objectName: '',\n    pageSize: DEFAULT_TABLE_ITEM_SIZE\n  },\n  tabOptions = {\n    queryPage: {},\n    isTab: false\n  },\n  isProjectToken = false,\n  override\n} = {}) => {\n  _s();\n  const {\n    params: queryParams,\n    setQueryParams,\n    serializeParams,\n    deserializeParams\n  } = useQueryParams();\n  const [data, setData] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const userTokenProject = getData(storageKeys.USER_PROJECT_ACCESS_TOKEN);\n  const {\n    execute: executeGetList\n  } = useFetch(isProjectToken ? {\n    ...apiConfig.getList,\n    authorization: `Bearer ${userTokenProject}`\n  } : {\n    ...apiConfig.getList\n  });\n  const {\n    execute: executeDelete\n  } = useFetch(isProjectToken ? {\n    ...apiConfig.delete,\n    authorization: `Bearer ${userTokenProject}`\n  } : {\n    ...apiConfig.delete\n  });\n  const {\n    execute: executeChangeStatus\n  } = useFetch(isProjectToken ? {\n    ...apiConfig.changeStatus,\n    authorization: `Bearer ${userTokenProject}`\n  } : {\n    ...apiConfig.changeStatus\n  });\n  const [currentPageTab, setCurrentPageTab] = useState(0);\n  const [pagination, setPagination] = useState({\n    pageSize: options.pageSize,\n    total: 0,\n    current: 1\n  });\n  const notification = useNotification();\n  const {\n    pathname: pagePath\n  } = useLocation();\n  const {\n    permissions\n  } = useAuth();\n  const navigate = useNavigate();\n  const intl = useIntl();\n  const queryFilter = useMemo(() => deserializeParams(queryParams), [queryParams]);\n  const hasPermission = requiredPermissions => {\n    return validatePermission(requiredPermissions, permissions);\n  };\n  const mappingData = response => {\n    return {\n      data: response.data.content,\n      total: response.data.totalElements\n    };\n  };\n  const handleGetListError = error => {\n    console.log(error);\n    if (error?.response?.data?.code == '[Ex2]: Access is denied') {\n      notification({\n        type: 'error',\n        message: 'Access is denied'\n      });\n    } else {\n      notification({\n        type: 'error',\n        message: 'Lỗi'\n      });\n    }\n  };\n  const onCompletedGetList = response => {\n    const {\n      data,\n      total\n    } = mixinFuncs.mappingData(response);\n    setData(data);\n    setPagination(p => ({\n      ...p,\n      total\n    }));\n  };\n  const prepareGetListPathParams = () => {\n    return {};\n  };\n  const handleFetchList = params => {\n    if (!apiConfig.getList) throw new Error('apiConfig.getList is not defined');\n    setLoading(true);\n    executeGetList({\n      pathParams: mixinFuncs.prepareGetListPathParams(),\n      params,\n      onCompleted: response => {\n        mixinFuncs.onCompletedGetList(response);\n        setLoading(false);\n      },\n      onError: error => {\n        mixinFuncs.handleGetListError(error);\n        setLoading(false);\n      }\n    });\n  };\n  const prepareGetListParams = filter => {\n    let copyFilter = {\n      ...filter\n    };\n    let page = parseInt(queryParams.get('page'));\n    if (tabOptions.isTab) {\n      copyFilter = {\n        ...filter,\n        ...options.queryPage\n      };\n      page = parseInt(currentPageTab);\n    }\n    copyFilter.page = page > 0 ? page - 1 : DEFAULT_TABLE_PAGE_START;\n    copyFilter.size = options.pageSize;\n    return copyFilter;\n  };\n  const getList = filter => {\n    let params = mixinFuncs.prepareGetListParams(queryFilter);\n    if (tabOptions.isTab) {\n      params = mixinFuncs.prepareGetListParams({\n        ...tabOptions.queryPage,\n        ...filter\n      });\n    }\n    mixinFuncs.handleFetchList({\n      ...params\n    });\n  };\n  const changeFilter = filter => {\n    if (tabOptions.isTab) {\n      mixinFuncs.getList(filter);\n    } else {\n      setQueryParams(serializeParams(filter));\n    }\n  };\n  function changePagination(page) {\n    if (tabOptions.isTab) {\n      setCurrentPageTab(page.current);\n    } else {\n      queryParams.set('page', page.current);\n      setQueryParams(queryParams);\n    }\n  }\n  const handleDeleteItemError = error => {\n    notification({\n      type: 'error',\n      message: error.message || `Delete ${options.objectName} failed`\n    });\n  };\n  const onDeleteItemCompleted = id => {\n    let currentPage = queryParams.get('page');\n    if (tabOptions.isTab) {\n      currentPage = currentPageTab;\n    }\n    if (data.length === 1 && currentPage > 1) {\n      if (tabOptions.isTab.isTab) {\n        setCurrentPageTab(currentPage - 1);\n      } else {\n        queryParams.set('page', currentPage - 1);\n        setQueryParams(queryParams);\n      }\n    } else {\n      mixinFuncs.getList();\n      // setData((data) => data.filter((item) => item.id !== id));\n    }\n  };\n  const handleDeleteItem = id => {\n    setLoading(true);\n    executeDelete({\n      pathParams: {\n        id\n      },\n      onCompleted: response => {\n        mixinFuncs.onDeleteItemCompleted(id);\n        notification({\n          message: intl.formatMessage(message.notification.deleteSuccess, {\n            objectName: options.objectName\n          })\n        });\n      },\n      onError: error => {\n        mixinFuncs.handleDeleteItemError(error);\n        setLoading(false);\n      }\n    });\n  };\n  const showDeleteItemConfirm = id => {\n    if (!apiConfig.delete) throw new Error('apiConfig.delete is not defined');\n    Modal.confirm({\n      title: intl.formatMessage(message.deleteConfirm.title, {\n        objectName: options.objectName\n      }),\n      content: '',\n      okText: intl.formatMessage(message.deleteConfirm.ok),\n      cancelText: intl.formatMessage(message.deleteConfirm.cancel),\n      onOk: () => {\n        mixinFuncs.handleDeleteItem(id);\n      }\n    });\n  };\n  const handleChangeStatusError = error => {\n    notification({\n      type: 'error',\n      message: error.message\n    });\n  };\n\n  // This function is currently not needed\n  const handleChangeStatus = (id, status) => {\n    executeChangeStatus({\n      apiConfig: apiConfig.changeStatus,\n      data: {\n        status: STATUS_INACTIVE,\n        id\n      },\n      onCompleted: response => {\n        mixinFuncs.getList();\n      },\n      onError: mixinFuncs.handleChangeStatusError\n    });\n  };\n  const showChangeStatusConfirm = (id, status) => {\n    if (!apiConfig.changeStatus) throw new Error('apiConfig.changeStatus is not defined');\n    Modal.confirm({\n      title: intl.formatMessage(message.changeStatusConfirm.title, {\n        objectName: options.objectName\n      }),\n      content: '',\n      okText: intl.formatMessage(message.changeStatusConfirm.ok),\n      cancelText: intl.formatMessage(message.changeStatusConfirm.cancel),\n      onOk: () => {\n        mixinFuncs.handleChangeStatus(id, status);\n      }\n    });\n  };\n  const additionalActionColumnButtons = () => {\n    return {};\n  };\n  const actionColumnButtons = (additionalButtons = {}) => ({\n    delete: ({\n      id,\n      buttonProps\n    }) => {\n      if (!isProjectToken && !mixinFuncs.hasPermission(apiConfig.delete?.baseURL)) return null;\n      return /*#__PURE__*/React.createElement(BaseTooltip, {\n        type: \"delete\",\n        objectName: options.objectName\n      }, /*#__PURE__*/React.createElement(Button, _extends({}, buttonProps, {\n        type: \"link\",\n        onClick: e => {\n          e.stopPropagation();\n          mixinFuncs.showDeleteItemConfirm(id);\n        },\n        style: {\n          padding: 0\n        }\n      }), /*#__PURE__*/React.createElement(DeleteOutlined, {\n        style: {\n          color: 'red'\n        }\n      })));\n    },\n    changeStatus: ({\n      id,\n      status,\n      buttonProps\n    }) => {\n      return /*#__PURE__*/React.createElement(Button, _extends({}, buttonProps, {\n        type: \"link\",\n        onClick: e => {\n          e.stopPropagation();\n          mixinFuncs.showChangeStatusConfirm(id, !status);\n        },\n        style: {\n          padding: 0\n        }\n      }), status === commonStatus.ACTIVE ? /*#__PURE__*/React.createElement(LockOutlined, null) : /*#__PURE__*/React.createElement(CheckOutlined, null));\n    },\n    edit: ({\n      buttonProps,\n      ...dataRow\n    }) => {\n      if (!isProjectToken && !mixinFuncs.hasPermission([apiConfig.update?.baseURL, apiConfig.getById?.baseURL])) return null;\n      return /*#__PURE__*/React.createElement(BaseTooltip, {\n        type: \"edit\",\n        objectName: options.objectName\n      }, /*#__PURE__*/React.createElement(Button, _extends({}, buttonProps, {\n        onClick: e => {\n          e.stopPropagation();\n          navigate(mixinFuncs.getItemDetailLink(dataRow), {\n            state: {\n              action: 'edit',\n              prevPath: location.pathname\n            }\n          });\n        },\n        type: \"link\",\n        style: {\n          padding: 0\n        }\n      }), /*#__PURE__*/React.createElement(EditOutlined, {\n        color: \"red\"\n      })));\n    },\n    ...additionalButtons\n  });\n  const createActionColumnButtons = (actions, data) => {\n    const actionButtons = [];\n    const buttons = mixinFuncs.actionColumnButtons(mixinFuncs.additionalActionColumnButtons());\n    Object.entries(actions).forEach(([key, value]) => {\n      let _value = value;\n      if (typeof value === 'function') {\n        _value = value(data);\n      }\n      if (_value && buttons[key]) {\n        actionButtons.push(buttons[key]);\n      }\n    });\n    return actionButtons;\n  };\n  const checkPermission = actions => {\n    let isShow = false;\n    Object.entries(actions).forEach(([type, value]) => {\n      if (value || value?.show) {\n        switch (type) {\n          case 'delete':\n            if (isProjectToken) {\n              isShow = true;\n            } else mixinFuncs.hasPermission([apiConfig.delete?.baseURL]);\n            {\n              isShow = true;\n            }\n            break;\n          case 'edit':\n            if (isProjectToken) {\n              isShow = true;\n            } else mixinFuncs.hasPermission([apiConfig.update?.baseURL, apiConfig.getById?.baseURL]);\n            {\n              isShow = true;\n            }\n            break;\n          default:\n            // if (mixinFuncs.hasPermission(value?.permissions)) isShow = true;\n            isShow = true;\n            break;\n        }\n        return;\n      }\n    });\n    return isShow;\n  };\n  const renderActionColumn = (action = {\n    edit: false,\n    delete: false,\n    changeStatus: false\n  }, columnsProps, buttonProps) => {\n    const isRender = checkPermission(action);\n    if (!isRender) return;\n    return {\n      align: 'center',\n      title: intl.formatMessage(message.tableColumn.action),\n      ...columnsProps,\n      render: data => {\n        const buttons = [];\n        const actionButtons = mixinFuncs.createActionColumnButtons(action, data);\n        actionButtons.forEach((ActionItem, index) => {\n          if (ActionItem({\n            ...data,\n            ...buttonProps\n          })) {\n            buttons.push(ActionItem);\n          }\n        });\n        return /*#__PURE__*/React.createElement(\"span\", null, buttons.map((ActionItem, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n          key: index\n        }, index > 0 && /*#__PURE__*/React.createElement(Divider, {\n          type: \"vertical\"\n        }), /*#__PURE__*/React.createElement(\"span\", null, ActionItem({\n          ...data,\n          ...buttonProps\n        }) ? /*#__PURE__*/React.createElement(ActionItem, _extends({}, data, buttonProps)) : null))));\n      }\n    };\n  };\n  const renderIdColumn = columnsProps => ({\n    title: 'ID',\n    dataIndex: 'id',\n    width: '50px',\n    align: 'left',\n    ...columnsProps\n  });\n  const renderStatusColumn = columnsProps => {\n    return {\n      title: intl.formatMessage(message.tableColumn.status.title),\n      dataIndex: 'status',\n      align: 'center',\n      ...columnsProps,\n      render: status => /*#__PURE__*/React.createElement(Tag, {\n        color: commonStatusColor[status]\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          padding: '0 4px',\n          fontSize: 14\n        }\n      }, intl.formatMessage(message.tableColumn.status[status])))\n    };\n  };\n  const getItemDetailLink = dataRow => {\n    return `${pagePath}/${dataRow.id}`;\n  };\n  const getCreateLink = () => {\n    return `${pagePath}/create`;\n  };\n  const renderActionBar = ({\n    type,\n    style,\n    onBulkDelete,\n    selectedRows = []\n  } = {}) => {\n    return /*#__PURE__*/React.createElement(ActionBar, {\n      createPermission: !isProjectToken && apiConfig.create?.baseURL,\n      selectedRows: selectedRows,\n      onBulkDelete: onBulkDelete,\n      objectName: options.objectName,\n      createLink: mixinFuncs.getCreateLink(),\n      location: location,\n      type: type,\n      style: style\n    });\n  };\n  const handleFilterSearchChange = values => {\n    mixinFuncs.changeFilter(values);\n  };\n  const renderSearchForm = ({\n    fields = [],\n    getFormInstance,\n    hiddenAction,\n    className,\n    initialValues,\n    onSearch,\n    onReset,\n    alignSearchField = 'left',\n    activeTab\n  }) => {\n    return /*#__PURE__*/React.createElement(SearchForm, {\n      activeTab: activeTab,\n      getFormInstance: getFormInstance,\n      alignSearchField: alignSearchField,\n      fields: fields,\n      initialValues: initialValues,\n      onSearch: values => {\n        mixinFuncs.handleFilterSearchChange(values);\n        onSearch?.(values);\n      },\n      hiddenAction: hiddenAction,\n      className: className,\n      onReset: () => {\n        mixinFuncs.changeFilter({});\n        onReset?.();\n      }\n    });\n  };\n  const filterLanguage = (dataRow = []) => {\n    let renderItem;\n    dataRow.filter(item => {\n      if (item.languageId === '1') renderItem = item;\n    });\n    return renderItem || {};\n  };\n  const overrideHandler = () => {\n    const centralizedHandler = {\n      hasPermission,\n      mappingData,\n      handleGetListError,\n      handleFetchList,\n      prepareGetListParams,\n      getList,\n      changeFilter,\n      showDeleteItemConfirm,\n      handleDeleteItem,\n      handleDeleteItemError,\n      createActionColumnButtons,\n      showChangeStatusConfirm,\n      handleChangeStatus,\n      handleChangeStatusError,\n      renderActionColumn,\n      renderIdColumn,\n      getItemDetailLink,\n      getCreateLink,\n      renderStatusColumn,\n      changePagination,\n      additionalActionColumnButtons,\n      renderActionBar,\n      onCompletedGetList,\n      onDeleteItemCompleted,\n      filterLanguage,\n      renderSearchForm,\n      handleFilterSearchChange,\n      prepareGetListPathParams,\n      actionColumnButtons,\n      setQueryParams\n    };\n    override?.(centralizedHandler);\n    return centralizedHandler;\n  };\n  const mixinFuncs = overrideHandler();\n  useEffect(() => {\n    mixinFuncs.getList();\n    let page = parseInt(queryFilter.page);\n    if (tabOptions) {\n      page = parseInt(currentPageTab);\n    }\n    if (page > 0 && page !== pagination.current) {\n      setPagination(p => ({\n        ...p,\n        current: page\n      }));\n    } else if (page < 1) {\n      setPagination(p => ({\n        ...p,\n        current: 1\n      }));\n    }\n  }, [queryParams, pagePath, currentPageTab]);\n  return {\n    loading,\n    data,\n    setData,\n    queryFilter,\n    actionColumnButtons,\n    changeFilter,\n    changePagination,\n    pagination,\n    mixinFuncs,\n    getList,\n    setLoading,\n    pagePath,\n    serializeParams,\n    queryParams\n  };\n};\n_s(useListBase, \"VuQU/4U+9SzZwU8m5Xa5yWDeIUQ=\", false, function () {\n  return [useQueryParams, useFetch, useFetch, useFetch, useNotification, useLocation, useAuth, useNavigate, useIntl];\n});\nexport default useListBase;","map":{"version":3,"names":["React","useEffect","useMemo","useState","useQueryParams","commonStatus","commonStatusColor","DEFAULT_TABLE_ITEM_SIZE","DEFAULT_TABLE_PAGE_START","STATUS_INACTIVE","storageKeys","Modal","Button","Divider","Tag","DeleteOutlined","LockOutlined","CheckOutlined","EditOutlined","defineMessages","useIntl","Link","useLocation","useNavigate","useParams","ActionBar","useFetch","useNotification","SearchForm","HasPermission","useAuth","validatePermission","BaseTooltip","getData","message","deleteConfirm","title","id","defaultMessage","ok","cancel","changeStatusConfirm","tableColumn","action","status","ACTIVE","PENDING","INACTIVE","notification","deleteSuccess","useListBase","apiConfig","getList","delete","create","update","getById","changeStatus","options","objectName","pageSize","tabOptions","queryPage","isTab","isProjectToken","override","_s","params","queryParams","setQueryParams","serializeParams","deserializeParams","data","setData","loading","setLoading","userTokenProject","USER_PROJECT_ACCESS_TOKEN","execute","executeGetList","authorization","executeDelete","executeChangeStatus","currentPageTab","setCurrentPageTab","pagination","setPagination","total","current","pathname","pagePath","permissions","navigate","intl","queryFilter","hasPermission","requiredPermissions","mappingData","response","content","totalElements","handleGetListError","error","console","log","code","type","onCompletedGetList","mixinFuncs","p","prepareGetListPathParams","handleFetchList","Error","pathParams","onCompleted","onError","prepareGetListParams","filter","copyFilter","page","parseInt","get","size","changeFilter","changePagination","set","handleDeleteItemError","onDeleteItemCompleted","currentPage","length","handleDeleteItem","formatMessage","showDeleteItemConfirm","confirm","okText","cancelText","onOk","handleChangeStatusError","handleChangeStatus","showChangeStatusConfirm","additionalActionColumnButtons","actionColumnButtons","additionalButtons","buttonProps","baseURL","createElement","_extends","onClick","e","stopPropagation","style","padding","color","edit","dataRow","getItemDetailLink","state","prevPath","location","createActionColumnButtons","actions","actionButtons","buttons","Object","entries","forEach","key","value","_value","push","checkPermission","isShow","show","renderActionColumn","columnsProps","isRender","align","render","ActionItem","index","map","Fragment","renderIdColumn","dataIndex","width","renderStatusColumn","fontSize","getCreateLink","renderActionBar","onBulkDelete","selectedRows","createPermission","createLink","handleFilterSearchChange","values","renderSearchForm","fields","getFormInstance","hiddenAction","className","initialValues","onSearch","onReset","alignSearchField","activeTab","filterLanguage","renderItem","item","languageId","overrideHandler","centralizedHandler"],"sources":["C:/Users/PC/Downloads/elms-cms/elms-cms/source/src/hooks/useListBase.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\nimport useQueryParams from './useQueryParams';\r\nimport {\r\n    commonStatus,\r\n    commonStatusColor,\r\n    DEFAULT_TABLE_ITEM_SIZE,\r\n    DEFAULT_TABLE_PAGE_START,\r\n    STATUS_INACTIVE,\r\n    storageKeys,\r\n} from '@constants';\r\n\r\nimport { Modal, Button, Divider, Tag } from 'antd';\r\nimport { DeleteOutlined, LockOutlined, CheckOutlined, EditOutlined } from '@ant-design/icons';\r\n\r\nimport { defineMessages, useIntl } from 'react-intl';\r\nimport { Link, useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport ActionBar from '@components/common/elements/ActionBar';\r\nimport useFetch from './useFetch';\r\nimport useNotification from './useNotification';\r\nimport SearchForm from '@components/common/form/SearchForm';\r\nimport HasPermission from '@components/common/elements/HasPermission';\r\nimport useAuth from './useAuth';\r\nimport { validatePermission } from '@utils';\r\nimport { BaseTooltip } from '@components/common/form/BaseTooltip';\r\nimport { getData } from '@utils/localStorage';\r\n\r\nconst message = defineMessages({\r\n    deleteConfirm: {\r\n        title: {\r\n            id: 'hook.useListBase.deleteConfirm.title',\r\n            defaultMessage: 'Bạn có chắc chắn muốn xóa {objectName} này không?',\r\n        },\r\n        ok: {\r\n            id: 'hook.useListBase.deleteConfirm.ok',\r\n            defaultMessage: 'Có',\r\n        },\r\n        cancel: {\r\n            id: 'hook.useListBase.deleteConfirm.cancel',\r\n            defaultMessage: 'Không',\r\n        },\r\n    },\r\n    changeStatusConfirm: {\r\n        title: {\r\n            id: 'hook.useListBase.deleteConfirm.title',\r\n            defaultMessage: 'Bạn có chắc chắn muốn khóa {objectName} này không?',\r\n        },\r\n        ok: {\r\n            id: 'hook.useListBase.deleteConfirm.ok',\r\n            defaultMessage: 'Có',\r\n        },\r\n        cancel: {\r\n            id: 'hook.useListBase.deleteConfirm.cancel',\r\n            defaultMessage: 'Không',\r\n        },\r\n    },\r\n    tableColumn: {\r\n        action: {\r\n            id: 'hook.useListBase.tableColumn.action',\r\n            defaultMessage: 'Hành động',\r\n        },\r\n        status: {\r\n            title: {\r\n                id: 'hook.useListBase.tableColumn.status.title',\r\n                defaultMessage: 'Trạng thái',\r\n            },\r\n            [commonStatus.ACTIVE]: {\r\n                id: 'hook.useListBase.tableColumn.status.active',\r\n                defaultMessage: 'Hoạt động',\r\n            },\r\n            [commonStatus.PENDING]: {\r\n                id: 'hook.useListBase.tableColumn.status.pending',\r\n                defaultMessage: 'Đang chờ',\r\n            },\r\n            [commonStatus.INACTIVE]: {\r\n                id: 'hook.useListBase.tableColumn.status.lock',\r\n                defaultMessage: 'Khóa',\r\n            },\r\n        },\r\n    },\r\n    notification: {\r\n        deleteSuccess: {\r\n            id: 'hook.useListBase.notification.deleteSuccess',\r\n            defaultMessage: 'Xóa {objectName} thành công',\r\n        },\r\n    },\r\n});\r\n\r\nconst useListBase = ({\r\n    apiConfig = {\r\n        getList: null,\r\n        delete: null,\r\n        create: null,\r\n        update: null,\r\n        getById: null,\r\n        changeStatus: null,\r\n    },\r\n    options = {\r\n        objectName: '',\r\n        pageSize: DEFAULT_TABLE_ITEM_SIZE,\r\n    },\r\n    tabOptions = {\r\n        queryPage: {},\r\n        isTab: false,\r\n    },\r\n    isProjectToken = false,\r\n    override,\r\n} = {}) => {\r\n    const { params: queryParams, setQueryParams, serializeParams, deserializeParams } = useQueryParams();\r\n    const [data, setData] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const userTokenProject = getData(storageKeys.USER_PROJECT_ACCESS_TOKEN);\r\n    const { execute: executeGetList } = useFetch(\r\n        isProjectToken\r\n            ? { ...apiConfig.getList, authorization: `Bearer ${userTokenProject}` }\r\n            : { ...apiConfig.getList },\r\n    );\r\n    const { execute: executeDelete } = useFetch(\r\n        isProjectToken ? { ...apiConfig.delete, authorization: `Bearer ${userTokenProject}` } : { ...apiConfig.delete },\r\n    );\r\n    const { execute: executeChangeStatus } = useFetch(\r\n        isProjectToken\r\n            ? { ...apiConfig.changeStatus, authorization: `Bearer ${userTokenProject}` }\r\n            : { ...apiConfig.changeStatus },\r\n    );\r\n    const [currentPageTab, setCurrentPageTab] = useState(0);\r\n    const [pagination, setPagination] = useState({\r\n        pageSize: options.pageSize,\r\n        total: 0,\r\n        current: 1,\r\n    });\r\n    const notification = useNotification();\r\n    const { pathname: pagePath } = useLocation();\r\n    const { permissions } = useAuth();\r\n    const navigate = useNavigate();\r\n    const intl = useIntl();\r\n\r\n    const queryFilter = useMemo(() => deserializeParams(queryParams), [queryParams]);\r\n\r\n    const hasPermission = (requiredPermissions) => {\r\n        return validatePermission(requiredPermissions, permissions);\r\n    };\r\n\r\n    const mappingData = (response) => {\r\n        return {\r\n            data: response.data.content,\r\n            total: response.data.totalElements,\r\n        };\r\n    };\r\n\r\n    const handleGetListError = (error) => {\r\n        console.log(error);\r\n        if (error?.response?.data?.code == '[Ex2]: Access is denied') {\r\n            notification({ type: 'error', message: 'Access is denied' });\r\n        } else {\r\n            notification({ type: 'error', message: 'Lỗi' });\r\n        }\r\n    };\r\n\r\n    const onCompletedGetList = (response) => {\r\n        const { data, total } = mixinFuncs.mappingData(response);\r\n\r\n        setData(data);\r\n        setPagination((p) => ({ ...p, total }));\r\n    };\r\n\r\n    const prepareGetListPathParams = () => {\r\n        return {};\r\n    };\r\n\r\n    const handleFetchList = (params) => {\r\n        if (!apiConfig.getList) throw new Error('apiConfig.getList is not defined');\r\n        setLoading(true);\r\n        executeGetList({\r\n            pathParams: mixinFuncs.prepareGetListPathParams(),\r\n            params,\r\n            onCompleted: (response) => {\r\n                mixinFuncs.onCompletedGetList(response);\r\n                setLoading(false);\r\n            },\r\n            onError: (error) => {\r\n                mixinFuncs.handleGetListError(error);\r\n                setLoading(false);\r\n            },\r\n        });\r\n    };\r\n\r\n    const prepareGetListParams = (filter) => {\r\n        let copyFilter = { ...filter };\r\n        let page = parseInt(queryParams.get('page'));\r\n        if (tabOptions.isTab) {\r\n            copyFilter = { ...filter, ...options.queryPage };\r\n            page = parseInt(currentPageTab);\r\n        }\r\n\r\n        copyFilter.page = page > 0 ? page - 1 : DEFAULT_TABLE_PAGE_START;\r\n\r\n        copyFilter.size = options.pageSize;\r\n\r\n        return copyFilter;\r\n    };\r\n\r\n    const getList = (filter) => {\r\n        let params = mixinFuncs.prepareGetListParams(queryFilter);\r\n        if (tabOptions.isTab) {\r\n            params = mixinFuncs.prepareGetListParams({ ...tabOptions.queryPage, ...filter });\r\n        }\r\n        mixinFuncs.handleFetchList({ ...params });\r\n    };\r\n\r\n    const changeFilter = (filter) => {\r\n        if (tabOptions.isTab) {\r\n            mixinFuncs.getList(filter);\r\n        } else {\r\n            setQueryParams(serializeParams(filter));\r\n        }\r\n    };\r\n\r\n    function changePagination(page) {\r\n        if (tabOptions.isTab) {\r\n            setCurrentPageTab(page.current);\r\n        } else {\r\n            queryParams.set('page', page.current);\r\n            setQueryParams(queryParams);\r\n        }\r\n    }\r\n\r\n    const handleDeleteItemError = (error) => {\r\n        notification({ type: 'error', message: error.message || `Delete ${options.objectName} failed` });\r\n    };\r\n\r\n    const onDeleteItemCompleted = (id) => {\r\n        let currentPage = queryParams.get('page');\r\n        if (tabOptions.isTab) {\r\n            currentPage = currentPageTab;\r\n        }\r\n        if (data.length === 1 && currentPage > 1) {\r\n            if (tabOptions.isTab.isTab) {\r\n                setCurrentPageTab(currentPage - 1);\r\n            } else {\r\n                queryParams.set('page', currentPage - 1);\r\n                setQueryParams(queryParams);\r\n            }\r\n        } else {\r\n            mixinFuncs.getList();\r\n            // setData((data) => data.filter((item) => item.id !== id));\r\n        }\r\n    };\r\n\r\n    const handleDeleteItem = (id) => {\r\n        setLoading(true);\r\n        executeDelete({\r\n            pathParams: { id },\r\n            onCompleted: (response) => {\r\n                mixinFuncs.onDeleteItemCompleted(id);\r\n\r\n                notification({\r\n                    message: intl.formatMessage(message.notification.deleteSuccess, {\r\n                        objectName: options.objectName,\r\n                    }),\r\n                });\r\n            },\r\n            onError: (error) => {\r\n                mixinFuncs.handleDeleteItemError(error);\r\n                setLoading(false);\r\n            },\r\n        });\r\n    };\r\n\r\n    const showDeleteItemConfirm = (id) => {\r\n        if (!apiConfig.delete) throw new Error('apiConfig.delete is not defined');\r\n\r\n        Modal.confirm({\r\n            title: intl.formatMessage(message.deleteConfirm.title, { objectName: options.objectName }),\r\n            content: '',\r\n            okText: intl.formatMessage(message.deleteConfirm.ok),\r\n            cancelText: intl.formatMessage(message.deleteConfirm.cancel),\r\n            onOk: () => {\r\n                mixinFuncs.handleDeleteItem(id);\r\n            },\r\n        });\r\n    };\r\n\r\n    const handleChangeStatusError = (error) => {\r\n        notification({ type: 'error', message: error.message });\r\n    };\r\n\r\n    // This function is currently not needed\r\n    const handleChangeStatus = (id, status) => {\r\n        executeChangeStatus({\r\n            apiConfig: apiConfig.changeStatus,\r\n            data: { status: STATUS_INACTIVE, id },\r\n            onCompleted: (response) => {\r\n                mixinFuncs.getList();\r\n            },\r\n            onError: mixinFuncs.handleChangeStatusError,\r\n        });\r\n    };\r\n\r\n    const showChangeStatusConfirm = (id, status) => {\r\n        if (!apiConfig.changeStatus) throw new Error('apiConfig.changeStatus is not defined');\r\n\r\n        Modal.confirm({\r\n            title: intl.formatMessage(message.changeStatusConfirm.title, { objectName: options.objectName }),\r\n            content: '',\r\n            okText: intl.formatMessage(message.changeStatusConfirm.ok),\r\n            cancelText: intl.formatMessage(message.changeStatusConfirm.cancel),\r\n            onOk: () => {\r\n                mixinFuncs.handleChangeStatus(id, status);\r\n            },\r\n        });\r\n    };\r\n\r\n    const additionalActionColumnButtons = () => {\r\n        return {};\r\n    };\r\n\r\n    const actionColumnButtons = (additionalButtons = {}) => ({\r\n        delete: ({ id, buttonProps }) => {\r\n            if (!isProjectToken && !mixinFuncs.hasPermission(apiConfig.delete?.baseURL)) return null;\r\n\r\n            return (\r\n                <BaseTooltip type=\"delete\" objectName={options.objectName}>\r\n                    <Button\r\n                        {...buttonProps}\r\n                        type=\"link\"\r\n                        onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            mixinFuncs.showDeleteItemConfirm(id);\r\n                        }}\r\n                        style={{ padding: 0 }}\r\n                    >\r\n                        <DeleteOutlined style={{ color: 'red' }} />\r\n                    </Button>\r\n                </BaseTooltip>\r\n            );\r\n        },\r\n        changeStatus: ({ id, status, buttonProps }) => {\r\n            return (\r\n                <Button\r\n                    {...buttonProps}\r\n                    type=\"link\"\r\n                    onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        mixinFuncs.showChangeStatusConfirm(id, !status);\r\n                    }}\r\n                    style={{ padding: 0 }}\r\n                >\r\n                    {status === commonStatus.ACTIVE ? <LockOutlined /> : <CheckOutlined />}\r\n                </Button>\r\n            );\r\n        },\r\n        edit: ({ buttonProps, ...dataRow }) => {\r\n            if (!isProjectToken && !mixinFuncs.hasPermission([apiConfig.update?.baseURL, apiConfig.getById?.baseURL]))\r\n                return null;\r\n\r\n            return (\r\n                <BaseTooltip type=\"edit\" objectName={options.objectName}>\r\n                    <Button\r\n                        {...buttonProps}\r\n                        onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            navigate(mixinFuncs.getItemDetailLink(dataRow), {\r\n                                state: { action: 'edit', prevPath: location.pathname },\r\n                            });\r\n                        }}\r\n                        type=\"link\"\r\n                        style={{ padding: 0 }}\r\n                    >\r\n                        <EditOutlined color=\"red\" />\r\n                    </Button>\r\n                </BaseTooltip>\r\n            );\r\n        },\r\n        ...additionalButtons,\r\n    });\r\n\r\n    const createActionColumnButtons = (actions, data) => {\r\n        const actionButtons = [];\r\n        const buttons = mixinFuncs.actionColumnButtons(mixinFuncs.additionalActionColumnButtons());\r\n\r\n        Object.entries(actions).forEach(([key, value]) => {\r\n            let _value = value;\r\n            if (typeof value === 'function') {\r\n                _value = value(data);\r\n            }\r\n            if (_value && buttons[key]) {\r\n                actionButtons.push(buttons[key]);\r\n            }\r\n        });\r\n\r\n        return actionButtons;\r\n    };\r\n\r\n    const checkPermission = (actions) => {\r\n        let isShow = false;\r\n        Object.entries(actions).forEach(([type, value]) => {\r\n            if (value || value?.show) {\r\n                switch (type) {\r\n                                case 'delete':\r\n                                    if (isProjectToken) {\r\n                                        isShow = true;\r\n                                    } else mixinFuncs.hasPermission([apiConfig.delete?.baseURL]);\r\n                                    {\r\n                                        isShow = true;\r\n                                    }\r\n                                    break;\r\n\r\n                                case 'edit':\r\n                                    if (isProjectToken) {\r\n                                        isShow = true;\r\n                                    } else mixinFuncs.hasPermission([apiConfig.update?.baseURL, apiConfig.getById?.baseURL]);\r\n                                    {\r\n                                        isShow = true;\r\n                                    }\r\n\r\n                                    break;\r\n                                default:\r\n                                    // if (mixinFuncs.hasPermission(value?.permissions)) isShow = true;\r\n                                    isShow = true;\r\n                                    break;\r\n                }\r\n                return;\r\n            }\r\n        });\r\n        return isShow;\r\n    };\r\n\r\n    const renderActionColumn = (\r\n        action = { edit: false, delete: false, changeStatus: false },\r\n        columnsProps,\r\n        buttonProps,\r\n    ) => {\r\n        const isRender = checkPermission(action);\r\n        if (!isRender) return;\r\n        return {\r\n            align: 'center',\r\n            title: intl.formatMessage(message.tableColumn.action),\r\n            ...columnsProps,\r\n            render: (data) => {\r\n                const buttons = [];\r\n                const actionButtons = mixinFuncs.createActionColumnButtons(action, data);\r\n                actionButtons.forEach((ActionItem, index) => {\r\n                    if (ActionItem({ ...data, ...buttonProps })) {\r\n                        buttons.push(ActionItem);\r\n                    }\r\n                });\r\n\r\n                return (\r\n                    <span>\r\n                        {buttons.map((ActionItem, index) => (\r\n                            <React.Fragment key={index}>\r\n                                {index > 0 && <Divider type=\"vertical\" />}\r\n                                <span>\r\n                                    {ActionItem({ ...data, ...buttonProps }) ? (\r\n                                        <ActionItem {...data} {...buttonProps} />\r\n                                    ) : null}\r\n                                </span>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </span>\r\n                );\r\n            },\r\n        };\r\n    };\r\n\r\n    const renderIdColumn = (columnsProps) => ({\r\n        title: 'ID',\r\n        dataIndex: 'id',\r\n        width: '50px',\r\n        align: 'left',\r\n        ...columnsProps,\r\n    });\r\n\r\n    const renderStatusColumn = (columnsProps) => {\r\n        return {\r\n            title: intl.formatMessage(message.tableColumn.status.title),\r\n            dataIndex: 'status',\r\n            align: 'center',\r\n            ...columnsProps,\r\n            render: (status) => (\r\n                <Tag color={commonStatusColor[status]}>\r\n                    <div style={{ padding: '0 4px', fontSize: 14 }}>\r\n                        {intl.formatMessage(message.tableColumn.status[status])}\r\n                    </div>\r\n                </Tag>\r\n            ),\r\n        };\r\n    };\r\n\r\n    const getItemDetailLink = (dataRow) => {\r\n        return `${pagePath}/${dataRow.id}`;\r\n    };\r\n\r\n    const getCreateLink = () => {\r\n        return `${pagePath}/create`;\r\n    };\r\n\r\n    const renderActionBar = ({ type, style, onBulkDelete, selectedRows = [] } = {}) => {\r\n        return (\r\n            <ActionBar\r\n                createPermission={!isProjectToken && apiConfig.create?.baseURL}\r\n                selectedRows={selectedRows}\r\n                onBulkDelete={onBulkDelete}\r\n                objectName={options.objectName}\r\n                createLink={mixinFuncs.getCreateLink()}\r\n                location={location}\r\n                type={type}\r\n                style={style}\r\n            />\r\n        );\r\n    };\r\n\r\n    const handleFilterSearchChange = (values) => {\r\n        mixinFuncs.changeFilter(values);\r\n    };\r\n\r\n    const renderSearchForm = ({\r\n        fields = [],\r\n        getFormInstance,\r\n        hiddenAction,\r\n        className,\r\n        initialValues,\r\n        onSearch,\r\n        onReset,\r\n        alignSearchField = 'left',\r\n        activeTab,\r\n    }) => {\r\n        return (\r\n            <SearchForm\r\n                activeTab={activeTab}\r\n                getFormInstance={getFormInstance}\r\n                alignSearchField={alignSearchField}\r\n                fields={fields}\r\n                initialValues={initialValues}\r\n                onSearch={(values) => {\r\n                    mixinFuncs.handleFilterSearchChange(values);\r\n                    onSearch?.(values);\r\n                }}\r\n                hiddenAction={hiddenAction}\r\n                className={className}\r\n                onReset={() => {\r\n                    mixinFuncs.changeFilter({});\r\n                    onReset?.();\r\n                }}\r\n            />\r\n        );\r\n    };\r\n\r\n    const filterLanguage = (dataRow = []) => {\r\n        let renderItem;\r\n        dataRow.filter((item) => {\r\n            if (item.languageId === '1') renderItem = item;\r\n        });\r\n        return renderItem || {};\r\n    };\r\n\r\n    const overrideHandler = () => {\r\n        const centralizedHandler = {\r\n            hasPermission,\r\n            mappingData,\r\n            handleGetListError,\r\n            handleFetchList,\r\n            prepareGetListParams,\r\n            getList,\r\n            changeFilter,\r\n            showDeleteItemConfirm,\r\n            handleDeleteItem,\r\n            handleDeleteItemError,\r\n            createActionColumnButtons,\r\n            showChangeStatusConfirm,\r\n            handleChangeStatus,\r\n            handleChangeStatusError,\r\n            renderActionColumn,\r\n            renderIdColumn,\r\n            getItemDetailLink,\r\n            getCreateLink,\r\n            renderStatusColumn,\r\n            changePagination,\r\n            additionalActionColumnButtons,\r\n            renderActionBar,\r\n            onCompletedGetList,\r\n            onDeleteItemCompleted,\r\n            filterLanguage,\r\n            renderSearchForm,\r\n            handleFilterSearchChange,\r\n            prepareGetListPathParams,\r\n            actionColumnButtons,\r\n            setQueryParams,\r\n        };\r\n\r\n        override?.(centralizedHandler);\r\n\r\n        return centralizedHandler;\r\n    };\r\n\r\n    const mixinFuncs = overrideHandler();\r\n\r\n    useEffect(() => {\r\n        mixinFuncs.getList();\r\n\r\n        let page = parseInt(queryFilter.page);\r\n        if (tabOptions) {\r\n            page = parseInt(currentPageTab);\r\n        }\r\n        if (page > 0 && page !== pagination.current) {\r\n            setPagination((p) => ({ ...p, current: page }));\r\n        } else if (page < 1) {\r\n            setPagination((p) => ({ ...p, current: 1 }));\r\n        }\r\n    }, [queryParams, pagePath, currentPageTab]);\r\n\r\n    return {\r\n        loading,\r\n        data,\r\n        setData,\r\n        queryFilter,\r\n        actionColumnButtons,\r\n        changeFilter,\r\n        changePagination,\r\n        pagination,\r\n        mixinFuncs,\r\n        getList,\r\n        setLoading,\r\n        pagePath,\r\n        serializeParams,\r\n        queryParams,\r\n    };\r\n};\r\n\r\nexport default useListBase;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}