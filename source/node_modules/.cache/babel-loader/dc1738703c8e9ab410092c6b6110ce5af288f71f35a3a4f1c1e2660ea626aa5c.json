{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport useQueryParams from './useQueryParams';\nimport useFetch from './useFetch';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { Button, Col, Modal, Row } from 'antd';\nimport { SaveOutlined, StopOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport { showErrorMessage, showSucsessMessage } from '@services/notifyService';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { useNavigate } from 'react-router-dom';\nimport useNotification from './useNotification';\nimport useTranslate from './useTranslate';\nimport { getData } from '@utils/localStorage';\nimport { storageKeys } from '@constants';\nconst message = defineMessages({\n  createSuccess: {\n    \"id\": \"hooks.useSaveBase.createSuccess\",\n    \"defaultMessage\": 'Tạo {objectName} thành công'\n  },\n  updateSuccess: {\n    \"id\": \"hooks.useSaveBase.updateSuccess\",\n    \"defaultMessage\": 'Cập nhật {objectName} thành công'\n  },\n  new: {\n    \"id\": \"hooks.useSaveBase.new\",\n    \"defaultMessage\": 'New'\n  },\n  edit: {\n    \"id\": \"hooks.useSaveBase.edit\",\n    \"defaultMessage\": 'Edit'\n  },\n  update: {\n    \"id\": \"hooks.useSaveBase.update\",\n    \"defaultMessage\": 'Update'\n  },\n  create: {\n    \"id\": \"hooks.useSaveBase.create\",\n    \"defaultMessage\": 'Create'\n  },\n  cancel: {\n    \"id\": \"hooks.useSaveBase.cancel\",\n    \"defaultMessage\": 'Cancel'\n  }\n});\nconst closeFormMessage = defineMessages({\n  closeSuccess: {\n    \"id\": \"hooks.useSaveBase.closeSuccess\",\n    \"defaultMessage\": 'Close {objectName} successfully'\n  },\n  closeTitle: {\n    \"id\": \"hooks.useSaveBase.closeTitle\",\n    \"defaultMessage\": 'Bạn có muốn đóng trang này?'\n  },\n  ok: {\n    \"id\": \"hooks.useSaveBase.ok\",\n    \"defaultMessage\": 'Có'\n  },\n  cancel: {\n    \"id\": \"hooks.useSaveBase.cancel\",\n    \"defaultMessage\": 'Không'\n  }\n});\nconst useSaveBase = ({\n  apiConfig = {\n    getById: null,\n    create: null,\n    update: null\n  },\n  options = {\n    objectName: '',\n    getListUrl: ''\n  },\n  isProjectToken = false,\n  override\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const params = useParams();\n  const location = useLocation();\n  const {\n    params: queryParams,\n    setQueryParams\n  } = useQueryParams();\n  const [detail, setDetail] = useState({});\n  const [detailId, setDetailId] = useState(params.id);\n  const [isSubmitting, setSubmit] = useState(false);\n  const [isChanged, setChange] = useState(false);\n  const [isEditing, setEditing] = useState(params.id === 'create' ? false : true);\n  const {\n    execute: executeGet,\n    loading\n  } = useFetch(apiConfig.getById, {\n    immediate: false\n  });\n  const userTokenProject = getData(storageKeys.USER_PROJECT_ACCESS_TOKEN);\n  const translate = useTranslate();\n  const {\n    execute: executeCreate,\n    loading: loadingCreate\n  } = useFetch(isProjectToken ? {\n    ...apiConfig.create,\n    authorization: `Bearer ${userTokenProject}`\n  } : {\n    ...apiConfig.create\n  }, {\n    immediate: false\n  });\n  const {\n    execute: executeUpdate,\n    loading: loadingUpdate\n  } = useFetch(isProjectToken ? {\n    ...apiConfig.create,\n    authorization: `Bearer ${userTokenProject}`\n  } : {\n    ...apiConfig.update\n  }, {\n    immediate: false\n  });\n  const title = params.id === 'create' ? `${translate.formatMessage(message.new)} ${options.objectName}` : `${translate.formatMessage(message.edit)} ${options.objectName}`;\n  const intl = useIntl();\n  const notification = useNotification();\n  const [shouldShowCloseFormConfirm, setShouldShowCloseFormConfirm] = useState(false);\n  // const [ filter, setFilter ] = useState({});\n\n  const mappingData = response => {\n    if (response.result === true) return response.data;\n  };\n\n  // useEffect(() => {\n  //     if (shouldShowCloseFormConfirm) {\n  //         Modal.confirm({\n  //             title: intl.formatMessage(closeFormMessage.closeTitle, { objectName: options.objectName }),\n  //             content: '',\n  //             okText: intl.formatMessage(closeFormMessage.ok),\n  //             cancelText: intl.formatMessage(closeFormMessage.cancel),\n  //             onOk: () => {\n  //                 onBack();\n  //             },\n  //         });\n  //         console.log(location);\n  //         // setShouldShowCloseFormConfirm(false);\n  //     } else {\n  //         // Đánh dấu rằng lần thay đổi đầu tiên đã xảy ra\n  //         setShouldShowCloseFormConfirm(true);\n  //     }\n  // }, [location, shouldShowCloseFormConfirm]);\n\n  const handleGetDetailError = error => {\n    // console.log({ error });\n  };\n  const handleFetchDetail = params => {\n    executeGet({\n      ...params,\n      pathParams: {\n        id: detailId\n      },\n      onCompleted: response => {\n        setDetail(mixinFuncs.mappingData(response));\n      },\n      onError: mixinFuncs.handleGetDetailError\n    });\n  };\n  const getDetail = () => {\n    mixinFuncs.handleFetchDetail(detailId);\n  };\n  const getFormId = () => {\n    return `form-${location.pathname}`;\n  };\n  const onBack = () => {\n    const doBack = () => {\n      if (location?.state?.prevPath === options.getListUrl) {\n        navigate(-1);\n      } else {\n        navigate(options.getListUrl);\n      }\n    };\n\n    // if (isChanged) {\n    //     showWarningConfirmModal({\n    //         title: 'Quay lại',\n    //         onOk: doBack,\n    //     });\n    // } else {\n    // }\n    doBack();\n  };\n  const showWarningConfirmModal = ({\n    onOk,\n    title = null,\n    ...rest\n  } = {}) => {\n    confirm({\n      title: title,\n      centered: true,\n      width: 475,\n      okType: 'danger',\n      className: 'custom-confirm-modal warning',\n      icon: /*#__PURE__*/React.createElement(ExclamationCircleOutlined, null),\n      onOk: onOk,\n      ...rest\n    });\n  };\n  const prepareCreateData = data => {\n    return data;\n  };\n  const prepareUpdateData = data => {\n    return {\n      ...data,\n      id: detail.id\n    };\n  };\n  const onSave = values => {\n    setSubmit(true);\n    if (isEditing) {\n      executeUpdate({\n        data: mixinFuncs.prepareUpdateData(values),\n        onCompleted: mixinFuncs.onSaveCompleted,\n        onError: mixinFuncs.onSaveError\n      });\n    } else {\n      executeCreate({\n        data: mixinFuncs.prepareCreateData(values),\n        onCompleted: mixinFuncs.onSaveCompleted,\n        onError: mixinFuncs.onSaveError\n      });\n    }\n  };\n  const onSaveCompleted = responseData => {\n    setSubmit(false);\n    if (responseData?.data?.errors?.length) {\n      mixinFuncs.onSaveError();\n    } else {\n      if (isEditing) {\n        mixinFuncs.onUpdateCompleted(responseData);\n      } else {\n        mixinFuncs.onInsertCompleted(responseData);\n      }\n    }\n  };\n  const getActionName = () => {\n    return isEditing ? 'Update' : 'Create';\n  };\n  const onUpdateCompleted = responseData => {\n    if (responseData.result === true) {\n      notification({\n        message: intl.formatMessage(message.updateSuccess, {\n          objectName: options.objectName\n        })\n      });\n      onBack();\n    }\n  };\n  const onInsertCompleted = responseData => {\n    if (responseData.result === true) {\n      notification({\n        message: intl.formatMessage(message.createSuccess, {\n          objectName: options.objectName\n        })\n      });\n      onBack();\n    }\n  };\n  const handleShowErrorMessage = (err, showErrorMessage) => {\n    if (err && err.message) showErrorMessage(err.message);else showErrorMessage(`${getActionName()} failed. Please try again!`);\n  };\n  const onSaveError = err => {\n    mixinFuncs.handleShowErrorMessage(err, showErrorMessage);\n    setSubmit(false);\n  };\n  const setIsChangedFormValues = flag => {\n    if (flag !== isChanged) {\n      setChange(flag);\n    }\n  };\n  const showCloseFormConfirm = (customDisabledSubmitValue, hiddenSubmit) => {\n    const disabledSubmit = customDisabledSubmitValue !== undefined ? customDisabledSubmitValue : !isChanged;\n    if (!disabledSubmit) {\n      Modal.confirm({\n        title: intl.formatMessage(closeFormMessage.closeTitle, {\n          objectName: options.objectName\n        }),\n        content: '',\n        okText: intl.formatMessage(closeFormMessage.ok),\n        cancelText: intl.formatMessage(closeFormMessage.cancel),\n        centered: true,\n        onOk: () => {\n          onBack();\n        }\n      });\n    } else {\n      onBack();\n    }\n  };\n  const renderActions = (customDisabledSubmitValue, hiddenSubmit) => {\n    const disabledSubmit = customDisabledSubmitValue !== undefined ? customDisabledSubmitValue : !isChanged;\n    return /*#__PURE__*/React.createElement(Row, {\n      justify: \"end\",\n      gutter: 12\n    }, /*#__PURE__*/React.createElement(Col, null, /*#__PURE__*/React.createElement(Button, {\n      danger: true,\n      key: \"cancel\",\n      onClick: e => {\n        e.stopPropagation();\n        mixinFuncs.showCloseFormConfirm();\n      },\n      icon: /*#__PURE__*/React.createElement(StopOutlined, null)\n    }, translate.formatMessage(message.cancel))), !hiddenSubmit && /*#__PURE__*/React.createElement(Col, null, /*#__PURE__*/React.createElement(Button, {\n      key: \"submit\",\n      htmlType: \"submit\",\n      type: \"primary\",\n      form: mixinFuncs.getFormId(),\n      loading: isSubmitting,\n      disabled: disabledSubmit,\n      icon: /*#__PURE__*/React.createElement(SaveOutlined, null)\n    }, isEditing ? intl.formatMessage(message.update) : intl.formatMessage(message.create))));\n  };\n  const overrideHandler = () => {\n    const centralizedHandler = {\n      getDetail,\n      handleFetchDetail,\n      mappingData,\n      handleGetDetailError,\n      getFormId,\n      renderActions,\n      prepareCreateData,\n      prepareUpdateData,\n      onSaveCompleted,\n      onUpdateCompleted,\n      onInsertCompleted,\n      onSaveError,\n      onSave,\n      executeGet,\n      executeCreate,\n      executeUpdate,\n      setDetail,\n      setEditing,\n      handleShowErrorMessage,\n      getActionName,\n      setSubmit,\n      showCloseFormConfirm\n    };\n    override?.(centralizedHandler);\n    return centralizedHandler;\n  };\n  const mixinFuncs = overrideHandler();\n  useEffect(() => {\n    if (params.id) {\n      if (params.id === 'create') setEditing(false);else mixinFuncs.getDetail();\n    }\n  }, []);\n  return {\n    detail,\n    mixinFuncs,\n    loading,\n    onSave,\n    setIsChangedFormValues,\n    isEditing,\n    title,\n    setDetailId,\n    setSubmit,\n    loadingUpdate,\n    loadingCreate\n  };\n};\n_s(useSaveBase, \"fYLpE1YYAIvXMc0p9u9fX+MGnVE=\", false, function () {\n  return [useNavigate, useParams, useLocation, useQueryParams, useFetch, useTranslate, useFetch, useFetch, useIntl, useNotification];\n});\nexport default useSaveBase;","map":{"version":3,"names":["React","useEffect","useMemo","useState","useQueryParams","useFetch","useParams","useLocation","Button","Col","Modal","Row","SaveOutlined","StopOutlined","ExclamationCircleOutlined","showErrorMessage","showSucsessMessage","defineMessages","useIntl","useNavigate","useNotification","useTranslate","getData","storageKeys","message","createSuccess","updateSuccess","new","edit","update","create","cancel","closeFormMessage","closeSuccess","closeTitle","ok","useSaveBase","apiConfig","getById","options","objectName","getListUrl","isProjectToken","override","_s","navigate","params","location","queryParams","setQueryParams","detail","setDetail","detailId","setDetailId","id","isSubmitting","setSubmit","isChanged","setChange","isEditing","setEditing","execute","executeGet","loading","immediate","userTokenProject","USER_PROJECT_ACCESS_TOKEN","translate","executeCreate","loadingCreate","authorization","executeUpdate","loadingUpdate","title","formatMessage","intl","notification","shouldShowCloseFormConfirm","setShouldShowCloseFormConfirm","mappingData","response","result","data","handleGetDetailError","error","handleFetchDetail","pathParams","onCompleted","mixinFuncs","onError","getDetail","getFormId","pathname","onBack","doBack","state","prevPath","showWarningConfirmModal","onOk","rest","confirm","centered","width","okType","className","icon","createElement","prepareCreateData","prepareUpdateData","onSave","values","onSaveCompleted","onSaveError","responseData","errors","length","onUpdateCompleted","onInsertCompleted","getActionName","handleShowErrorMessage","err","setIsChangedFormValues","flag","showCloseFormConfirm","customDisabledSubmitValue","hiddenSubmit","disabledSubmit","undefined","content","okText","cancelText","renderActions","justify","gutter","danger","key","onClick","e","stopPropagation","htmlType","type","form","disabled","overrideHandler","centralizedHandler"],"sources":["C:/Users/PC/Downloads/elms-cms/elms-cms/source/src/hooks/useSaveBase.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\nimport useQueryParams from './useQueryParams';\r\nimport useFetch from './useFetch';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport { Button, Col, Modal, Row } from 'antd';\r\nimport { SaveOutlined, StopOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { showErrorMessage, showSucsessMessage } from '@services/notifyService';\r\nimport { defineMessages, useIntl } from 'react-intl';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport useNotification from './useNotification';\r\nimport useTranslate from './useTranslate';\r\nimport { getData } from '@utils/localStorage';\r\nimport { storageKeys } from '@constants';\r\n\r\nconst message = defineMessages({\r\n    createSuccess: 'Tạo {objectName} thành công',\r\n    updateSuccess: 'Cập nhật {objectName} thành công',\r\n    new: 'New',\r\n    edit: 'Edit',\r\n    update: 'Update',\r\n    create: 'Create',\r\n    cancel: 'Cancel',\r\n});\r\n\r\nconst closeFormMessage = defineMessages({\r\n    closeSuccess: 'Close {objectName} successfully',\r\n    closeTitle: 'Bạn có muốn đóng trang này?',\r\n    ok: 'Có',\r\n    cancel: 'Không',\r\n});\r\n\r\nconst useSaveBase = ({\r\n    apiConfig = {\r\n        getById: null,\r\n        create: null,\r\n        update: null,\r\n    },\r\n    options = {\r\n        objectName: '',\r\n        getListUrl: '',\r\n    },\r\n    isProjectToken =false,\r\n    override,\r\n}) => {\r\n    const navigate = useNavigate();\r\n    const params = useParams();\r\n    const location = useLocation();\r\n    const { params: queryParams, setQueryParams } = useQueryParams();\r\n    const [detail, setDetail] = useState({});\r\n    const [detailId, setDetailId] = useState(params.id);\r\n    const [isSubmitting, setSubmit] = useState(false);\r\n    const [isChanged, setChange] = useState(false);\r\n    const [isEditing, setEditing] = useState(params.id === 'create' ? false : true);\r\n    const { execute: executeGet, loading } = useFetch(apiConfig.getById, {\r\n        immediate: false,\r\n    });\r\n    const userTokenProject = getData(storageKeys.USER_PROJECT_ACCESS_TOKEN);\r\n    const translate = useTranslate();\r\n    const { execute: executeCreate, loading: loadingCreate } = useFetch( isProjectToken ? { ...apiConfig.create,authorization: `Bearer ${userTokenProject}` } : { ...apiConfig.create }, { immediate: false });\r\n    const { execute: executeUpdate, loading: loadingUpdate } = useFetch(isProjectToken ? { ...apiConfig.create,authorization: `Bearer ${userTokenProject}` } : { ...apiConfig.update }, { immediate: false });\r\n    const title =\r\n        params.id === 'create'\r\n            ? `${translate.formatMessage(message.new)} ${options.objectName}`\r\n            : `${translate.formatMessage(message.edit)} ${options.objectName}`;\r\n    const intl = useIntl();\r\n    const notification = useNotification();\r\n    const [shouldShowCloseFormConfirm, setShouldShowCloseFormConfirm] = useState(false);\r\n    // const [ filter, setFilter ] = useState({});\r\n\r\n    const mappingData = (response) => {\r\n        if (response.result === true) return response.data;\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     if (shouldShowCloseFormConfirm) {\r\n    //         Modal.confirm({\r\n    //             title: intl.formatMessage(closeFormMessage.closeTitle, { objectName: options.objectName }),\r\n    //             content: '',\r\n    //             okText: intl.formatMessage(closeFormMessage.ok),\r\n    //             cancelText: intl.formatMessage(closeFormMessage.cancel),\r\n    //             onOk: () => {\r\n    //                 onBack();\r\n    //             },\r\n    //         });\r\n    //         console.log(location);\r\n    //         // setShouldShowCloseFormConfirm(false);\r\n    //     } else {\r\n    //         // Đánh dấu rằng lần thay đổi đầu tiên đã xảy ra\r\n    //         setShouldShowCloseFormConfirm(true);\r\n    //     }\r\n    // }, [location, shouldShowCloseFormConfirm]);\r\n\r\n    const handleGetDetailError = (error) => {\r\n        // console.log({ error });\r\n    };\r\n\r\n    const handleFetchDetail = (params) => {\r\n        executeGet({\r\n            ...params,\r\n            pathParams: { id: detailId },\r\n            onCompleted: (response) => {\r\n                setDetail(mixinFuncs.mappingData(response));\r\n            },\r\n            onError: mixinFuncs.handleGetDetailError,\r\n        });\r\n    };\r\n\r\n    const getDetail = () => {\r\n        mixinFuncs.handleFetchDetail(detailId);\r\n    };\r\n\r\n    const getFormId = () => {\r\n        return `form-${location.pathname}`;\r\n    };\r\n\r\n    const onBack = () => {\r\n        const doBack = () => {\r\n            if (location?.state?.prevPath === options.getListUrl) {\r\n                navigate(-1);\r\n            } else {\r\n                navigate(options.getListUrl);\r\n            }\r\n        };\r\n\r\n        // if (isChanged) {\r\n        //     showWarningConfirmModal({\r\n        //         title: 'Quay lại',\r\n        //         onOk: doBack,\r\n        //     });\r\n        // } else {\r\n        // }\r\n        doBack();\r\n    };\r\n\r\n    const showWarningConfirmModal = ({ onOk, title = null, ...rest } = {}) => {\r\n        confirm({\r\n            title: title,\r\n            centered: true,\r\n            width: 475,\r\n            okType: 'danger',\r\n            className: 'custom-confirm-modal warning',\r\n            icon: <ExclamationCircleOutlined />,\r\n            onOk: onOk,\r\n            ...rest,\r\n        });\r\n    };\r\n\r\n    const prepareCreateData = (data) => {\r\n        return data;\r\n    };\r\n\r\n    const prepareUpdateData = (data) => {\r\n        return {\r\n            ...data,\r\n            id: detail.id,\r\n        };\r\n    };\r\n\r\n    const onSave = (values) => {\r\n        setSubmit(true);\r\n        if (isEditing) {\r\n            executeUpdate({\r\n                data: mixinFuncs.prepareUpdateData(values),\r\n                onCompleted: mixinFuncs.onSaveCompleted,\r\n                onError: mixinFuncs.onSaveError,\r\n            });\r\n        } else {\r\n            executeCreate({\r\n                data: mixinFuncs.prepareCreateData(values),\r\n                onCompleted: mixinFuncs.onSaveCompleted,\r\n                onError: mixinFuncs.onSaveError,\r\n            });\r\n        }\r\n    };\r\n\r\n    const onSaveCompleted = (responseData) => {\r\n        setSubmit(false);\r\n        if (responseData?.data?.errors?.length) {\r\n            mixinFuncs.onSaveError();\r\n        } else {\r\n            if (isEditing) {\r\n                mixinFuncs.onUpdateCompleted(responseData);\r\n            } else {\r\n                mixinFuncs.onInsertCompleted(responseData);\r\n            }\r\n        }\r\n    };\r\n\r\n    const getActionName = () => {\r\n        return isEditing ? 'Update' : 'Create';\r\n    };\r\n\r\n    const onUpdateCompleted = (responseData) => {\r\n        if (responseData.result === true) {\r\n            notification({\r\n                message: intl.formatMessage(message.updateSuccess, {\r\n                    objectName: options.objectName,\r\n                }),\r\n            });\r\n            onBack();\r\n        }\r\n    };\r\n\r\n    const onInsertCompleted = (responseData) => {\r\n        if (responseData.result === true) {\r\n            notification({\r\n                message: intl.formatMessage(message.createSuccess, {\r\n                    objectName: options.objectName,\r\n                }),\r\n            });\r\n            onBack();\r\n        }\r\n    };\r\n\r\n    const handleShowErrorMessage = (err, showErrorMessage) => {\r\n        if (err && err.message) showErrorMessage(err.message);\r\n        else showErrorMessage(`${getActionName()} failed. Please try again!`);\r\n    };\r\n\r\n    const onSaveError = (err) => {\r\n        mixinFuncs.handleShowErrorMessage(err, showErrorMessage);\r\n        setSubmit(false);\r\n    };\r\n\r\n    const setIsChangedFormValues = (flag) => {\r\n        if (flag !== isChanged) {\r\n            setChange(flag);\r\n        }\r\n    };\r\n\r\n    const showCloseFormConfirm = (customDisabledSubmitValue, hiddenSubmit) => {\r\n        const disabledSubmit = customDisabledSubmitValue !== undefined ? customDisabledSubmitValue : !isChanged;\r\n\r\n        if (!disabledSubmit) {\r\n            Modal.confirm({\r\n                title: intl.formatMessage(closeFormMessage.closeTitle, { objectName: options.objectName }),\r\n                content: '',\r\n                okText: intl.formatMessage(closeFormMessage.ok),\r\n                cancelText: intl.formatMessage(closeFormMessage.cancel),\r\n                centered: true,\r\n                onOk: () => {\r\n                    onBack();\r\n                },\r\n            });\r\n        } else {\r\n            onBack();\r\n        }\r\n    };\r\n\r\n    const renderActions = (customDisabledSubmitValue, hiddenSubmit) => {\r\n        const disabledSubmit = customDisabledSubmitValue !== undefined ? customDisabledSubmitValue : !isChanged;\r\n        return (\r\n            <Row justify=\"end\" gutter={12}>\r\n                <Col>\r\n                    <Button\r\n                        danger\r\n                        key=\"cancel\"\r\n                        onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            mixinFuncs.showCloseFormConfirm();\r\n                        }}\r\n                        icon={<StopOutlined />}\r\n                    >\r\n                        {translate.formatMessage(message.cancel)}\r\n                    </Button>\r\n                </Col>\r\n                {!hiddenSubmit && (\r\n                    <Col>\r\n                        <Button\r\n                            key=\"submit\"\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            form={mixinFuncs.getFormId()}\r\n                            loading={isSubmitting}\r\n                            disabled={disabledSubmit}\r\n                            icon={<SaveOutlined />}\r\n                        >\r\n                            {isEditing ? intl.formatMessage(message.update) : intl.formatMessage(message.create)}\r\n                        </Button>\r\n                    </Col>\r\n                )}\r\n            </Row>\r\n        );\r\n    };\r\n    const overrideHandler = () => {\r\n        const centralizedHandler = {\r\n            getDetail,\r\n            handleFetchDetail,\r\n            mappingData,\r\n            handleGetDetailError,\r\n            getFormId,\r\n            renderActions,\r\n            prepareCreateData,\r\n            prepareUpdateData,\r\n            onSaveCompleted,\r\n            onUpdateCompleted,\r\n            onInsertCompleted,\r\n            onSaveError,\r\n            onSave,\r\n            executeGet,\r\n            executeCreate,\r\n            executeUpdate,\r\n            setDetail,\r\n            setEditing,\r\n            handleShowErrorMessage,\r\n            getActionName,\r\n            setSubmit,\r\n            showCloseFormConfirm,\r\n        };\r\n\r\n        override?.(centralizedHandler);\r\n\r\n        return centralizedHandler;\r\n    };\r\n\r\n    const mixinFuncs = overrideHandler();\r\n\r\n    useEffect(() => {\r\n        if (params.id) {\r\n            if (params.id === 'create') setEditing(false);\r\n            else mixinFuncs.getDetail();\r\n        }\r\n    }, []);\r\n\r\n    return {\r\n        detail,\r\n        mixinFuncs,\r\n        loading,\r\n        onSave,\r\n        setIsChangedFormValues,\r\n        isEditing,\r\n        title,\r\n        setDetailId,\r\n        setSubmit,\r\n        loadingUpdate,\r\n        loadingCreate,\r\n    };\r\n};\r\n\r\nexport default useSaveBase;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}