{"ast":null,"code":"var _s = $RefreshSig$();\nimport { DownOutlined, LoginOutlined, MenuFoldOutlined, MenuUnfoldOutlined, UserOutlined } from '@ant-design/icons';\nimport { Avatar, Layout, Menu, Space } from 'antd';\nimport React from 'react';\nconst {\n  Header\n} = Layout;\nimport { NotificationForm } from '@components/common/form/NotificationForm';\nimport { AppConstants } from '@constants';\nimport apiConfig from '@constants/apiConfig';\nimport useAuth from '@hooks/useAuth';\nimport useFetch from '@hooks/useFetch';\nimport useTranslate from '@hooks/useTranslate';\nimport { removeCacheToken } from '@services/userService';\nimport { accountActions } from '@store/actions';\nimport { defineMessages } from 'react-intl';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './AppHeader.module.scss';\nconst messages = defineMessages({\n  profile: {\n    \"id\": \"modules.main.AppHeader.profile\",\n    \"defaultMessage\": 'Profile'\n  },\n  logout: {\n    \"id\": \"modules.main.AppHeader.logout\",\n    \"defaultMessage\": 'Logout'\n  }\n});\nconst AppHeader = ({\n  collapsed,\n  onCollapse\n}) => {\n  _s();\n  const {\n    profile\n  } = useAuth();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const translate = useTranslate();\n  const {\n    execute: executeLogout\n  } = useFetch(apiConfig.account.logout);\n  const onLogout = () => {\n    removeCacheToken();\n    dispatch(accountActions.logout());\n  };\n  const {\n    data: dataMyNotification,\n    execute: executeGetDataMyNotification,\n    loading: loadingDataMyNotification\n  } = useFetch(apiConfig.notification.myNotification, {\n    immediate: true,\n    mappingData: ({\n      data\n    }) => {\n      const pageTotal = data?.totalPages;\n      const unReadTotal = data?.totalUnread;\n      const listNotification = data?.content?.map(item => {\n        const msg = JSON.parse(item?.msg);\n        return {\n          id: item?.id,\n          kind: item?.kind,\n          createdDate: item?.createdDate,\n          state: item?.state,\n          projectId: msg?.projectId,\n          taskName: msg?.taskName,\n          projectName: msg?.projectName,\n          courseId: msg?.courseId,\n          lectureName: msg?.lectureName,\n          courseName: msg?.courseName\n        };\n      });\n      return {\n        pageTotal,\n        unReadTotal,\n        listNotification\n      };\n    }\n  });\n  const {\n    execute: executeUpdateState\n  } = useFetch(apiConfig.notification.changeState, {\n    immediate: false\n  });\n  return /*#__PURE__*/React.createElement(Header, {\n    className: styles.appHeader,\n    style: {\n      padding: 0,\n      background: 'white'\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.iconCollapse,\n    onClick: onCollapse\n  }, collapsed ? /*#__PURE__*/React.createElement(MenuUnfoldOutlined, null) : /*#__PURE__*/React.createElement(MenuFoldOutlined, null)), /*#__PURE__*/React.createElement(Menu, {\n    mode: \"horizontal\",\n    className: styles.rightMenu,\n    selectedKeys: [],\n    items: [{\n      key: 'menu',\n      label: /*#__PURE__*/React.createElement(Space, null, /*#__PURE__*/React.createElement(Avatar, {\n        icon: /*#__PURE__*/React.createElement(UserOutlined, null),\n        src: `${AppConstants.contentRootUrl}${profile.logoPath || profile?.account?.avatar || profile.accountDto?.avatar}`\n      }), profile?.careerName || profile?.name || profile?.account?.fullName || profile?.accountDto?.fullName || profile?.companyName, /*#__PURE__*/React.createElement(DownOutlined, null)),\n      children: [{\n        label: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '5px',\n            alignItems: 'center'\n          }\n        }, /*#__PURE__*/React.createElement(UserOutlined, null), /*#__PURE__*/React.createElement(\"span\", null, translate.formatMessage(messages.profile))),\n        key: 'profile',\n        onClick: () => navigate('/profile')\n      }, {\n        label: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '5px',\n            alignItems: 'center'\n          }\n        }, /*#__PURE__*/React.createElement(LoginOutlined, null), /*#__PURE__*/React.createElement(\"span\", null, translate.formatMessage(messages.logout))),\n        key: 'logout',\n        onClick: onLogout\n      }]\n    }, {\n      key: 'notification',\n      label: /*#__PURE__*/React.createElement(NotificationForm, {\n        data: dataMyNotification?.listNotification,\n        executeGetData: executeGetDataMyNotification,\n        executeUpdateState: executeUpdateState,\n        loading: loadingDataMyNotification,\n        unReadTotal: dataMyNotification?.unReadTotal,\n        pageTotal: dataMyNotification?.pageTotal\n      })\n    }]\n  }));\n};\n_s(AppHeader, \"oh8/bT9OCaJadWXbHi7+tictih0=\", false, function () {\n  return [useAuth, useDispatch, useNavigate, useTranslate, useFetch, useFetch, useFetch];\n});\n_c = AppHeader;\nexport default AppHeader;\nvar _c;\n$RefreshReg$(_c, \"AppHeader\");","map":{"version":3,"names":["DownOutlined","LoginOutlined","MenuFoldOutlined","MenuUnfoldOutlined","UserOutlined","Avatar","Layout","Menu","Space","React","Header","NotificationForm","AppConstants","apiConfig","useAuth","useFetch","useTranslate","removeCacheToken","accountActions","defineMessages","useDispatch","useNavigate","styles","messages","profile","logout","AppHeader","collapsed","onCollapse","_s","dispatch","navigate","translate","execute","executeLogout","account","onLogout","data","dataMyNotification","executeGetDataMyNotification","loading","loadingDataMyNotification","notification","myNotification","immediate","mappingData","pageTotal","totalPages","unReadTotal","totalUnread","listNotification","content","map","item","msg","JSON","parse","id","kind","createdDate","state","projectId","taskName","projectName","courseId","lectureName","courseName","executeUpdateState","changeState","createElement","className","appHeader","style","padding","background","iconCollapse","onClick","mode","rightMenu","selectedKeys","items","key","label","icon","src","contentRootUrl","logoPath","avatar","accountDto","careerName","name","fullName","companyName","children","display","gap","alignItems","formatMessage","executeGetData","_c","$RefreshReg$"],"sources":["C:/Users/PC/Downloads/elms-cms/elms-cms/source/src/modules/main/AppHeader.js"],"sourcesContent":["import { DownOutlined, LoginOutlined, MenuFoldOutlined, MenuUnfoldOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { Avatar, Layout, Menu, Space } from 'antd';\r\nimport React from 'react';\r\nconst { Header } = Layout;\r\n\r\nimport { NotificationForm } from '@components/common/form/NotificationForm';\r\nimport { AppConstants } from '@constants';\r\nimport apiConfig from '@constants/apiConfig';\r\nimport useAuth from '@hooks/useAuth';\r\nimport useFetch from '@hooks/useFetch';\r\nimport useTranslate from '@hooks/useTranslate';\r\nimport { removeCacheToken } from '@services/userService';\r\nimport { accountActions } from '@store/actions';\r\nimport { defineMessages } from 'react-intl';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from './AppHeader.module.scss';\r\n\r\nconst messages = defineMessages({\r\n    profile: 'Profile',\r\n    logout: 'Logout',\r\n});\r\n\r\nconst AppHeader = ({ collapsed, onCollapse }) => {\r\n    const { profile } = useAuth();\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const translate = useTranslate();\r\n    const { execute: executeLogout } = useFetch(apiConfig.account.logout);\r\n\r\n    const onLogout = () => {\r\n        removeCacheToken();\r\n        dispatch(accountActions.logout());\r\n    };\r\n\r\n    const {\r\n        data: dataMyNotification,\r\n        execute: executeGetDataMyNotification,\r\n        loading: loadingDataMyNotification,\r\n    } = useFetch(apiConfig.notification.myNotification, {\r\n        immediate: true,\r\n        mappingData: ({ data }) => {\r\n            const pageTotal = data?.totalPages;\r\n            const unReadTotal = data?.totalUnread;\r\n            const listNotification = data?.content?.map((item) => {\r\n                const msg = JSON.parse(item?.msg);\r\n\r\n                return {\r\n                    id: item?.id,\r\n                    kind: item?.kind,\r\n                    createdDate: item?.createdDate,\r\n                    state: item?.state,\r\n                    projectId: msg?.projectId,\r\n                    taskName: msg?.taskName,\r\n                    projectName: msg?.projectName,\r\n                    courseId: msg?.courseId,\r\n                    lectureName: msg?.lectureName,\r\n                    courseName: msg?.courseName,\r\n                };\r\n            });\r\n            return {\r\n                pageTotal,\r\n                unReadTotal,\r\n                listNotification,\r\n            };\r\n        },\r\n    });\r\n    const { execute: executeUpdateState } = useFetch(apiConfig.notification.changeState, {\r\n        immediate: false,\r\n    });\r\n\r\n    return (\r\n        <Header className={styles.appHeader} style={{ padding: 0, background: 'white' }}>\r\n            <span className={styles.iconCollapse} onClick={onCollapse}>\r\n                {collapsed ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\r\n            </span>\r\n            <Menu\r\n                mode=\"horizontal\"\r\n                className={styles.rightMenu}\r\n                selectedKeys={[]}\r\n                items={[\r\n                    {\r\n                        key: 'menu',\r\n                        label: (\r\n                            <Space>\r\n                                <Avatar\r\n                                    icon={<UserOutlined />}\r\n                                    src={`${AppConstants.contentRootUrl}${\r\n                                        profile.logoPath || profile?.account?.avatar || profile.accountDto?.avatar\r\n                                    }`}\r\n                                />\r\n                                {profile?.careerName ||\r\n                                    profile?.name ||\r\n                                    profile?.account?.fullName ||\r\n                                    profile?.accountDto?.fullName ||\r\n                                    profile?.companyName}\r\n                                <DownOutlined />\r\n                            </Space>\r\n                        ),\r\n                        children: [\r\n                            {\r\n                                label: (\r\n                                    <div style={{ display: 'flex', gap: '5px', alignItems: 'center' }}>\r\n                                        <UserOutlined />\r\n                                        <span>{translate.formatMessage(messages.profile)}</span>\r\n                                    </div>\r\n                                ),\r\n                                key: 'profile',\r\n                                onClick: () => navigate('/profile'),\r\n                            },\r\n                            {\r\n                                label: (\r\n                                    <div style={{ display: 'flex', gap: '5px', alignItems: 'center' }}>\r\n                                        <LoginOutlined />\r\n                                        <span>{translate.formatMessage(messages.logout)}</span>\r\n                                    </div>\r\n                                ),\r\n                                key: 'logout',\r\n                                onClick: onLogout,\r\n                            },\r\n                        ],\r\n                    },\r\n                    {\r\n                        key: 'notification',\r\n                        label: (\r\n                            <NotificationForm\r\n                                data={dataMyNotification?.listNotification}\r\n                                executeGetData={executeGetDataMyNotification}\r\n                                executeUpdateState={executeUpdateState}\r\n                                loading={loadingDataMyNotification}\r\n                                unReadTotal={dataMyNotification?.unReadTotal}\r\n                                pageTotal={dataMyNotification?.pageTotal}\r\n                            />\r\n                        ),\r\n                    },\r\n                ]}\r\n            />\r\n        </Header>\r\n    );\r\n};\r\n\r\nexport default AppHeader;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}