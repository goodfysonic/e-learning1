{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { CurrentcyPositions } from '@constants';\nimport apiConfig from '@constants/apiConfig';\nimport useFetch from '@hooks/useFetch';\nimport { selectCurrency } from '@selectors/currency';\nimport { setCurrency } from '@store/actions/currency';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nfunction Currency({\n  asChild = false,\n  value,\n  isPoint,\n  ...props\n}) {\n  _s();\n  const {\n    format\n  } = useCurrency(isPoint);\n  return asChild ? format(value) : /*#__PURE__*/React.createElement(\"div\", props, format(value));\n}\n_s(Currency, \"KjB2rYW1OocqV+tQtcKa3nUXr5I=\", false, function () {\n  return [useCurrency];\n});\n_c = Currency;\nexport function useCurrency(isPoint = false) {\n  _s2();\n  const currency = useSelector(selectCurrency);\n  const dispatch = useDispatch();\n  const format = useCallback((value, symbol, symbolPosition, decimal, separator, decimalRound, currencyRatio) => {\n    const format = isPoint ? formatPoint : formatCurrency;\n    return format(value, decimal != undefined ? decimal : currency.decimal, currency.separator, symbol != undefined ? symbol : currency.symbol, symbolPosition = currency.position, decimalRound != undefined ? decimalRound : currency.decimalRound, currency.currencyRatio);\n  }, [currency]);\n\n  // const { execute } = useFetch(apiConfig.restaurant.getById);\n  // const fetchCurrency = useCallback(\n  //     ({ pathParams }) => {\n  //         execute({\n  //             // params,\n  //             pathParams,\n  //             onCompleted: ({ data }) => {\n  //                 const content = JSON.parse(data?.settings || {});\n  //                 if (!content) return {};\n  //                 let symbol = content.currentcy,\n  //                     decimal = content.decimal_separator,\n  //                     separator = content.group_separator,\n  //                     position = content.currentcy_position,\n  //                     currencyRatio = content.currency_ratio,\n  //                     dateFormat = content.date_time_format,\n  //                     decimalRound = content.decimal_round;\n\n  //                 dispatch(\n  //                     setCurrency({ symbol, decimal, separator, position, dateFormat, decimalRound, currencyRatio }),\n  //                 );\n  //             },\n  //         });\n  //     },\n  //     [currency],\n  // );\n\n  return {\n    // fetchCurrency,\n    format,\n    symbol: currency.symbol,\n    decimal: currency.decimal,\n    separator: currency.separator\n  };\n}\n_s2(useCurrency, \"5YATqR81WIpbGr4MAmvVoaX6KXw=\", false, function () {\n  return [useSelector, useDispatch];\n});\nexport function formatCurrency(value, decimal = '.', separator = ',', symbol = '', symbolPosition, decimalRound = 2, currencyRatio = 1) {\n  if (!value) return '';\n  const [integerPart, decimalPart] = (value / currencyRatio).toFixed(decimalRound).toString().split('.');\n  const formattedIntegerPart = integerPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, separator);\n  const formattedNumber = decimalPart ? `${formattedIntegerPart}${decimal}${decimalPart}` : formattedIntegerPart;\n  if (!symbol) return formattedNumber;\n  return symbolPosition === CurrentcyPositions.BACK ? `${formattedNumber} ${symbol}` : `${symbol} ${formattedNumber}`;\n}\nexport function formatPoint(value, decimal = '.', separator = ',', symbol = '', symbolPosition) {\n  if (!value) return '';\n  const [integerPart, decimalPart] = value.toString().split('.');\n  const formattedIntegerPart = integerPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, separator);\n  const formattedNumber = decimalPart ? `${formattedIntegerPart}${decimal}${decimalPart}` : formattedIntegerPart;\n  return formattedNumber;\n}\nexport default Currency;\nvar _c;\n$RefreshReg$(_c, \"Currency\");","map":{"version":3,"names":["CurrentcyPositions","apiConfig","useFetch","selectCurrency","setCurrency","React","useCallback","useEffect","useState","useDispatch","useSelector","Currency","asChild","value","isPoint","props","_s","format","useCurrency","createElement","_c","_s2","currency","dispatch","symbol","symbolPosition","decimal","separator","decimalRound","currencyRatio","formatPoint","formatCurrency","undefined","position","integerPart","decimalPart","toFixed","toString","split","formattedIntegerPart","replace","formattedNumber","BACK","$RefreshReg$"],"sources":["C:/Users/PC/Downloads/elms-cms/elms-cms/source/src/components/common/elements/Currency.js"],"sourcesContent":["import { CurrentcyPositions } from '@constants';\r\nimport apiConfig from '@constants/apiConfig';\r\nimport useFetch from '@hooks/useFetch';\r\nimport { selectCurrency } from '@selectors/currency';\r\nimport { setCurrency } from '@store/actions/currency';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nfunction Currency({ asChild = false, value, isPoint, ...props }) {\r\n    const { format } = useCurrency(isPoint);\r\n\r\n    return asChild ? format(value) : <div {...props}>{format(value)}</div>;\r\n}\r\n\r\nexport function useCurrency(isPoint = false) {\r\n    const currency = useSelector(selectCurrency);\r\n    const dispatch = useDispatch();\r\n    const format = useCallback(\r\n        (value, symbol, symbolPosition, decimal, separator, decimalRound, currencyRatio) => {\r\n            const format = isPoint ? formatPoint : formatCurrency;\r\n            return format(\r\n                value,\r\n                decimal != undefined ? decimal : currency.decimal,\r\n                currency.separator,\r\n                symbol != undefined ? symbol : currency.symbol,\r\n                (symbolPosition = currency.position),\r\n                decimalRound != undefined ? decimalRound : currency.decimalRound,\r\n                currency.currencyRatio,\r\n            );\r\n        },\r\n        [currency],\r\n    );\r\n\r\n    // const { execute } = useFetch(apiConfig.restaurant.getById);\r\n    // const fetchCurrency = useCallback(\r\n    //     ({ pathParams }) => {\r\n    //         execute({\r\n    //             // params,\r\n    //             pathParams,\r\n    //             onCompleted: ({ data }) => {\r\n    //                 const content = JSON.parse(data?.settings || {});\r\n    //                 if (!content) return {};\r\n    //                 let symbol = content.currentcy,\r\n    //                     decimal = content.decimal_separator,\r\n    //                     separator = content.group_separator,\r\n    //                     position = content.currentcy_position,\r\n    //                     currencyRatio = content.currency_ratio,\r\n    //                     dateFormat = content.date_time_format,\r\n    //                     decimalRound = content.decimal_round;\r\n\r\n    //                 dispatch(\r\n    //                     setCurrency({ symbol, decimal, separator, position, dateFormat, decimalRound, currencyRatio }),\r\n    //                 );\r\n    //             },\r\n    //         });\r\n    //     },\r\n    //     [currency],\r\n    // );\r\n\r\n    return {\r\n        // fetchCurrency,\r\n        format,\r\n        symbol: currency.symbol,\r\n        decimal: currency.decimal,\r\n        separator: currency.separator,\r\n    };\r\n}\r\n\r\nexport function formatCurrency(\r\n    value,\r\n    decimal = '.',\r\n    separator = ',',\r\n    symbol = '',\r\n    symbolPosition,\r\n    decimalRound = 2,\r\n    currencyRatio = 1,\r\n) {\r\n    if (!value) return '';\r\n    const [integerPart, decimalPart] = (value / currencyRatio).toFixed(decimalRound).toString().split('.');\r\n    const formattedIntegerPart = integerPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, separator);\r\n\r\n    const formattedNumber = decimalPart ? `${formattedIntegerPart}${decimal}${decimalPart}` : formattedIntegerPart;\r\n\r\n    if (!symbol) return formattedNumber;\r\n\r\n    return symbolPosition === CurrentcyPositions.BACK ? `${formattedNumber} ${symbol}` : `${symbol} ${formattedNumber}`;\r\n}\r\n\r\nexport function formatPoint(value, decimal = '.', separator = ',', symbol = '', symbolPosition) {\r\n    if (!value) return '';\r\n\r\n    const [integerPart, decimalPart] = value.toString().split('.');\r\n\r\n    const formattedIntegerPart = integerPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, separator);\r\n\r\n    const formattedNumber = decimalPart ? `${formattedIntegerPart}${decimal}${decimalPart}` : formattedIntegerPart;\r\n\r\n    return formattedNumber;\r\n}\r\n\r\nexport default Currency;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}