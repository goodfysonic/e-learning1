{"ast":null,"code":"import { DATE_FORMAT_DISPLAY, DATE_FORMAT_VALUE, DEFAULT_FORMAT } from '@constants';\nimport { formatDateString } from '@utils';\nimport dayjs from 'dayjs';\nimport weekOfYear from 'dayjs/plugin/weekOfYear';\nimport moment from 'moment';\ndayjs.extend(weekOfYear);\nexport const currentWeek = dayjs().week();\nexport const lastWeek = dayjs().week(currentWeek - 1);\nexport const getWeek = date => {\n  return dayjs(date).week();\n};\nexport const getWeekStart = date => {\n  return dayjs(date).startOf('week');\n};\nexport const getLastWeek = date => {\n  return dayjs(date).week(getWeek(date) - 1);\n};\nexport const getLastWeekStart = date => {\n  return dayjs(date).startOf('week').subtract(1, 'week');\n};\nexport const getLastWeekEnd = date => {\n  return dayjs(date).endOf('week').subtract(1, 'week');\n};\nexport const convertDateTimeToString = (datetime, stringFormat = DATE_FORMAT_VALUE) => {\n  try {\n    if (datetime) {\n      return datetime.format(stringFormat);\n    }\n    return null;\n  } catch (err) {\n    return null;\n  }\n};\nexport const convertStringToDateTime = (strFormDateTime, fromFormat = DATE_FORMAT_VALUE, toFormat = DATE_FORMAT_DISPLAY) => {\n  try {\n    if (strFormDateTime) {\n      const datetime = moment(strFormDateTime, fromFormat);\n      return moment(datetime.format(toFormat), toFormat);\n    }\n    return null;\n  } catch (err) {\n    return null;\n  }\n};\nexport const validateDate = (_, value) => {\n  const date = dayjs(formatDateString(new Date(), DEFAULT_FORMAT), DATE_FORMAT_VALUE);\n  if (date && value && value.isAfter(date)) {\n    return Promise.reject('Ngày sinh phải nhỏ hơn ngày hiện tại');\n  }\n  return Promise.resolve();\n};","map":{"version":3,"names":["DATE_FORMAT_DISPLAY","DATE_FORMAT_VALUE","DEFAULT_FORMAT","formatDateString","dayjs","weekOfYear","moment","extend","currentWeek","week","lastWeek","getWeek","date","getWeekStart","startOf","getLastWeek","getLastWeekStart","subtract","getLastWeekEnd","endOf","convertDateTimeToString","datetime","stringFormat","format","err","convertStringToDateTime","strFormDateTime","fromFormat","toFormat","validateDate","_","value","Date","isAfter","Promise","reject","resolve"],"sources":["C:/Users/PC/Downloads/elms-cms/elms-cms/source/src/utils/dayHelper.js"],"sourcesContent":["import { DATE_FORMAT_DISPLAY, DATE_FORMAT_VALUE, DEFAULT_FORMAT } from '@constants';\r\nimport { formatDateString } from '@utils';\r\nimport dayjs from 'dayjs';\r\nimport weekOfYear from 'dayjs/plugin/weekOfYear';\r\nimport moment from 'moment';\r\ndayjs.extend(weekOfYear);\r\n\r\nexport const currentWeek = dayjs().week();\r\nexport const lastWeek = dayjs().week(currentWeek - 1);\r\n\r\nexport const getWeek = (date) => {\r\n    return dayjs(date).week();\r\n};\r\n\r\nexport const getWeekStart = (date) => {\r\n    return dayjs(date).startOf('week');\r\n};\r\n\r\nexport const getLastWeek = (date) => {\r\n    return dayjs(date).week(getWeek(date) - 1);\r\n};\r\n\r\nexport const getLastWeekStart = (date) => {\r\n    return dayjs(date).startOf('week').subtract(1, 'week');\r\n};\r\n\r\nexport const getLastWeekEnd = (date) => {\r\n    return dayjs(date).endOf('week').subtract(1, 'week');\r\n};\r\n\r\nexport const convertDateTimeToString = (datetime, stringFormat = DATE_FORMAT_VALUE) => {\r\n    try {\r\n        if (datetime) {\r\n            return datetime.format(stringFormat);\r\n        }\r\n        return null;\r\n    } catch (err) {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const convertStringToDateTime = (\r\n    strFormDateTime,\r\n    fromFormat = DATE_FORMAT_VALUE,\r\n    toFormat = DATE_FORMAT_DISPLAY,\r\n) => {\r\n    try {\r\n        if (strFormDateTime) {\r\n            const datetime = moment(strFormDateTime, fromFormat);\r\n            return moment(datetime.format(toFormat), toFormat);\r\n        }\r\n        return null;\r\n    } catch (err) {\r\n        return null;\r\n    }\r\n};\r\n\r\n\r\nexport const validateDate = (_, value) => {\r\n    const date = dayjs(formatDateString(new Date(), DEFAULT_FORMAT), DATE_FORMAT_VALUE);\r\n    if (date && value && value.isAfter(date)) {\r\n        return Promise.reject('Ngày sinh phải nhỏ hơn ngày hiện tại');\r\n    }\r\n    return Promise.resolve();\r\n};"],"mappings":"AAAA,SAASA,mBAAmB,EAAEC,iBAAiB,EAAEC,cAAc,QAAQ,YAAY;AACnF,SAASC,gBAAgB,QAAQ,QAAQ;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,MAAM,MAAM,QAAQ;AAC3BF,KAAK,CAACG,MAAM,CAACF,UAAU,CAAC;AAExB,OAAO,MAAMG,WAAW,GAAGJ,KAAK,CAAC,CAAC,CAACK,IAAI,CAAC,CAAC;AACzC,OAAO,MAAMC,QAAQ,GAAGN,KAAK,CAAC,CAAC,CAACK,IAAI,CAACD,WAAW,GAAG,CAAC,CAAC;AAErD,OAAO,MAAMG,OAAO,GAAIC,IAAI,IAAK;EAC7B,OAAOR,KAAK,CAACQ,IAAI,CAAC,CAACH,IAAI,CAAC,CAAC;AAC7B,CAAC;AAED,OAAO,MAAMI,YAAY,GAAID,IAAI,IAAK;EAClC,OAAOR,KAAK,CAACQ,IAAI,CAAC,CAACE,OAAO,CAAC,MAAM,CAAC;AACtC,CAAC;AAED,OAAO,MAAMC,WAAW,GAAIH,IAAI,IAAK;EACjC,OAAOR,KAAK,CAACQ,IAAI,CAAC,CAACH,IAAI,CAACE,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC9C,CAAC;AAED,OAAO,MAAMI,gBAAgB,GAAIJ,IAAI,IAAK;EACtC,OAAOR,KAAK,CAACQ,IAAI,CAAC,CAACE,OAAO,CAAC,MAAM,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC;AAC1D,CAAC;AAED,OAAO,MAAMC,cAAc,GAAIN,IAAI,IAAK;EACpC,OAAOR,KAAK,CAACQ,IAAI,CAAC,CAACO,KAAK,CAAC,MAAM,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC;AACxD,CAAC;AAED,OAAO,MAAMG,uBAAuB,GAAGA,CAACC,QAAQ,EAAEC,YAAY,GAAGrB,iBAAiB,KAAK;EACnF,IAAI;IACA,IAAIoB,QAAQ,EAAE;MACV,OAAOA,QAAQ,CAACE,MAAM,CAACD,YAAY,CAAC;IACxC;IACA,OAAO,IAAI;EACf,CAAC,CAAC,OAAOE,GAAG,EAAE;IACV,OAAO,IAAI;EACf;AACJ,CAAC;AAED,OAAO,MAAMC,uBAAuB,GAAGA,CACnCC,eAAe,EACfC,UAAU,GAAG1B,iBAAiB,EAC9B2B,QAAQ,GAAG5B,mBAAmB,KAC7B;EACD,IAAI;IACA,IAAI0B,eAAe,EAAE;MACjB,MAAML,QAAQ,GAAGf,MAAM,CAACoB,eAAe,EAAEC,UAAU,CAAC;MACpD,OAAOrB,MAAM,CAACe,QAAQ,CAACE,MAAM,CAACK,QAAQ,CAAC,EAAEA,QAAQ,CAAC;IACtD;IACA,OAAO,IAAI;EACf,CAAC,CAAC,OAAOJ,GAAG,EAAE;IACV,OAAO,IAAI;EACf;AACJ,CAAC;AAGD,OAAO,MAAMK,YAAY,GAAGA,CAACC,CAAC,EAAEC,KAAK,KAAK;EACtC,MAAMnB,IAAI,GAAGR,KAAK,CAACD,gBAAgB,CAAC,IAAI6B,IAAI,CAAC,CAAC,EAAE9B,cAAc,CAAC,EAAED,iBAAiB,CAAC;EACnF,IAAIW,IAAI,IAAImB,KAAK,IAAIA,KAAK,CAACE,OAAO,CAACrB,IAAI,CAAC,EAAE;IACtC,OAAOsB,OAAO,CAACC,MAAM,CAAC,sCAAsC,CAAC;EACjE;EACA,OAAOD,OAAO,CAACE,OAAO,CAAC,CAAC;AAC5B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}