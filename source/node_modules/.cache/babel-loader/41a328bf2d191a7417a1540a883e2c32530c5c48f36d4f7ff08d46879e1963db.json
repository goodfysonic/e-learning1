{"ast":null,"code":"var _s = $RefreshSig$();\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport { accessRouteTypeEnum } from '@constants';\nimport { Navigate, Outlet, useLocation, useParams } from 'react-router-dom';\nimport routes from '.';\nimport PublicLayout from '@modules/main/PublicLayout';\nimport MainLayout from '@modules/main/MainLayout';\nimport HasPermission from '@components/common/elements/HasPermission';\nimport PageUnauthorized from '@components/common/page/unauthorized';\nconst ValidateAccess = ({\n  authRequire,\n  component: Component,\n  componentProps,\n  isAuthenticated,\n  profile,\n  layout,\n  permissions: routePermissions,\n  onValidatePermissions,\n  path,\n  separate,\n  breadcrumbs\n}) => {\n  _s();\n  const location = useLocation();\n  const {\n    id\n  } = useParams();\n  const getRedirect = authRequire => {\n    if (authRequire === accessRouteTypeEnum.NOT_LOGIN && isAuthenticated) {\n      return routes.homePage.path;\n    }\n    if (authRequire === accessRouteTypeEnum.REQUIRE_LOGIN && !isAuthenticated) {\n      return routes.loginPage.path;\n    }\n\n    // check permistion\n\n    return false;\n  };\n  const redirect = getRedirect(authRequire);\n  if (redirect) {\n    return /*#__PURE__*/React.createElement(Navigate, {\n      state: {\n        from: location\n      },\n      key: redirect,\n      to: redirect,\n      replace: true\n    });\n  }\n\n  // currently, only support custom layout for authRequire route\n  const Layout = authRequire ? layout || MainLayout : PublicLayout;\n  return /*#__PURE__*/React.createElement(Layout, null, /*#__PURE__*/React.createElement(HasPermission, {\n    onValidate: onValidatePermissions,\n    requiredPermissions: routePermissions,\n    path: {\n      name: path,\n      type: id === 'create' ? 'create' : 'update'\n    },\n    separate: separate,\n    fallback: /*#__PURE__*/React.createElement(PageUnauthorized, null)\n  }, /*#__PURE__*/React.createElement(Component, _extends({}, componentProps || {}, {\n    breadcrumbs: breadcrumbs\n  }), /*#__PURE__*/React.createElement(Outlet, null))));\n};\n_s(ValidateAccess, \"cZSzd+nmWDri8rbOTJV7U5qjSEg=\", false, function () {\n  return [useLocation, useParams];\n});\n_c = ValidateAccess;\nexport default ValidateAccess;\nvar _c;\n$RefreshReg$(_c, \"ValidateAccess\");","map":{"version":3,"names":["React","accessRouteTypeEnum","Navigate","Outlet","useLocation","useParams","routes","PublicLayout","MainLayout","HasPermission","PageUnauthorized","ValidateAccess","authRequire","component","Component","componentProps","isAuthenticated","profile","layout","permissions","routePermissions","onValidatePermissions","path","separate","breadcrumbs","_s","location","id","getRedirect","NOT_LOGIN","homePage","REQUIRE_LOGIN","loginPage","redirect","createElement","state","from","key","to","replace","Layout","onValidate","requiredPermissions","name","type","fallback","_extends","_c","$RefreshReg$"],"sources":["C:/Users/PC/Downloads/elms-cms/elms-cms/source/src/routes/ValidateAccess.js"],"sourcesContent":["import React from 'react';\r\n\r\nimport { accessRouteTypeEnum } from '@constants';\r\nimport { Navigate, Outlet, useLocation, useParams } from 'react-router-dom';\r\n\r\nimport routes from '.';\r\nimport PublicLayout from '@modules/main/PublicLayout';\r\nimport MainLayout from '@modules/main/MainLayout';\r\nimport HasPermission from '@components/common/elements/HasPermission';\r\nimport PageUnauthorized from '@components/common/page/unauthorized';\r\n\r\nconst ValidateAccess = ({\r\n    authRequire,\r\n    component: Component,\r\n    componentProps,\r\n    isAuthenticated,\r\n    profile,\r\n    layout,\r\n    permissions: routePermissions,\r\n    onValidatePermissions,\r\n    path,\r\n    separate,\r\n    breadcrumbs,\r\n}) => {\r\n    const location = useLocation();\r\n    const { id } = useParams();\r\n    const getRedirect = (authRequire) => {\r\n        if (authRequire === accessRouteTypeEnum.NOT_LOGIN && isAuthenticated) {\r\n            return routes.homePage.path;\r\n        }\r\n\r\n        if (authRequire === accessRouteTypeEnum.REQUIRE_LOGIN && !isAuthenticated) {\r\n            return routes.loginPage.path;\r\n        }\r\n\r\n        // check permistion\r\n\r\n        return false;\r\n    };\r\n\r\n    const redirect = getRedirect(authRequire);\r\n\r\n    if (redirect) {\r\n        return <Navigate state={{ from: location }} key={redirect} to={redirect} replace />;\r\n    }\r\n\r\n    // currently, only support custom layout for authRequire route\r\n    const Layout = authRequire ? layout || MainLayout : PublicLayout;\r\n    return (\r\n        <Layout>\r\n            <HasPermission\r\n                onValidate={onValidatePermissions}\r\n                requiredPermissions={routePermissions}\r\n                path={{ name: path, type: id === 'create' ? 'create' : 'update' }}\r\n                separate={separate}\r\n                fallback={<PageUnauthorized />}\r\n            >\r\n                <Component {...(componentProps || {})} breadcrumbs={breadcrumbs}>\r\n                    <Outlet />\r\n                </Component>\r\n            </HasPermission>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default ValidateAccess;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,mBAAmB,QAAQ,YAAY;AAChD,SAASC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAE3E,OAAOC,MAAM,MAAM,GAAG;AACtB,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,aAAa,MAAM,2CAA2C;AACrE,OAAOC,gBAAgB,MAAM,sCAAsC;AAEnE,MAAMC,cAAc,GAAGA,CAAC;EACpBC,WAAW;EACXC,SAAS,EAAEC,SAAS;EACpBC,cAAc;EACdC,eAAe;EACfC,OAAO;EACPC,MAAM;EACNC,WAAW,EAAEC,gBAAgB;EAC7BC,qBAAqB;EACrBC,IAAI;EACJC,QAAQ;EACRC;AACJ,CAAC,KAAK;EAAAC,EAAA;EACF,MAAMC,QAAQ,GAAGtB,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEuB;EAAG,CAAC,GAAGtB,SAAS,CAAC,CAAC;EAC1B,MAAMuB,WAAW,GAAIhB,WAAW,IAAK;IACjC,IAAIA,WAAW,KAAKX,mBAAmB,CAAC4B,SAAS,IAAIb,eAAe,EAAE;MAClE,OAAOV,MAAM,CAACwB,QAAQ,CAACR,IAAI;IAC/B;IAEA,IAAIV,WAAW,KAAKX,mBAAmB,CAAC8B,aAAa,IAAI,CAACf,eAAe,EAAE;MACvE,OAAOV,MAAM,CAAC0B,SAAS,CAACV,IAAI;IAChC;;IAEA;;IAEA,OAAO,KAAK;EAChB,CAAC;EAED,MAAMW,QAAQ,GAAGL,WAAW,CAAChB,WAAW,CAAC;EAEzC,IAAIqB,QAAQ,EAAE;IACV,oBAAOjC,KAAA,CAAAkC,aAAA,CAAChC,QAAQ;MAACiC,KAAK,EAAE;QAAEC,IAAI,EAAEV;MAAS,CAAE;MAACW,GAAG,EAAEJ,QAAS;MAACK,EAAE,EAAEL,QAAS;MAACM,OAAO;IAAA,CAAE,CAAC;EACvF;;EAEA;EACA,MAAMC,MAAM,GAAG5B,WAAW,GAAGM,MAAM,IAAIV,UAAU,GAAGD,YAAY;EAChE,oBACIP,KAAA,CAAAkC,aAAA,CAACM,MAAM,qBACHxC,KAAA,CAAAkC,aAAA,CAACzB,aAAa;IACVgC,UAAU,EAAEpB,qBAAsB;IAClCqB,mBAAmB,EAAEtB,gBAAiB;IACtCE,IAAI,EAAE;MAAEqB,IAAI,EAAErB,IAAI;MAAEsB,IAAI,EAAEjB,EAAE,KAAK,QAAQ,GAAG,QAAQ,GAAG;IAAS,CAAE;IAClEJ,QAAQ,EAAEA,QAAS;IACnBsB,QAAQ,eAAE7C,KAAA,CAAAkC,aAAA,CAACxB,gBAAgB,MAAE;EAAE,gBAE/BV,KAAA,CAAAkC,aAAA,CAACpB,SAAS,EAAAgC,QAAA,KAAM/B,cAAc,IAAI,CAAC,CAAC;IAAGS,WAAW,EAAEA;EAAY,iBAC5DxB,KAAA,CAAAkC,aAAA,CAAC/B,MAAM,MAAE,CACF,CACA,CACX,CAAC;AAEjB,CAAC;AAACsB,EAAA,CApDId,cAAc;EAAA,QAaCP,WAAW,EACbC,SAAS;AAAA;AAAA0C,EAAA,GAdtBpC,cAAc;AAsDpB,eAAeA,cAAc;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}