{"ast":null,"code":"import produce from 'immer';\nimport { call, cancelled } from 'redux-saga/effects';\nimport { sendRequest } from '@services/api';\nimport axios from 'axios';\nimport { getData, setData } from '@utils/localStorage';\nimport { destructCamelCaseString } from '@utils';\nimport { apiUrl, appName } from '@constants';\nimport unidecode from 'unidecode';\nfunction makeAction(actionType) {\n  const newAction = payload => ({\n    type: actionType,\n    payload\n  });\n  newAction.type = actionType;\n  return newAction;\n}\nexport const createSuccessActionType = type => `${type}_SUCCESS`;\nexport const createFailureActionType = type => `${type}_FAILURE`;\nexport function createAction(actionType, options) {\n  const rootAction = makeAction(actionType);\n\n  // refactor\n  if (options?.success) {\n    rootAction.success = makeAction(createSuccessActionType(actionType));\n  }\n  if (options?.fail) {\n    rootAction.fail = makeAction(createFailureActionType(actionType));\n  }\n  return rootAction;\n}\nconst makeObject = (data, condition) => {\n  const newData = {};\n  Object.keys(data).filter(condition).forEach(key => {\n    newData[key] = data[key];\n  });\n  return newData;\n};\nconst getStorageData = (storage, defaultKey) => {\n  if (!storage) {\n    return {};\n  }\n  const {\n    key,\n    whiteList,\n    blackList\n  } = storage;\n  const data = getData(key || `${appName}-${defaultKey}`) || {};\n  if (!blackList && !whiteList) {\n    return data;\n  }\n  if (whiteList) {\n    return makeObject(data, key => whiteList.includes(key));\n  }\n  if (blackList) {\n    return makeObject(data, key => !blackList.includes(key));\n  }\n};\nconst storageData = (storage, defaultKey, data) => {\n  if (!storage) {\n    return;\n  }\n  const {\n    key,\n    whiteList,\n    blackList\n  } = storage;\n  let dataWillStorage = data;\n  if (blackList) {\n    dataWillStorage = makeObject(data, key => !blackList.includes(key));\n  }\n  if (whiteList) {\n    dataWillStorage = makeObject(data, key => whiteList.includes(key));\n  }\n  setData(key || `${appName}-${defaultKey}`, dataWillStorage);\n};\nexport function createReducer({\n  reducerName,\n  initialState,\n  storage\n}, handler) {\n  const reducerNameDestructed = destructCamelCaseString(reducerName);\n  const mergedInitialState = {\n    ...initialState,\n    ...getStorageData(storage, reducerNameDestructed)\n  };\n  const reducer = (state, action = {}) => {\n    if (state === undefined) {\n      return mergedInitialState;\n    }\n    if (handler?.[action.type]) {\n      const newState = produce(state, draft => handler[action.type](draft, action));\n      storageData(storage, reducerNameDestructed, newState);\n      return newState;\n    }\n    return state;\n  };\n  Object.defineProperty(reducer, 'name', {\n    value: reducerName\n  });\n  return reducer;\n}\nexport function* processAction(options, {\n  payload\n}) {\n  const {\n    onError,\n    onCompleted\n  } = payload;\n  const cancelTokenSource = axios.CancelToken.source();\n  try {\n    const response = yield call(sendRequest, options, payload, cancelTokenSource.token);\n    if (!response?.data.result) throw response;\n    onCompleted?.(response);\n  } catch (error) {\n    onError?.(error);\n  } finally {\n    if (yield cancelled()) {\n      cancelTokenSource.cancel();\n    }\n  }\n}\nexport const fitString = (text = '', length) => {\n  if (!text) return text;\n  if (text.length < length) return text;else return `${text.slice(0, length)}...`;\n};\nexport function convertToUrlFriendly(string) {\n  // Remove diacritics using unidecode\n  const stringWithoutDiacritics = unidecode(string);\n\n  // Replace spaces with hyphens and convert to lowercase\n  const urlFriendlyString = stringWithoutDiacritics.replace(/\\s+/g, '-').toLowerCase();\n  return urlFriendlyString;\n}","map":{"version":3,"names":["produce","call","cancelled","sendRequest","axios","getData","setData","destructCamelCaseString","apiUrl","appName","unidecode","makeAction","actionType","newAction","payload","type","createSuccessActionType","createFailureActionType","createAction","options","rootAction","success","fail","makeObject","data","condition","newData","Object","keys","filter","forEach","key","getStorageData","storage","defaultKey","whiteList","blackList","includes","storageData","dataWillStorage","createReducer","reducerName","initialState","handler","reducerNameDestructed","mergedInitialState","reducer","state","action","undefined","newState","draft","defineProperty","value","processAction","onError","onCompleted","cancelTokenSource","CancelToken","source","response","token","result","error","cancel","fitString","text","length","slice","convertToUrlFriendly","string","stringWithoutDiacritics","urlFriendlyString","replace","toLowerCase"],"sources":["C:/Users/PC/Downloads/elms-cms/elms-cms/source/src/store/utils.js"],"sourcesContent":["import produce from 'immer';\r\nimport { call, cancelled } from 'redux-saga/effects';\r\n\r\nimport { sendRequest } from '@services/api';\r\nimport axios from 'axios';\r\nimport { getData, setData } from '@utils/localStorage';\r\nimport { destructCamelCaseString } from '@utils';\r\nimport { apiUrl, appName } from '@constants';\r\nimport unidecode from 'unidecode';\r\nfunction makeAction(actionType) {\r\n    const newAction = (payload) => ({\r\n        type: actionType,\r\n        payload,\r\n    });\r\n    newAction.type = actionType;\r\n\r\n    return newAction;\r\n}\r\n\r\nexport const createSuccessActionType = (type) => `${type}_SUCCESS`;\r\nexport const createFailureActionType = (type) => `${type}_FAILURE`;\r\n\r\nexport function createAction(actionType, options) {\r\n    const rootAction = makeAction(actionType);\r\n\r\n    // refactor\r\n    if (options?.success) {\r\n        rootAction.success = makeAction(createSuccessActionType(actionType));\r\n    }\r\n\r\n    if (options?.fail) {\r\n        rootAction.fail = makeAction(createFailureActionType(actionType));\r\n    }\r\n\r\n    return rootAction;\r\n}\r\n\r\nconst makeObject = (data, condition) => {\r\n    const newData = {};\r\n    Object.keys(data)\r\n        .filter(condition)\r\n        .forEach((key) => {\r\n            newData[key] = data[key];\r\n        });\r\n\r\n    return newData;\r\n};\r\n\r\nconst getStorageData = (storage, defaultKey) => {\r\n    if (!storage) {\r\n        return {};\r\n    }\r\n\r\n    const { key, whiteList, blackList } = storage;\r\n    const data = getData(key || `${appName}-${defaultKey}`) || {};\r\n\r\n    if (!blackList && !whiteList) {\r\n        return data;\r\n    }\r\n\r\n    if (whiteList) {\r\n        return makeObject(data, (key) => whiteList.includes(key));\r\n    }\r\n\r\n    if (blackList) {\r\n        return makeObject(data, (key) => !blackList.includes(key));\r\n    }\r\n};\r\n\r\nconst storageData = (storage, defaultKey, data) => {\r\n    if (!storage) {\r\n        return;\r\n    }\r\n\r\n    const { key, whiteList, blackList } = storage;\r\n    let dataWillStorage = data;\r\n\r\n    if (blackList) {\r\n        dataWillStorage = makeObject(data, (key) => !blackList.includes(key));\r\n    }\r\n\r\n    if (whiteList) {\r\n        dataWillStorage = makeObject(data, (key) => whiteList.includes(key));\r\n    }\r\n\r\n    setData(key || `${appName}-${defaultKey}`, dataWillStorage);\r\n};\r\n\r\nexport function createReducer({ reducerName, initialState, storage }, handler) {\r\n    const reducerNameDestructed = destructCamelCaseString(reducerName);\r\n    const mergedInitialState = {\r\n        ...initialState,\r\n        ...getStorageData(storage, reducerNameDestructed),\r\n    };\r\n    const reducer = (state, action = {}) => {\r\n        if (state === undefined) {\r\n            return mergedInitialState;\r\n        }\r\n        if (handler?.[action.type]) {\r\n            const newState = produce(state, (draft) => handler[action.type](draft, action));\r\n            storageData(storage, reducerNameDestructed, newState);\r\n            return newState;\r\n        }\r\n        return state;\r\n    };\r\n    Object.defineProperty(reducer, 'name', { value: reducerName });\r\n\r\n    return reducer;\r\n}\r\n\r\nexport function* processAction(options, { payload }) {\r\n    const { onError, onCompleted } = payload;\r\n    const cancelTokenSource = axios.CancelToken.source();\r\n\r\n    try {\r\n        const response = yield call(sendRequest, options, payload, cancelTokenSource.token);\r\n        if (!response?.data.result) throw response;\r\n        onCompleted?.(response);\r\n    } catch (error) {\r\n        onError?.(error);\r\n    } finally {\r\n        if (yield cancelled()) {\r\n            cancelTokenSource.cancel();\r\n        }\r\n    }\r\n}\r\nexport const fitString = (text = '', length) => {\r\n    if (!text) return text;\r\n\r\n    if (text.length < length) return text;\r\n    else return `${text.slice(0, length)}...`;\r\n};\r\n\r\nexport function convertToUrlFriendly(string) {\r\n    // Remove diacritics using unidecode\r\n    const stringWithoutDiacritics = unidecode(string);\r\n\r\n    // Replace spaces with hyphens and convert to lowercase\r\n    const urlFriendlyString = stringWithoutDiacritics.replace(/\\s+/g, '-').toLowerCase();\r\n\r\n    return urlFriendlyString;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}