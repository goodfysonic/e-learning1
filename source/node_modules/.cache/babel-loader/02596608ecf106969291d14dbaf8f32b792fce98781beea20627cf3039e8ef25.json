{"ast":null,"code":"import { takeLatest } from 'redux-saga/effects';\nimport { accountActions } from '@store/actions';\nimport { processAction } from '@store/utils';\nimport apiConfig from '@constants/apiConfig';\nimport { UserTypes, storageKeys } from '@constants';\nimport { getData } from '@utils/localStorage';\nconst loginSaga = payload => processAction(apiConfig.account.login, payload);\nconst getProfileSaga = payload => {\n  const useKind = getData(storageKeys.USER_KIND);\n  let api;\n  if (useKind === UserTypes.MANAGER) {\n    api = apiConfig.organize.getProfile;\n  } else if (useKind === UserTypes.DEVELOPER) {\n    api = apiConfig.developer.getProfile;\n  } else if (useKind === UserTypes.STUDENT) {\n    api = apiConfig.student.getProfile;\n  } else if (useKind === UserTypes.COMPANY) {\n    api = apiConfig.company.getProfile;\n  }\n  return processAction(api, payload);\n};\nconst sagas = [takeLatest(accountActions.login.type, loginSaga), takeLatest(accountActions.getProfile.type, getProfileSaga)];\nexport default sagas;","map":{"version":3,"names":["takeLatest","accountActions","processAction","apiConfig","UserTypes","storageKeys","getData","loginSaga","payload","account","login","getProfileSaga","useKind","USER_KIND","api","MANAGER","organize","getProfile","DEVELOPER","developer","STUDENT","student","COMPANY","company","sagas","type"],"sources":["C:/Users/PC/Downloads/elms-cms/elms-cms/source/src/store/sagas/account.js"],"sourcesContent":["import { takeLatest } from 'redux-saga/effects';\r\nimport { accountActions } from '@store/actions';\r\nimport { processAction } from '@store/utils';\r\nimport apiConfig from '@constants/apiConfig';\r\nimport { UserTypes, storageKeys } from '@constants';\r\nimport { getData } from '@utils/localStorage';\r\n\r\nconst loginSaga = (payload) => processAction(apiConfig.account.login, payload);\r\n\r\nconst getProfileSaga = (payload) => {\r\n    const useKind = getData(storageKeys.USER_KIND);\r\n    let api;\r\n    if (useKind === UserTypes.MANAGER) {\r\n        api = apiConfig.organize.getProfile;\r\n    } else if (useKind === UserTypes.DEVELOPER) {\r\n        api = apiConfig.developer.getProfile;\r\n    } else if (useKind === UserTypes.STUDENT) {\r\n        api = apiConfig.student.getProfile;\r\n    } else if (useKind === UserTypes.COMPANY) {\r\n        api = apiConfig.company.getProfile;\r\n    }\r\n  \r\n\r\n    return processAction(api, payload);\r\n};\r\n\r\nconst sagas = [\r\n    takeLatest(accountActions.login.type, loginSaga),\r\n    takeLatest(accountActions.getProfile.type, getProfileSaga),\r\n];\r\n\r\nexport default sagas;\r\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,oBAAoB;AAC/C,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,SAASC,aAAa,QAAQ,cAAc;AAC5C,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,SAASC,SAAS,EAAEC,WAAW,QAAQ,YAAY;AACnD,SAASC,OAAO,QAAQ,qBAAqB;AAE7C,MAAMC,SAAS,GAAIC,OAAO,IAAKN,aAAa,CAACC,SAAS,CAACM,OAAO,CAACC,KAAK,EAAEF,OAAO,CAAC;AAE9E,MAAMG,cAAc,GAAIH,OAAO,IAAK;EAChC,MAAMI,OAAO,GAAGN,OAAO,CAACD,WAAW,CAACQ,SAAS,CAAC;EAC9C,IAAIC,GAAG;EACP,IAAIF,OAAO,KAAKR,SAAS,CAACW,OAAO,EAAE;IAC/BD,GAAG,GAAGX,SAAS,CAACa,QAAQ,CAACC,UAAU;EACvC,CAAC,MAAM,IAAIL,OAAO,KAAKR,SAAS,CAACc,SAAS,EAAE;IACxCJ,GAAG,GAAGX,SAAS,CAACgB,SAAS,CAACF,UAAU;EACxC,CAAC,MAAM,IAAIL,OAAO,KAAKR,SAAS,CAACgB,OAAO,EAAE;IACtCN,GAAG,GAAGX,SAAS,CAACkB,OAAO,CAACJ,UAAU;EACtC,CAAC,MAAM,IAAIL,OAAO,KAAKR,SAAS,CAACkB,OAAO,EAAE;IACtCR,GAAG,GAAGX,SAAS,CAACoB,OAAO,CAACN,UAAU;EACtC;EAGA,OAAOf,aAAa,CAACY,GAAG,EAAEN,OAAO,CAAC;AACtC,CAAC;AAED,MAAMgB,KAAK,GAAG,CACVxB,UAAU,CAACC,cAAc,CAACS,KAAK,CAACe,IAAI,EAAElB,SAAS,CAAC,EAChDP,UAAU,CAACC,cAAc,CAACgB,UAAU,CAACQ,IAAI,EAAEd,cAAc,CAAC,CAC7D;AAED,eAAea,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}