{"ast":null,"code":"import qs from 'query-string';\nimport { CurrentcyPositions as CurrencyPositions, CurrentcyPositions, DATE_FORMAT_DISPLAY, DATE_SHORT_MONTH_FORMAT, DEFAULT_FORMAT, DEFAULT_TABLE_ITEM_SIZE, THEMES, apiTenantUrl, apiUrl, storageKeys } from '@constants';\nimport dayjs from 'dayjs';\nimport moment from 'moment/moment';\nimport { getData } from './localStorage';\nexport const convertGlobImportToObject = modules => modules.filter(module => !!module.default).reduce((rs, cur) => ({\n  ...rs,\n  [cur.default.name]: cur.default\n}), {});\nexport const convertGlobImportToArray = modules => modules.filter(module => !!module.default).map(module => module.default);\nexport const destructCamelCaseString = string => {\n  const arrString = [...string];\n  const newArrString = [];\n  arrString.forEach((char, index) => {\n    if (char.charCodeAt(0) > 90) {\n      newArrString.push(char);\n    } else {\n      index && newArrString.push('-');\n      newArrString.push(char.toLowerCase());\n    }\n  });\n  return newArrString.join('');\n};\nexport const getBrowserTheme = () => {\n  const isDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n  return isDark ? THEMES.DARK : THEMES.LIGHT;\n};\nexport const makeURL = (baseURL, params, pathParams) => {\n  for (let key of Object.keys(pathParams || {})) {\n    const keyCompare = `:${key}`;\n    if (baseURL.indexOf(keyCompare) !== -1) {\n      baseURL = baseURL.replace(keyCompare, pathParams[key]);\n    }\n  }\n  if (params) {\n    baseURL = baseURL + '?' + qs.stringify(params);\n  }\n  return baseURL;\n};\nexport const parseURL = url => {\n  try {\n    return new URL(url);\n  } catch (error) {\n    return '';\n  }\n};\nexport const getYTEmbedLinkFromYTWatchLink = watchLink => {\n  if (!watchLink) {\n    return '';\n  }\n  const {\n    v\n  } = qs.parse(parseURL(watchLink).search);\n  return v ? `https://www.youtube.com/embed/${v}?autoplay=1&mute=1` : watchLink;\n};\nexport const getYoutubeVideoID = url => {\n  let pattern = /(youtu.*be.*)\\/(watch\\?v=|embed\\/|v|shorts|)(.*?((?=[&#?])|$))/gm;\n  return pattern.exec(url)?.[3];\n};\nexport const formatNumber = (value, setting) => {\n  if (value) {\n    const decimalPosition = value.toString().indexOf('.');\n    if (decimalPosition > 0) {\n      const intVal = value.toString().substring(0, decimalPosition);\n      const decimalVal = value.toString().substring(decimalPosition + 1);\n      return `${intVal.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}.${decimalVal}`;\n    }\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  } else if (value === 0) return 0;\n  return '';\n};\nexport const formatDateString = (dateString, formatDate = DATE_SHORT_MONTH_FORMAT) => {\n  return dayjs(dateString).format(formatDate);\n};\nexport const removeAccents = str => {\n  if (str) return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '').replace(/đ/g, 'd').replace(/Đ/g, 'D');\n  return str;\n};\nexport const validateUsernameForm = (rule, username) => {\n  return /^[a-z0-9_]+$/.exec(username) ? Promise.resolve() : Promise.reject('Username chỉ bao gồm các ký tự a-z, 0-9, _');\n};\nexport const getBase64 = (img, callback) => {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n};\nexport function ensureArray(value) {\n  if (Array.isArray(value)) {\n    return value;\n  }\n  return [value];\n}\nexport const removePathParams = paths => {\n  return ensureArray(paths).map(path => {\n    if (typeof path !== 'string') return path;\n    return path.replaceAll(/\\/:[a-zA-Z]+/g, '');\n  });\n};\nexport const validatePermission = (requiredPermissions = [], userPermissions = [], requiredKind, userKind, excludeKind = [], profile, path, separate) => {\n  if (ensureArray(excludeKind).length > 0) {\n    if (ensureArray(excludeKind).some(kind => kind == userKind)) return false;\n  }\n  if (requiredKind) {\n    if (requiredKind !== userKind) return false;\n  }\n  if (!requiredPermissions || requiredPermissions?.length == 0) return true;\n  let permissionsSavePage = [];\n  if (separate && requiredPermissions.length > 0) {\n    permissionsSavePage.push(path?.type === 'create' ? requiredPermissions[0] : requiredPermissions[1]);\n  } else {\n    permissionsSavePage = requiredPermissions;\n  }\n  return removePathParams(permissionsSavePage).every(item => {\n    return userPermissions?.includes(new URL(item ?? apiTenantUrl).pathname);\n  });\n};\nexport const randomString = (length = 4) => {\n  let result = '';\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\nexport const formatMoney = (value = 0, setting = {}) => {\n  if ((value || value === 0) && !isNaN(value)) {\n    const groupSeparator = setting.groupSeparator || '.';\n    const decimalSeparator = setting.decimalSeparator || ',';\n    const currentcy = setting.currentcy || '€';\n    const currentcyPosition = setting.currentcyPosition || CurrentcyPositions.BACK;\n    if (value % 1 !== 0) {\n      if (setting.currentDecimal) {\n        value = parseFloat(value.toFixed(setting.currentDecimal));\n      } else {\n        value = (+value).toFixed(2);\n      }\n    }\n    // value = setting.currentDecimal ? (+value).toFixed(setting.currentDecimal) : (+value).toFixed(2);\n    // value = (+value).toFixed(0);\n    const decimalPosition = value.toString().indexOf('.');\n    if (decimalPosition > 0) {\n      const intVal = value.toString().substring(0, decimalPosition);\n      const decimalVal = value.toString().substring(decimalPosition + 1);\n      value = `${intVal.replace(/\\B(?=(\\d{3})+(?!\\d))/g, groupSeparator)}${decimalSeparator}${decimalVal}`;\n    } else {\n      value = value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, groupSeparator);\n    }\n    if (currentcyPosition === CurrentcyPositions.FRONT) {\n      return `${currentcy} ${value}`;\n    } else {\n      return `${value} ${currentcy}`;\n    }\n  }\n  return '';\n};\nexport const convertUtcToLocalTime = (utcTime, inputFormat = DATE_FORMAT_DISPLAY, format = DATE_FORMAT_DISPLAY) => {\n  try {\n    if (utcTime) return moment(moment.utc(utcTime, inputFormat).toDate()).format(format);\n    return '';\n  } catch (err) {\n    return '';\n  }\n};\nexport const convertLocalTimeToUtc = (localTime, inputFormat = DATE_FORMAT_DISPLAY, format = DATE_FORMAT_DISPLAY) => {\n  try {\n    if (localTime) return moment(localTime, inputFormat).utc().format(format);\n    return '';\n  } catch (err) {\n    return '';\n  }\n};\nexport function convertUtcToIso(date) {\n  return dayjs(convertUtcToLocalTime(date, DEFAULT_FORMAT, DEFAULT_FORMAT), DEFAULT_FORMAT);\n}\nexport function convertIsoToUtc(date) {\n  return convertLocalTimeToUtc(dayjs(date).format(DEFAULT_FORMAT), DEFAULT_FORMAT, DEFAULT_FORMAT);\n}\nexport function getFileName(path = '') {\n  return path.substring(path.lastIndexOf('/') + 1);\n}\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\nexport function formatCurrency(value) {\n  if (isNaN(value)) return '';\n  return value.toLocaleString('en-US');\n}\nexport function mappingLabelValue(list = [], value) {\n  const item = list.find(itemList => itemList.value === value);\n  if (item) {\n    return item.label;\n  }\n  return '';\n}\nexport function createPathWithData(path, data) {\n  let pathResult = path;\n  const params = {};\n  const dataKeys = Object.keys(data);\n  for (let key of dataKeys) {\n    const keyCompare = ':' + key;\n    const value = data[key];\n    if (pathResult.indexOf(keyCompare) !== -1) {\n      pathResult = pathResult.replace(keyCompare, value);\n    } else {\n      params[key] = value;\n    }\n  }\n  if (Object.values(params).length) {\n    pathResult += '?' + qs.stringify(params);\n  }\n  return pathResult;\n}\nexport const moveArrayElement = (arr = [], from, to) => {\n  if (!Array.isArray(arr)) throw new Error('The first argument must be an array.');\n  const copy = arr.slice();\n  copy.splice(to, 0, copy.splice(from, 1)[0]);\n  return copy;\n};\nexport const parseJson = json => {\n  let result = null;\n  if (json) {\n    try {\n      result = JSON.parse(json);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  return result;\n};\nexport const getPriceQrCode = priceJson => {\n  const qrcodePrice = parseJson(priceJson) || {};\n  return qrcodePrice.qr_code || {\n    in_price: 0,\n    out_price: 0\n  };\n};\nexport const getPricePickup = priceJson => {\n  const pickupPrice = parseJson(priceJson) || {};\n  return pickupPrice.pickup || {\n    price: 0\n  };\n};\nexport const getPriceDeliver = priceJson => {\n  const deliverPrice = parseJson(priceJson) || {};\n  return deliverPrice.deliver || {\n    price: 0\n  };\n};\nexport const getDisabledHours = minValue => {\n  const hours = [];\n  for (let i = 0; i < 24; i++) {\n    if (minValue && i < minValue.hours()) {\n      hours.push(i);\n    }\n  }\n  return hours;\n};\nexport const getDisabledMinutes = (selectedHour, minValue) => {\n  const minutes = [];\n  for (let i = 0; i < 60; i++) {\n    if (minValue && minValue.hours() === selectedHour && i < minValue.minutes()) {\n      minutes.push(i);\n    }\n  }\n  return minutes;\n};\nexport function generatePassword(options) {\n  const {\n    length,\n    numbers,\n    uppercase,\n    lowercase,\n    symbols,\n    strict\n  } = options;\n  const uppercaseChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  const lowercaseChars = 'abcdefghijklmnopqrstuvwxyz';\n  const numberChars = '0123456789';\n  const symbolChars = '!@#$%^&*()_+[]{}|;:,.<>?';\n  let validChars = '';\n  if (uppercase) {\n    validChars += uppercaseChars;\n  }\n  if (lowercase) {\n    validChars += lowercaseChars;\n  }\n  if (numbers) {\n    validChars += numberChars;\n  }\n  if (symbols) {\n    validChars += symbolChars;\n  }\n  if (validChars.length === 0) {\n    throw new Error('At least one character type should be selected.');\n  }\n  let password = '';\n  for (let i = 0; i < length; i++) {\n    const randomIndex = Math.floor(Math.random() * validChars.length);\n    password += validChars.charAt(randomIndex);\n  }\n  if (strict) {\n    // Ensure at least one character of each type is present\n    if (uppercase && !/[A-Z]/.test(password)) {\n      return generatePassword(options);\n    }\n    if (lowercase && !/[a-z]/.test(password)) {\n      return generatePassword(options);\n    }\n    if (numbers && !/\\d/.test(password)) {\n      return generatePassword(options);\n    }\n    if (symbols && !/[!@#$%^&*()_+[\\]{}|;:,.<>?]/.test(password)) {\n      return generatePassword(options);\n    }\n  }\n  return password;\n}\nexport function copyToClipboard(text) {\n  var textField = document.createElement('textarea');\n  textField.innerText = text;\n  document.body.appendChild(textField);\n  textField.select();\n  document.execCommand('copy');\n  textField.remove();\n}\n\n//Sử dụng trong trường hợp khi search rồi back về bằng breadcrumb\nexport const deleteSearchFilterInLocationSearch = (locationSearch, searchFilter = []) => {\n  const searchParams = new URLSearchParams(locationSearch);\n  searchFilter.forEach(value => searchParams.delete(value));\n  return `?${searchParams.toString()}`;\n};\nexport const referMoneyTotal = function (arr) {\n  return arr.reduce((sum, item) => {\n    return item.kind === 3 ? sum + (item.money ?? 0) : sum;\n  }, 0);\n};\nexport const sumMoney = function (arr) {\n  return arr.reduce((sum, item) => {\n    if (!item) return sum;\n    const money = item.money ?? 0;\n    if (item.kind === 4 || item.kind === 5) {\n      return sum - money;\n    } else if (item.kind === 1 || item.kind === 2 || item.kind === 3) {\n      return sum + money;\n    }\n\n    // For kinds other than 1, 2, 3, 4, or 5, we just return the current sum\n    return sum;\n  }, 0);\n};\nexport const orderNumber = (pagination, index) => {\n  const page = pagination?.current ? pagination.current - 1 : 1;\n  return page * DEFAULT_TABLE_ITEM_SIZE + (index + 1);\n};\nexport function convertToCamelCase(str) {\n  str = str.normalize('NFD') // chuyển chuỗi sang unicode tổ hợp\n  .replace(/[\\u0300-\\u036f]/g, ''); // xóa các ký tự dấu sau khi tách tổ hợp\n\n  str = str.replace(/[đĐ]/g, 'd');\n  str = str.replace(/(^\\w{1})|(\\s+\\w{1})/g, letter => letter.toUpperCase());\n  str = str.replace(/(\\s+)/g, '');\n\n  // return\n  return str;\n}\nexport const convertMinuteToHour = minu => {\n  let result = minu / 60;\n  if (result % 1 !== 0) {\n    return `${parseFloat(result.toFixed(2))}h`;\n  } else {\n    return `${result.toFixed(0)}h`;\n  }\n};\nexport const formatMoneyValue = value => {\n  return formatMoney(value, {\n    groupSeparator: ',',\n    decimalSeparator: '.',\n    currentcy: 'đ',\n    currentcyPosition: 'BACK',\n    currentDecimal: '2'\n  });\n};\nexport const calculateTimes = data => {\n  return data.reduce((acc, item) => {\n    if (item?.kind === 1) {\n      acc.upTime += item?.totalTime;\n    } else if (item?.kind === 200) {\n      acc.bugTime += item?.totalTime;\n    }\n    return acc;\n  }, {\n    upTime: 0,\n    bugTime: 0\n  });\n};\nexport const calculateTrainingTimes = data => {\n  let value = 0;\n  return data.reduce((acc, item) => {\n    acc.completeTime += item?.learnCourseTime;\n    acc.assignedTime += item?.assignedCourseTime;\n    value += item?.learnCourseTime === 0 || item?.assignedCourseTime === 0 ? 0 : item?.assignedCourseTime - item?.learnCourseTime;\n    acc.differenceTime = value < 0 ? value : 0;\n    return acc;\n  }, {\n    completeTime: 0,\n    assignedTime: 0,\n    differenceTime: 0\n  });\n};","map":{"version":3,"names":["qs","CurrentcyPositions","CurrencyPositions","DATE_FORMAT_DISPLAY","DATE_SHORT_MONTH_FORMAT","DEFAULT_FORMAT","DEFAULT_TABLE_ITEM_SIZE","THEMES","apiTenantUrl","apiUrl","storageKeys","dayjs","moment","getData","convertGlobImportToObject","modules","filter","module","default","reduce","rs","cur","name","convertGlobImportToArray","map","destructCamelCaseString","string","arrString","newArrString","forEach","char","index","charCodeAt","push","toLowerCase","join","getBrowserTheme","isDark","window","matchMedia","matches","DARK","LIGHT","makeURL","baseURL","params","pathParams","key","Object","keys","keyCompare","indexOf","replace","stringify","parseURL","url","URL","error","getYTEmbedLinkFromYTWatchLink","watchLink","v","parse","search","getYoutubeVideoID","pattern","exec","formatNumber","value","setting","decimalPosition","toString","intVal","substring","decimalVal","formatDateString","dateString","formatDate","format","removeAccents","str","normalize","validateUsernameForm","rule","username","Promise","resolve","reject","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","ensureArray","Array","isArray","removePathParams","paths","path","replaceAll","validatePermission","requiredPermissions","userPermissions","requiredKind","userKind","excludeKind","profile","separate","length","some","kind","permissionsSavePage","type","every","item","includes","pathname","randomString","characters","charactersLength","i","charAt","Math","floor","random","formatMoney","isNaN","groupSeparator","decimalSeparator","currentcy","currentcyPosition","BACK","currentDecimal","parseFloat","toFixed","FRONT","convertUtcToLocalTime","utcTime","inputFormat","utc","toDate","err","convertLocalTimeToUtc","localTime","convertUtcToIso","date","convertIsoToUtc","getFileName","lastIndexOf","isSafari","test","navigator","userAgent","formatCurrency","toLocaleString","mappingLabelValue","list","find","itemList","label","createPathWithData","data","pathResult","dataKeys","values","moveArrayElement","arr","from","to","Error","copy","slice","splice","parseJson","json","JSON","console","getPriceQrCode","priceJson","qrcodePrice","qr_code","in_price","out_price","getPricePickup","pickupPrice","pickup","price","getPriceDeliver","deliverPrice","deliver","getDisabledHours","minValue","hours","getDisabledMinutes","selectedHour","minutes","generatePassword","options","numbers","uppercase","lowercase","symbols","strict","uppercaseChars","lowercaseChars","numberChars","symbolChars","validChars","password","randomIndex","copyToClipboard","text","textField","document","createElement","innerText","body","appendChild","select","execCommand","remove","deleteSearchFilterInLocationSearch","locationSearch","searchFilter","searchParams","URLSearchParams","delete","referMoneyTotal","sum","money","sumMoney","orderNumber","pagination","page","current","convertToCamelCase","letter","toUpperCase","convertMinuteToHour","minu","formatMoneyValue","calculateTimes","acc","upTime","totalTime","bugTime","calculateTrainingTimes","completeTime","learnCourseTime","assignedTime","assignedCourseTime","differenceTime"],"sources":["C:/Users/PC/Downloads/elms-cms/elms-cms/source/src/utils/index.js"],"sourcesContent":["import qs from 'query-string';\r\nimport {\r\n    CurrentcyPositions as CurrencyPositions,\r\n    CurrentcyPositions,\r\n    DATE_FORMAT_DISPLAY,\r\n    DATE_SHORT_MONTH_FORMAT,\r\n    DEFAULT_FORMAT,\r\n    DEFAULT_TABLE_ITEM_SIZE,\r\n    THEMES,\r\n    apiTenantUrl,\r\n    apiUrl,\r\n    storageKeys,\r\n} from '@constants';\r\nimport dayjs from 'dayjs';\r\nimport moment from 'moment/moment';\r\nimport { getData } from './localStorage';\r\n\r\nexport const convertGlobImportToObject = (modules) =>\r\n    modules\r\n        .filter((module) => !!module.default)\r\n        .reduce(\r\n            (rs, cur) => ({\r\n                ...rs,\r\n                [cur.default.name]: cur.default,\r\n            }),\r\n            {},\r\n        );\r\n\r\nexport const convertGlobImportToArray = (modules) =>\r\n    modules.filter((module) => !!module.default).map((module) => module.default);\r\n\r\nexport const destructCamelCaseString = (string) => {\r\n    const arrString = [...string];\r\n    const newArrString = [];\r\n    arrString.forEach((char, index) => {\r\n        if (char.charCodeAt(0) > 90) {\r\n            newArrString.push(char);\r\n        } else {\r\n            index && newArrString.push('-');\r\n            newArrString.push(char.toLowerCase());\r\n        }\r\n    });\r\n    return newArrString.join('');\r\n};\r\n\r\nexport const getBrowserTheme = () => {\r\n    const isDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n\r\n    return isDark ? THEMES.DARK : THEMES.LIGHT;\r\n};\r\n\r\nexport const makeURL = (baseURL, params, pathParams) => {\r\n    for (let key of Object.keys(pathParams || {})) {\r\n        const keyCompare = `:${key}`;\r\n        if (baseURL.indexOf(keyCompare) !== -1) {\r\n            baseURL = baseURL.replace(keyCompare, pathParams[key]);\r\n        }\r\n    }\r\n\r\n    if (params) {\r\n        baseURL = baseURL + '?' + qs.stringify(params);\r\n    }\r\n\r\n    return baseURL;\r\n};\r\n\r\nexport const parseURL = (url) => {\r\n    try {\r\n        return new URL(url);\r\n    } catch (error) {\r\n        return '';\r\n    }\r\n};\r\n\r\nexport const getYTEmbedLinkFromYTWatchLink = (watchLink) => {\r\n    if (!watchLink) {\r\n        return '';\r\n    }\r\n\r\n    const { v } = qs.parse(parseURL(watchLink).search);\r\n    return v ? `https://www.youtube.com/embed/${v}?autoplay=1&mute=1` : watchLink;\r\n};\r\n\r\nexport const getYoutubeVideoID = (url) => {\r\n    let pattern = /(youtu.*be.*)\\/(watch\\?v=|embed\\/|v|shorts|)(.*?((?=[&#?])|$))/gm;\r\n    return pattern.exec(url)?.[3];\r\n};\r\n\r\nexport const formatNumber = (value, setting) => {\r\n    if (value) {\r\n        const decimalPosition = value.toString().indexOf('.');\r\n        if (decimalPosition > 0) {\r\n            const intVal = value.toString().substring(0, decimalPosition);\r\n            const decimalVal = value.toString().substring(decimalPosition + 1);\r\n            return `${intVal.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}.${decimalVal}`;\r\n        }\r\n        return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    } else if (value === 0) return 0;\r\n    return '';\r\n};\r\n\r\nexport const formatDateString = (dateString, formatDate = DATE_SHORT_MONTH_FORMAT) => {\r\n    return dayjs(dateString).format(formatDate);\r\n};\r\n\r\nexport const removeAccents = (str) => {\r\n    if (str)\r\n        return str\r\n            .normalize('NFD')\r\n            .replace(/[\\u0300-\\u036f]/g, '')\r\n            .replace(/đ/g, 'd')\r\n            .replace(/Đ/g, 'D');\r\n    return str;\r\n};\r\n\r\nexport const validateUsernameForm = (rule, username) => {\r\n    return /^[a-z0-9_]+$/.exec(username)\r\n        ? Promise.resolve()\r\n        : Promise.reject('Username chỉ bao gồm các ký tự a-z, 0-9, _');\r\n};\r\n\r\nexport const getBase64 = (img, callback) => {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n};\r\n\r\nexport function ensureArray(value) {\r\n    if (Array.isArray(value)) {\r\n        return value;\r\n    }\r\n\r\n    return [value];\r\n}\r\n\r\nexport const removePathParams = (paths) => {\r\n    return ensureArray(paths).map((path) => {\r\n        if (typeof path !== 'string') return path;\r\n        return path.replaceAll(/\\/:[a-zA-Z]+/g, '');\r\n    });\r\n};\r\n\r\nexport const validatePermission = (\r\n    requiredPermissions = [],\r\n    userPermissions = [],\r\n    requiredKind,\r\n    userKind,\r\n    excludeKind = [],\r\n    profile,\r\n    path,\r\n    separate,\r\n) => {\r\n    if (ensureArray(excludeKind).length > 0) {\r\n        if (ensureArray(excludeKind).some((kind) => kind == userKind)) return false;\r\n    }\r\n    if (requiredKind) {\r\n        if (requiredKind !== userKind) return false;\r\n    }\r\n    if (!requiredPermissions || requiredPermissions?.length == 0) return true;\r\n    let permissionsSavePage = [];\r\n    if (separate && requiredPermissions.length > 0) {\r\n        permissionsSavePage.push(path?.type === 'create' ? requiredPermissions[0] : requiredPermissions[1]);\r\n    } else {\r\n        permissionsSavePage = requiredPermissions;\r\n    }\r\n\r\n    return removePathParams(permissionsSavePage).every((item) => {\r\n        return userPermissions?.includes(new URL(item ?? apiTenantUrl).pathname);\r\n    });\r\n};\r\n\r\nexport const randomString = (length = 4) => {\r\n    let result = '';\r\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    const charactersLength = characters.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const formatMoney = (value = 0, setting = {}) => {\r\n    if ((value || value === 0) && !isNaN(value)) {\r\n        const groupSeparator = setting.groupSeparator || '.';\r\n        const decimalSeparator = setting.decimalSeparator || ',';\r\n        const currentcy = setting.currentcy || '€';\r\n        const currentcyPosition = setting.currentcyPosition || CurrentcyPositions.BACK;\r\n        if (value % 1 !== 0) {\r\n            if (setting.currentDecimal) {\r\n                value = parseFloat(value.toFixed(setting.currentDecimal));\r\n            } else {\r\n                value = (+value).toFixed(2);\r\n            }\r\n        }\r\n        // value = setting.currentDecimal ? (+value).toFixed(setting.currentDecimal) : (+value).toFixed(2);\r\n        // value = (+value).toFixed(0);\r\n        const decimalPosition = value.toString().indexOf('.');\r\n        if (decimalPosition > 0) {\r\n            const intVal = value.toString().substring(0, decimalPosition);\r\n            const decimalVal = value.toString().substring(decimalPosition + 1);\r\n            value = `${intVal.replace(/\\B(?=(\\d{3})+(?!\\d))/g, groupSeparator)}${decimalSeparator}${decimalVal}`;\r\n        } else {\r\n            value = value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, groupSeparator);\r\n        }\r\n        if (currentcyPosition === CurrentcyPositions.FRONT) {\r\n            return `${currentcy} ${value}`;\r\n        } else {\r\n            return `${value} ${currentcy}`;\r\n        }\r\n    }\r\n    return '';\r\n};\r\n\r\nexport const convertUtcToLocalTime = (utcTime, inputFormat = DATE_FORMAT_DISPLAY, format = DATE_FORMAT_DISPLAY) => {\r\n    try {\r\n        if (utcTime) return moment(moment.utc(utcTime, inputFormat).toDate()).format(format);\r\n        return '';\r\n    } catch (err) {\r\n        return '';\r\n    }\r\n};\r\n\r\nexport const convertLocalTimeToUtc = (localTime, inputFormat = DATE_FORMAT_DISPLAY, format = DATE_FORMAT_DISPLAY) => {\r\n    try {\r\n        if (localTime) return moment(localTime, inputFormat).utc().format(format);\r\n        return '';\r\n    } catch (err) {\r\n        return '';\r\n    }\r\n};\r\n\r\nexport function convertUtcToIso(date) {\r\n    return dayjs(convertUtcToLocalTime(date, DEFAULT_FORMAT, DEFAULT_FORMAT), DEFAULT_FORMAT);\r\n}\r\n\r\nexport function convertIsoToUtc(date) {\r\n    return convertLocalTimeToUtc(dayjs(date).format(DEFAULT_FORMAT), DEFAULT_FORMAT, DEFAULT_FORMAT);\r\n}\r\n\r\nexport function getFileName(path = '') {\r\n    return path.substring(path.lastIndexOf('/') + 1);\r\n}\r\n\r\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n\r\nexport function formatCurrency(value) {\r\n    if (isNaN(value)) return '';\r\n\r\n    return value.toLocaleString('en-US');\r\n}\r\n\r\nexport function mappingLabelValue(list = [], value) {\r\n    const item = list.find((itemList) => itemList.value === value);\r\n    if (item) {\r\n        return item.label;\r\n    }\r\n\r\n    return '';\r\n}\r\n\r\nexport function createPathWithData(path, data) {\r\n    let pathResult = path;\r\n    const params = {};\r\n    const dataKeys = Object.keys(data);\r\n    for (let key of dataKeys) {\r\n        const keyCompare = ':' + key;\r\n        const value = data[key];\r\n        if (pathResult.indexOf(keyCompare) !== -1) {\r\n            pathResult = pathResult.replace(keyCompare, value);\r\n        } else {\r\n            params[key] = value;\r\n        }\r\n    }\r\n\r\n    if (Object.values(params).length) {\r\n        pathResult += '?' + qs.stringify(params);\r\n    }\r\n\r\n    return pathResult;\r\n}\r\n\r\nexport const moveArrayElement = (arr = [], from, to) => {\r\n    if (!Array.isArray(arr)) throw new Error('The first argument must be an array.');\r\n\r\n    const copy = arr.slice();\r\n    copy.splice(to, 0, copy.splice(from, 1)[0]);\r\n\r\n    return copy;\r\n};\r\n\r\nexport const parseJson = (json) => {\r\n    let result = null;\r\n    if (json) {\r\n        try {\r\n            result = JSON.parse(json);\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const getPriceQrCode = (priceJson) => {\r\n    const qrcodePrice = parseJson(priceJson) || {};\r\n    return qrcodePrice.qr_code || { in_price: 0, out_price: 0 };\r\n};\r\n\r\nexport const getPricePickup = (priceJson) => {\r\n    const pickupPrice = parseJson(priceJson) || {};\r\n    return pickupPrice.pickup || { price: 0 };\r\n};\r\n\r\nexport const getPriceDeliver = (priceJson) => {\r\n    const deliverPrice = parseJson(priceJson) || {};\r\n    return deliverPrice.deliver || { price: 0 };\r\n};\r\n\r\nexport const getDisabledHours = (minValue) => {\r\n    const hours = [];\r\n    for (let i = 0; i < 24; i++) {\r\n        if (minValue && i < minValue.hours()) {\r\n            hours.push(i);\r\n        }\r\n    }\r\n    return hours;\r\n};\r\n\r\nexport const getDisabledMinutes = (selectedHour, minValue) => {\r\n    const minutes = [];\r\n    for (let i = 0; i < 60; i++) {\r\n        if (minValue && minValue.hours() === selectedHour && i < minValue.minutes()) {\r\n            minutes.push(i);\r\n        }\r\n    }\r\n    return minutes;\r\n};\r\nexport function generatePassword(options) {\r\n    const { length, numbers, uppercase, lowercase, symbols, strict } = options;\r\n\r\n    const uppercaseChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    const lowercaseChars = 'abcdefghijklmnopqrstuvwxyz';\r\n    const numberChars = '0123456789';\r\n    const symbolChars = '!@#$%^&*()_+[]{}|;:,.<>?';\r\n\r\n    let validChars = '';\r\n\r\n    if (uppercase) {\r\n        validChars += uppercaseChars;\r\n    }\r\n    if (lowercase) {\r\n        validChars += lowercaseChars;\r\n    }\r\n    if (numbers) {\r\n        validChars += numberChars;\r\n    }\r\n    if (symbols) {\r\n        validChars += symbolChars;\r\n    }\r\n\r\n    if (validChars.length === 0) {\r\n        throw new Error('At least one character type should be selected.');\r\n    }\r\n\r\n    let password = '';\r\n\r\n    for (let i = 0; i < length; i++) {\r\n        const randomIndex = Math.floor(Math.random() * validChars.length);\r\n        password += validChars.charAt(randomIndex);\r\n    }\r\n\r\n    if (strict) {\r\n        // Ensure at least one character of each type is present\r\n        if (uppercase && !/[A-Z]/.test(password)) {\r\n            return generatePassword(options);\r\n        }\r\n        if (lowercase && !/[a-z]/.test(password)) {\r\n            return generatePassword(options);\r\n        }\r\n        if (numbers && !/\\d/.test(password)) {\r\n            return generatePassword(options);\r\n        }\r\n        if (symbols && !/[!@#$%^&*()_+[\\]{}|;:,.<>?]/.test(password)) {\r\n            return generatePassword(options);\r\n        }\r\n    }\r\n\r\n    return password;\r\n}\r\nexport function copyToClipboard(text) {\r\n    var textField = document.createElement('textarea');\r\n    textField.innerText = text;\r\n    document.body.appendChild(textField);\r\n    textField.select();\r\n    document.execCommand('copy');\r\n    textField.remove();\r\n}\r\n\r\n//Sử dụng trong trường hợp khi search rồi back về bằng breadcrumb\r\nexport const deleteSearchFilterInLocationSearch = (locationSearch, searchFilter = []) => {\r\n    const searchParams = new URLSearchParams(locationSearch);\r\n    searchFilter.forEach((value) => searchParams.delete(value));\r\n    return `?${searchParams.toString()}`;\r\n};\r\n\r\nexport const referMoneyTotal = function (arr) {\r\n    return arr.reduce((sum, item) => {\r\n        return item.kind === 3 ? sum + (item.money ?? 0) : sum;\r\n    }, 0);\r\n};\r\n\r\nexport const sumMoney = function (arr) {\r\n    return arr.reduce((sum, item) => {\r\n        if (!item) return sum;\r\n\r\n        const money = item.money ?? 0;\r\n        if (item.kind === 4 || item.kind === 5) {\r\n            return sum - money;\r\n        } else if (item.kind === 1 || item.kind === 2 || item.kind === 3) {\r\n            return sum + money;\r\n        }\r\n\r\n        // For kinds other than 1, 2, 3, 4, or 5, we just return the current sum\r\n        return sum;\r\n    }, 0);\r\n};\r\n\r\nexport const orderNumber = (pagination, index) => {\r\n    const page = pagination?.current ? pagination.current - 1 : 1;\r\n    return page * DEFAULT_TABLE_ITEM_SIZE + (index + 1);\r\n};\r\n\r\nexport function convertToCamelCase(str) {\r\n    str = str\r\n        .normalize('NFD') // chuyển chuỗi sang unicode tổ hợp\r\n        .replace(/[\\u0300-\\u036f]/g, ''); // xóa các ký tự dấu sau khi tách tổ hợp\r\n\r\n    str = str.replace(/[đĐ]/g, 'd');\r\n    str = str.replace(/(^\\w{1})|(\\s+\\w{1})/g, (letter) => letter.toUpperCase());\r\n    str = str.replace(/(\\s+)/g, '');\r\n\r\n    // return\r\n    return str;\r\n}\r\n\r\nexport const convertMinuteToHour = (minu) => {\r\n    let result = minu / 60;\r\n    if (result % 1 !== 0) {\r\n        return `${parseFloat(result.toFixed(2))}h`;\r\n    } else {\r\n        return `${result.toFixed(0)}h`;\r\n    }\r\n};\r\nexport const formatMoneyValue = (value) => {\r\n    return formatMoney(value, {\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        currentcy: 'đ',\r\n        currentcyPosition: 'BACK',\r\n        currentDecimal: '2',\r\n    });\r\n};\r\n\r\nexport const calculateTimes = (data) => {\r\n    return data.reduce(\r\n        (acc, item) => {\r\n            if (item?.kind === 1) {\r\n                acc.upTime += item?.totalTime;\r\n            } else if (item?.kind === 200) {\r\n                acc.bugTime += item?.totalTime;\r\n            }\r\n            return acc;\r\n        },\r\n        { upTime: 0, bugTime: 0 },\r\n    );\r\n};\r\n\r\nexport const calculateTrainingTimes = (data) => {\r\n    let value = 0;\r\n    return data.reduce(\r\n        (acc, item) => {\r\n            acc.completeTime += item?.learnCourseTime;\r\n            acc.assignedTime += item?.assignedCourseTime;\r\n            value +=\r\n                item?.learnCourseTime === 0 || item?.assignedCourseTime === 0\r\n                    ? 0\r\n                    : item?.assignedCourseTime - item?.learnCourseTime;\r\n            acc.differenceTime = value < 0 ? value : 0;\r\n            return acc;\r\n        },\r\n        { completeTime: 0, assignedTime: 0, differenceTime: 0 },\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}