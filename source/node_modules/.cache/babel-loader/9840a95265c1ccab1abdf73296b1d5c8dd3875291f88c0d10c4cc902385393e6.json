{"ast":null,"code":"var _s = $RefreshSig$();\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport { Form, Input, Radio } from 'antd';\nimport React from 'react';\nimport useFormField from '@hooks/useFormField';\nimport TextArea from 'antd/es/input/TextArea';\nconst TextField = props => {\n  _s();\n  const {\n    type,\n    size,\n    label,\n    name,\n    disabled,\n    onBlur,\n    validateStatus,\n    help,\n    style,\n    className,\n    onChange,\n    readOnly,\n    initialValue,\n    fieldValue,\n    formItemProps\n  } = props;\n  const getMaxLengthMsg = () => {\n    const {\n      maxLength,\n      maxLengthMsg\n    } = props;\n    return maxLengthMsg || `Số ký tự không thể nhiều hơn ${maxLength}`;\n  };\n  const getMinLengthMsg = () => {\n    const {\n      minLength,\n      minLengthMsg\n    } = props;\n    return minLengthMsg || `Số ký tự không thể ít hơn ${minLength}`;\n  };\n  const getTextFieldRules = () => {\n    const {\n      maxLength,\n      minLength,\n      type,\n      invalidEmailMsg\n    } = props;\n    const rules = [];\n    if (maxLength) {\n      rules.push({\n        max: maxLength,\n        message: getMaxLengthMsg()\n      });\n    }\n    if (minLength) {\n      rules.push({\n        min: minLength,\n        message: getMinLengthMsg()\n      });\n    }\n    if (type === 'email') {\n      rules.push({\n        type,\n        message: invalidEmailMsg || 'Định dạng email không hợp lệ'\n      });\n    }\n    return rules;\n  };\n  const {\n    rules,\n    placeholder\n  } = useFormField(props);\n  return /*#__PURE__*/React.createElement(Form.Item, _extends({\n    className: className,\n    label: label,\n    name: name,\n    initialValue: initialValue,\n    validateStatus: validateStatus,\n    help: help,\n    rules: [...rules, getTextFieldRules()]\n  }, formItemProps), type === 'textarea' ? /*#__PURE__*/React.createElement(TextArea, {\n    rows: 4,\n    onChange: onChange,\n    style: style,\n    placeholder: placeholder,\n    disabled: disabled,\n    onBlur: onBlur,\n    readOnly: readOnly\n  }) : /*#__PURE__*/React.createElement(Input, {\n    onChange: onChange,\n    style: style,\n    size: size,\n    placeholder: placeholder,\n    disabled: disabled,\n    type: type,\n    onBlur: onBlur,\n    readOnly: readOnly,\n    value: fieldValue\n  }));\n};\n_s(TextField, \"ERqZuvB8MQiu8351qg+SHigqakc=\", false, function () {\n  return [useFormField];\n});\n_c = TextField;\nexport default TextField;\nvar _c;\n$RefreshReg$(_c, \"TextField\");","map":{"version":3,"names":["Form","Input","Radio","React","useFormField","TextArea","TextField","props","_s","type","size","label","name","disabled","onBlur","validateStatus","help","style","className","onChange","readOnly","initialValue","fieldValue","formItemProps","getMaxLengthMsg","maxLength","maxLengthMsg","getMinLengthMsg","minLength","minLengthMsg","getTextFieldRules","invalidEmailMsg","rules","push","max","message","min","placeholder","createElement","Item","_extends","rows","value","_c","$RefreshReg$"],"sources":["C:/Users/PC/Downloads/elms-cms/elms-cms/source/src/components/common/form/TextField.js"],"sourcesContent":["import { Form, Input, Radio } from 'antd';\r\nimport React from 'react';\r\nimport useFormField from '@hooks/useFormField';\r\nimport TextArea from 'antd/es/input/TextArea';\r\n\r\nconst TextField = (props) => {\r\n    const {\r\n        type,\r\n        size,\r\n        label,\r\n        name,\r\n        disabled,\r\n        onBlur,\r\n        validateStatus,\r\n        help,\r\n        style,\r\n        className,\r\n        onChange,\r\n        readOnly,\r\n        initialValue,\r\n        fieldValue,\r\n        formItemProps,\r\n    } = props;\r\n\r\n    const getMaxLengthMsg = () => {\r\n        const { maxLength, maxLengthMsg } = props;\r\n        return maxLengthMsg || `Số ký tự không thể nhiều hơn ${maxLength}`;\r\n    };\r\n\r\n    const getMinLengthMsg = () => {\r\n        const { minLength, minLengthMsg } = props;\r\n        return minLengthMsg || `Số ký tự không thể ít hơn ${minLength}`;\r\n    };\r\n\r\n    const getTextFieldRules = () => {\r\n        const { maxLength, minLength, type, invalidEmailMsg } = props;\r\n        const rules = [];\r\n        if (maxLength) {\r\n            rules.push({ max: maxLength, message: getMaxLengthMsg() });\r\n        }\r\n        if (minLength) {\r\n            rules.push({ min: minLength, message: getMinLengthMsg() });\r\n        }\r\n        if (type === 'email') {\r\n            rules.push({\r\n                type,\r\n                message: invalidEmailMsg || 'Định dạng email không hợp lệ',\r\n            });\r\n        }\r\n\r\n        return rules;\r\n    };\r\n\r\n    const { rules, placeholder } = useFormField(props);\r\n    return (\r\n        <Form.Item\r\n            className={className}\r\n            label={label}\r\n            name={name}\r\n            initialValue={initialValue}\r\n            validateStatus={validateStatus}\r\n            help={help}\r\n            rules={[ ...rules, getTextFieldRules() ]}\r\n            {...formItemProps}\r\n        >\r\n            {type === 'textarea' ? (\r\n                <TextArea\r\n                    rows={4}\r\n                    onChange={onChange}\r\n                    style={style}\r\n                    placeholder={placeholder}\r\n                    disabled={disabled}\r\n                    onBlur={onBlur}\r\n                    readOnly={readOnly}\r\n                />\r\n            ) : (\r\n                <Input\r\n                    onChange={onChange}\r\n                    style={style}\r\n                    size={size}\r\n                    placeholder={placeholder}\r\n                    disabled={disabled}\r\n                    type={type}\r\n                    onBlur={onBlur}\r\n                    readOnly={readOnly}\r\n                    value={fieldValue}\r\n                />\r\n            )}\r\n        </Form.Item>\r\n    );\r\n};\r\n\r\nexport default TextField;\r\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,MAAM;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,QAAQ,MAAM,wBAAwB;AAE7C,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACzB,MAAM;IACFC,IAAI;IACJC,IAAI;IACJC,KAAK;IACLC,IAAI;IACJC,QAAQ;IACRC,MAAM;IACNC,cAAc;IACdC,IAAI;IACJC,KAAK;IACLC,SAAS;IACTC,QAAQ;IACRC,QAAQ;IACRC,YAAY;IACZC,UAAU;IACVC;EACJ,CAAC,GAAGhB,KAAK;EAET,MAAMiB,eAAe,GAAGA,CAAA,KAAM;IAC1B,MAAM;MAAEC,SAAS;MAAEC;IAAa,CAAC,GAAGnB,KAAK;IACzC,OAAOmB,YAAY,IAAK,gCAA+BD,SAAU,EAAC;EACtE,CAAC;EAED,MAAME,eAAe,GAAGA,CAAA,KAAM;IAC1B,MAAM;MAAEC,SAAS;MAAEC;IAAa,CAAC,GAAGtB,KAAK;IACzC,OAAOsB,YAAY,IAAK,6BAA4BD,SAAU,EAAC;EACnE,CAAC;EAED,MAAME,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,MAAM;MAAEL,SAAS;MAAEG,SAAS;MAAEnB,IAAI;MAAEsB;IAAgB,CAAC,GAAGxB,KAAK;IAC7D,MAAMyB,KAAK,GAAG,EAAE;IAChB,IAAIP,SAAS,EAAE;MACXO,KAAK,CAACC,IAAI,CAAC;QAAEC,GAAG,EAAET,SAAS;QAAEU,OAAO,EAAEX,eAAe,CAAC;MAAE,CAAC,CAAC;IAC9D;IACA,IAAII,SAAS,EAAE;MACXI,KAAK,CAACC,IAAI,CAAC;QAAEG,GAAG,EAAER,SAAS;QAAEO,OAAO,EAAER,eAAe,CAAC;MAAE,CAAC,CAAC;IAC9D;IACA,IAAIlB,IAAI,KAAK,OAAO,EAAE;MAClBuB,KAAK,CAACC,IAAI,CAAC;QACPxB,IAAI;QACJ0B,OAAO,EAAEJ,eAAe,IAAI;MAChC,CAAC,CAAC;IACN;IAEA,OAAOC,KAAK;EAChB,CAAC;EAED,MAAM;IAAEA,KAAK;IAAEK;EAAY,CAAC,GAAGjC,YAAY,CAACG,KAAK,CAAC;EAClD,oBACIJ,KAAA,CAAAmC,aAAA,CAACtC,IAAI,CAACuC,IAAI,EAAAC,QAAA;IACNtB,SAAS,EAAEA,SAAU;IACrBP,KAAK,EAAEA,KAAM;IACbC,IAAI,EAAEA,IAAK;IACXS,YAAY,EAAEA,YAAa;IAC3BN,cAAc,EAAEA,cAAe;IAC/BC,IAAI,EAAEA,IAAK;IACXgB,KAAK,EAAE,CAAE,GAAGA,KAAK,EAAEF,iBAAiB,CAAC,CAAC;EAAG,GACrCP,aAAa,GAEhBd,IAAI,KAAK,UAAU,gBAChBN,KAAA,CAAAmC,aAAA,CAACjC,QAAQ;IACLoC,IAAI,EAAE,CAAE;IACRtB,QAAQ,EAAEA,QAAS;IACnBF,KAAK,EAAEA,KAAM;IACboB,WAAW,EAAEA,WAAY;IACzBxB,QAAQ,EAAEA,QAAS;IACnBC,MAAM,EAAEA,MAAO;IACfM,QAAQ,EAAEA;EAAS,CACtB,CAAC,gBAEFjB,KAAA,CAAAmC,aAAA,CAACrC,KAAK;IACFkB,QAAQ,EAAEA,QAAS;IACnBF,KAAK,EAAEA,KAAM;IACbP,IAAI,EAAEA,IAAK;IACX2B,WAAW,EAAEA,WAAY;IACzBxB,QAAQ,EAAEA,QAAS;IACnBJ,IAAI,EAAEA,IAAK;IACXK,MAAM,EAAEA,MAAO;IACfM,QAAQ,EAAEA,QAAS;IACnBsB,KAAK,EAAEpB;EAAW,CACrB,CAEE,CAAC;AAEpB,CAAC;AAACd,EAAA,CArFIF,SAAS;EAAA,QAgDoBF,YAAY;AAAA;AAAAuC,EAAA,GAhDzCrC,SAAS;AAuFf,eAAeA,SAAS;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}