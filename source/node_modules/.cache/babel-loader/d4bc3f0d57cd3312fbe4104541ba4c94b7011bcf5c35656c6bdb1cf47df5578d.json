{"ast":null,"code":"var _s = $RefreshSig$();\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport useFetch from '@hooks/useFetch';\nimport useFormField from '@hooks/useFormField';\nimport { Form, Spin } from 'antd';\nimport { debounce } from 'lodash';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport SelectField from './SelectField';\nimport useFormInstance from 'antd/es/form/hooks/useFormInstance';\nfunction AutoCompleteField({\n  label,\n  name,\n  placeholder,\n  rules,\n  required,\n  fromItemProps,\n  allowClear,\n  fieldProps,\n  apiConfig,\n  mappingOptions,\n  initialSearchParams,\n  searchParams,\n  optionsParams = {},\n  maxOptions = 10,\n  debounceTime = 600,\n  onChange,\n  disabled,\n  renderCustomOption,\n  ...props\n}) {\n  _s();\n  const {\n    placeholder: _placeholder,\n    rules: _rules\n  } = useFormField({\n    placeholder,\n    rules,\n    required\n  });\n  const [fetching, setFetching] = useState(false);\n  const [_options, setOptions] = useState();\n  const {\n    execute\n  } = useFetch(apiConfig);\n  const form = useFormInstance();\n  const [initialOpts, setInitialOpts] = useState();\n  const handleFetchOptions = useCallback(({\n    searchText,\n    onCompleted,\n    onError\n  }) => {\n    execute({\n      params: {\n        size: maxOptions,\n        page: 0,\n        ...optionsParams,\n        ...(searchParams ? searchParams(searchText) : {})\n      },\n      onCompleted: res => {\n        onCompleted(res.data?.content?.map(mappingOptions));\n      },\n      onError\n    });\n  }, [maxOptions, searchParams, mappingOptions, optionsParams]);\n  const handleOnSearch = useMemo(() => {\n    const onCompleted = options => {\n      setFetching(false);\n      if (options) {\n        setOptions(options);\n      }\n    };\n    const onError = () => {\n      setFetching(false);\n    };\n    const loadOptions = searchText => {\n      if (searchText == '') {\n        setOptions(initialOpts);\n      }\n      if (!searchText || !mappingOptions) return;\n      setOptions([]);\n      setFetching(true);\n      handleFetchOptions({\n        searchText,\n        onCompleted,\n        onError\n      });\n    };\n    return debounce(loadOptions, debounceTime);\n  }, [handleFetchOptions, mappingOptions, debounceTime]);\n  const getInitialOptions = useCallback(() => {\n    execute({\n      params: {\n        page: 0,\n        size: maxOptions,\n        ...initialSearchParams,\n        id: form?.getFieldValue(name)\n      },\n      onCompleted: res => {\n        setOptions(res.data?.content?.map(mappingOptions) || []);\n        setInitialOpts(res.data?.content?.map(mappingOptions) || []);\n      }\n    });\n  }, [form?.getFieldValue(name)]);\n  const handleFocus = useCallback(() => {\n    if (_options?.length === 0) {\n      setOptions(initialOpts);\n    }\n  }, [_options]);\n  useEffect(() => {\n    getInitialOptions();\n  }, [form?.getFieldValue(name)]);\n  return /*#__PURE__*/React.createElement(SelectField, _extends({\n    fieldProps: fieldProps,\n    fromItemProps: fromItemProps,\n    label: label,\n    name: name,\n    rules: _rules,\n    disabled: disabled,\n    showSearch: true,\n    allowClear: allowClear,\n    options: _options?.slice(0, maxOptions),\n    filterOption: false,\n    notFoundContent: fetching ? /*#__PURE__*/React.createElement(Spin, {\n      size: \"small\"\n    }) : undefined,\n    onSearch: handleOnSearch,\n    placeholder: _placeholder,\n    renderCustomOption: renderCustomOption,\n    onChange: onChange,\n    onFocus: handleFocus,\n    onClear: () => handleOnSearch(\" \")\n  }, props));\n}\n_s(AutoCompleteField, \"2b8efsYi988GWOpcN/vvmAtA/fc=\", false, function () {\n  return [useFormField, useFetch, useFormInstance];\n});\n_c = AutoCompleteField;\nexport default AutoCompleteField;\nvar _c;\n$RefreshReg$(_c, \"AutoCompleteField\");","map":{"version":3,"names":["useFetch","useFormField","Form","Spin","debounce","React","useCallback","useEffect","useMemo","useRef","useState","SelectField","useFormInstance","AutoCompleteField","label","name","placeholder","rules","required","fromItemProps","allowClear","fieldProps","apiConfig","mappingOptions","initialSearchParams","searchParams","optionsParams","maxOptions","debounceTime","onChange","disabled","renderCustomOption","props","_s","_placeholder","_rules","fetching","setFetching","_options","setOptions","execute","form","initialOpts","setInitialOpts","handleFetchOptions","searchText","onCompleted","onError","params","size","page","res","data","content","map","handleOnSearch","options","loadOptions","getInitialOptions","id","getFieldValue","handleFocus","length","createElement","_extends","showSearch","slice","filterOption","notFoundContent","undefined","onSearch","onFocus","onClear","_c","$RefreshReg$"],"sources":["C:/Users/PC/Downloads/elms-cms/elms-cms/source/src/components/common/form/AutoCompleteField.js"],"sourcesContent":["import useFetch from '@hooks/useFetch';\r\nimport useFormField from '@hooks/useFormField';\r\nimport { Form, Spin } from 'antd';\r\nimport { debounce } from 'lodash';\r\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport SelectField from './SelectField';\r\nimport useFormInstance from 'antd/es/form/hooks/useFormInstance';\r\n\r\nfunction AutoCompleteField({\r\n    label,\r\n    name,\r\n    placeholder,\r\n    rules,\r\n    required,\r\n    fromItemProps,\r\n    allowClear,\r\n    fieldProps,\r\n    apiConfig,\r\n    mappingOptions,\r\n    initialSearchParams,\r\n    searchParams,\r\n    optionsParams = {},\r\n    maxOptions = 10,\r\n    debounceTime = 600,\r\n    onChange,\r\n    disabled,\r\n    renderCustomOption,\r\n    ...props\r\n}) {\r\n    const { placeholder: _placeholder, rules: _rules } = useFormField({\r\n        placeholder,\r\n        rules,\r\n        required,\r\n    });\r\n    const [fetching, setFetching] = useState(false);\r\n    const [_options, setOptions] = useState();\r\n    const { execute } = useFetch(apiConfig);\r\n    const form = useFormInstance();\r\n    const [initialOpts, setInitialOpts] = useState();\r\n    const handleFetchOptions = useCallback(\r\n        ({ searchText, onCompleted, onError }) => {\r\n            execute({\r\n                params: {\r\n                    size: maxOptions,\r\n                    page: 0,\r\n                    ...optionsParams,\r\n                    ...(searchParams ? searchParams(searchText) : {}),\r\n                },\r\n                onCompleted: (res) => {\r\n                    onCompleted(res.data?.content?.map(mappingOptions));\r\n                },\r\n                onError,\r\n            });\r\n        },\r\n        [maxOptions, searchParams, mappingOptions, optionsParams],\r\n    );\r\n\r\n    const handleOnSearch = useMemo(() => {\r\n        const onCompleted = (options) => {\r\n            setFetching(false);\r\n            if (options) {\r\n                setOptions(options);\r\n            }\r\n        };\r\n\r\n        const onError = () => {\r\n            setFetching(false);\r\n        };\r\n\r\n        const loadOptions = (searchText) => {\r\n            if (searchText == '') {\r\n                setOptions(initialOpts);\r\n            }\r\n            if (!searchText || !mappingOptions) return;\r\n            setOptions([]);\r\n            setFetching(true);\r\n            handleFetchOptions({ searchText, onCompleted, onError });\r\n        };\r\n\r\n        return debounce(loadOptions, debounceTime);\r\n    }, [handleFetchOptions, mappingOptions, debounceTime]);\r\n\r\n    const getInitialOptions = useCallback(() => {\r\n        execute({\r\n            params: {\r\n                page: 0,\r\n                size: maxOptions,\r\n                ...initialSearchParams,\r\n                id: form?.getFieldValue(name),\r\n            },\r\n            onCompleted: (res) => {\r\n                setOptions(res.data?.content?.map(mappingOptions) || []);\r\n                setInitialOpts(res.data?.content?.map(mappingOptions) || []);\r\n            },\r\n        });\r\n    }, [form?.getFieldValue(name)]);\r\n\r\n    const handleFocus = useCallback(() => {\r\n        if (_options?.length === 0) {\r\n            setOptions(initialOpts);\r\n        }\r\n    }, [_options]);\r\n\r\n    useEffect(() => {\r\n        getInitialOptions();\r\n    }, [form?.getFieldValue(name)]);\r\n\r\n    return (\r\n        <SelectField\r\n            fieldProps={fieldProps}\r\n            fromItemProps={fromItemProps}\r\n            label={label}\r\n            name={name}\r\n            rules={_rules}\r\n            disabled={disabled}\r\n            showSearch\r\n            allowClear={allowClear}\r\n            options={_options?.slice(0, maxOptions)}\r\n            filterOption={false}\r\n            notFoundContent={fetching ? <Spin size=\"small\" /> : undefined}\r\n            onSearch={handleOnSearch}\r\n            placeholder={_placeholder}\r\n            renderCustomOption={renderCustomOption}\r\n            onChange={onChange}\r\n            onFocus={handleFocus}\r\n            onClear={() => handleOnSearch(\" \")}\r\n            {...props}\r\n        />\r\n    );\r\n}\r\n\r\nexport default AutoCompleteField;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}