{"ast":null,"code":"var _s = $RefreshSig$();\nimport logo from '@assets/images/logo.jpg';\nimport { Layout, Menu } from 'antd';\nimport React, { useMemo } from 'react';\nimport navMenuConfig from '@constants/menuConfig';\nimport useAuth from '@hooks/useAuth';\nimport { matchPath, useLocation, useNavigate } from 'react-router-dom';\nimport styles from './NavSider.module.scss';\nimport useValidatePermission from '@hooks/useValidatePermission';\nconst {\n  Sider\n} = Layout;\nconst NavSider = ({\n  collapsed,\n  onCollapse,\n  width\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const validatePermission = useValidatePermission();\n  const activeNav = useMemo(() => {\n    const activeNav = findActiveNav(navMenuConfig);\n    if (activeNav) {\n      return activeNav;\n    }\n    return {\n      selectedKeys: [],\n      openKeys: []\n    };\n  }, [location.pathname]);\n  function makeNavs(navs) {\n    return navs.map(nav => {\n      const newNav = {\n        ...nav\n      };\n      if (newNav.permission || newNav.kind) {\n        if (!validatePermission(newNav.permission, newNav.kind)) {\n          return null;\n        }\n      }\n      if (newNav.children) {\n        newNav.children = makeNavs(nav.children);\n        if (newNav.children.every(item => item === null)) {\n          return null;\n        }\n      }\n      return newNav;\n    });\n  }\n  function handleMenuItemClick(item) {\n    let selectedNav;\n    navMenuConfig.map(navItem => {\n      if (navItem.key === item.key) selectedNav = navItem;else if (navItem.children) {\n        navItem.children.map(navChild => {\n          if (navChild.key === item.key) selectedNav = navChild;\n        });\n      }\n    });\n    navigate(selectedNav?.path);\n  }\n  function findActiveNav(navs) {\n    for (const nav of navs) {\n      if (nav.children) {\n        const activeItem = findActiveNav(nav.children);\n        if (activeItem) {\n          return {\n            selectedKeys: activeItem.selectedKeys,\n            openKeys: [nav.key, ...activeItem.openKeys]\n          };\n        }\n      } else if (matchPath(nav.path + '/*', location.pathname)) {\n        return {\n          selectedKeys: [nav.key],\n          openKeys: []\n        };\n      }\n    }\n\n    // return defaultOpenNav;\n  }\n  return /*#__PURE__*/React.createElement(Sider, {\n    className: 'app-sider ' + styles.sidebar,\n    collapsible: true,\n    collapsed: collapsed,\n    width: width,\n    onCollapse: onCollapse,\n    trigger: null\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-collapsed\": collapsed,\n    className: styles.logo,\n    style: {\n      width: '100%',\n      marginTop: '2px'\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Mira\"\n  })), /*#__PURE__*/React.createElement(Menu, {\n    key: location.pathname == '/' ? 'initial' : 'navSider',\n    theme: \"dark\",\n    mode: \"inline\",\n    className: styles.menu,\n    defaultSelectedKeys: activeNav.selectedKeys,\n    defaultOpenKeys: activeNav.openKeys\n    // openKeys={activeNav.openKeys}\n    ,\n    selectedKeys: activeNav.selectedKeys,\n    items: makeNavs(navMenuConfig),\n    onSelect: item => handleMenuItemClick(item)\n  }));\n};\n_s(NavSider, \"Wg1krjBU9H1ipBP8TEUtVF756Ac=\", false, function () {\n  return [useNavigate, useLocation, useValidatePermission];\n});\n_c = NavSider;\nexport default NavSider;\nvar _c;\n$RefreshReg$(_c, \"NavSider\");","map":{"version":3,"names":["logo","Layout","Menu","React","useMemo","navMenuConfig","useAuth","matchPath","useLocation","useNavigate","styles","useValidatePermission","Sider","NavSider","collapsed","onCollapse","width","_s","navigate","location","validatePermission","activeNav","findActiveNav","selectedKeys","openKeys","pathname","makeNavs","navs","map","nav","newNav","permission","kind","children","every","item","handleMenuItemClick","selectedNav","navItem","key","navChild","path","activeItem","createElement","className","sidebar","collapsible","trigger","style","marginTop","src","alt","theme","mode","menu","defaultSelectedKeys","defaultOpenKeys","items","onSelect","_c","$RefreshReg$"],"sources":["C:/Users/PC/Downloads/elms-cms/elms-cms/source/src/modules/main/NavSider.js"],"sourcesContent":["import logo from '@assets/images/logo.jpg';\r\n\r\nimport { Layout, Menu } from 'antd';\r\nimport React, { useMemo } from 'react';\r\n\r\nimport navMenuConfig from '@constants/menuConfig';\r\nimport useAuth from '@hooks/useAuth';\r\nimport { matchPath, useLocation, useNavigate } from 'react-router-dom';\r\nimport styles from './NavSider.module.scss';\r\nimport useValidatePermission from '@hooks/useValidatePermission';\r\nconst { Sider } = Layout;\r\n\r\nconst NavSider = ({ collapsed, onCollapse, width }) => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const validatePermission = useValidatePermission();\r\n\r\n    const activeNav = useMemo(() => {\r\n        const activeNav = findActiveNav(navMenuConfig);\r\n        if (activeNav) {\r\n            return activeNav;\r\n        }\r\n\r\n        return {\r\n            selectedKeys: [],\r\n            openKeys: [],\r\n        };\r\n    }, [location.pathname]);\r\n\r\n    function makeNavs(navs) {\r\n        return navs.map((nav) => {\r\n            const newNav = { ...nav };\r\n            if (newNav.permission || newNav.kind) {\r\n                if (!validatePermission(newNav.permission, newNav.kind)) {\r\n                    return null;\r\n                }\r\n            }\r\n\r\n            if (newNav.children) {\r\n                newNav.children = makeNavs(nav.children);\r\n                if (newNav.children.every((item) => item === null)) {\r\n                    return null;\r\n                }\r\n            }\r\n\r\n            return newNav;\r\n        });\r\n    }\r\n\r\n    function handleMenuItemClick(item) {\r\n        let selectedNav;\r\n        navMenuConfig.map((navItem) => {\r\n            if (navItem.key === item.key) selectedNav = navItem;\r\n            else if (navItem.children) {\r\n                navItem.children.map((navChild) => {\r\n                    if (navChild.key === item.key) selectedNav = navChild;\r\n                });\r\n            }\r\n        });\r\n\r\n        navigate(selectedNav?.path);\r\n    }\r\n\r\n    function findActiveNav(navs) {\r\n        for (const nav of navs) {\r\n            if (nav.children) {\r\n                const activeItem = findActiveNav(nav.children);\r\n                if (activeItem) {\r\n                    return {\r\n                        selectedKeys: activeItem.selectedKeys,\r\n                        openKeys: [nav.key, ...activeItem.openKeys],\r\n                    };\r\n                }\r\n            } else if (matchPath(nav.path + '/*', location.pathname)) {\r\n                return {\r\n                    selectedKeys: [nav.key],\r\n                    openKeys: [],\r\n                };\r\n            }\r\n        }\r\n\r\n        // return defaultOpenNav;\r\n    }\r\n\r\n    return (\r\n        <Sider\r\n            className={'app-sider ' + styles.sidebar}\r\n            collapsible\r\n            collapsed={collapsed}\r\n            width={width}\r\n            onCollapse={onCollapse}\r\n            trigger={null}\r\n        >\r\n            <div data-collapsed={collapsed} className={styles.logo} style={{ width: '100%', marginTop:'2px' }}>\r\n                <img src={logo} alt=\"Mira\" />\r\n            </div>\r\n            <Menu\r\n                key={location.pathname == '/' ? 'initial' : 'navSider'}\r\n                theme=\"dark\"\r\n                mode=\"inline\"\r\n                className={styles.menu}\r\n                defaultSelectedKeys={activeNav.selectedKeys}\r\n                defaultOpenKeys={activeNav.openKeys}\r\n                // openKeys={activeNav.openKeys}\r\n                selectedKeys={activeNav.selectedKeys}\r\n                items={makeNavs(navMenuConfig)}\r\n                onSelect={(item) => handleMenuItemClick(item)}\r\n            />\r\n        </Sider>\r\n    );\r\n};\r\n\r\nexport default NavSider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}