{"ast":null,"code":"var _s = $RefreshSig$();\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport { AppConstants, DEFAULT_TABLE_ITEM_SIZE } from '@constants';\nimport useListBase from '@hooks/useListBase';\nimport React from 'react';\nimport { UserOutlined, DeleteOutlined } from '@ant-design/icons';\nimport PageWrapper from '@components/common/layout/PageWrapper';\nimport ListPage from '@components/common/layout/ListPage';\nimport BaseTable from '@components/common/table/BaseTable';\nimport { statusOptions } from '@constants/masterData';\nimport useTranslate from '@hooks/useTranslate';\nimport { FieldTypes } from '@constants/formConfig';\nimport apiConfig from '@constants/apiConfig';\nimport { defineMessages } from 'react-intl';\nimport { Button, Tag } from 'antd';\nimport { commonMessage } from '@locales/intl';\nimport { showErrorMessage } from '@services/notifyService';\nconst message = defineMessages({\n  objectName: {\n    \"id\": \"components.common.page.category.CategoryListPageCommon.objectName\",\n    \"defaultMessage\": 'Loại'\n  },\n  name: {\n    \"id\": \"components.common.page.category.CategoryListPageCommon.name\",\n    \"defaultMessage\": 'Tên'\n  },\n  status: {\n    \"id\": \"components.common.page.category.CategoryListPageCommon.status\",\n    \"defaultMessage\": 'Trạng thái'\n  },\n  createDate: {\n    \"id\": \"components.common.page.category.CategoryListPageCommon.createDate\",\n    \"defaultMessage\": 'Ngày tạo'\n  },\n  category: {\n    \"id\": \"components.common.page.category.CategoryListPageCommon.category\",\n    \"defaultMessage\": 'Danh mục hệ'\n  }\n});\nconst CategoryListPageCommon = ({\n  routes,\n  kind\n}) => {\n  _s();\n  const translate = useTranslate();\n  const statusValues = translate.formatKeys(statusOptions, ['label']);\n  const {\n    data,\n    mixinFuncs,\n    queryFilter,\n    loading,\n    pagination,\n    changePagination\n  } = useListBase({\n    apiConfig: apiConfig.category,\n    options: {\n      pageSize: DEFAULT_TABLE_ITEM_SIZE,\n      objectName: translate.formatMessage(message.objectName)\n    },\n    override: funcs => {\n      funcs.additionalActionColumnButtons = () => {\n        return {\n          deleteItem: ({\n            buttonProps,\n            ...dataRow\n          }) => {\n            return /*#__PURE__*/React.createElement(Button, _extends({}, buttonProps, {\n              type: \"link\",\n              onClick: e => {\n                e.stopPropagation();\n                mixinFuncs.showDeleteItemConfirm(dataRow._id);\n              },\n              style: {\n                padding: 0\n              }\n            }), /*#__PURE__*/React.createElement(DeleteOutlined, null));\n          }\n        };\n      };\n      const prepareGetListParams = funcs.prepareGetListParams;\n      funcs.prepareGetListParams = params => {\n        return {\n          ...prepareGetListParams(params),\n          kind\n        };\n      };\n      funcs.handleDeleteItemError = err => {\n        if (err.response.data.code == \"ERROR-CATEGORY-ERROR-0002\") {\n          showErrorMessage('Không xoá được khi đã có sinh viên');\n        } else if (err.response.data.code == \"ERROR-CATEGORY-ERROR-0003\") {\n          showErrorMessage('Không xoá được khi đã có lập trình viên');\n        }\n      };\n    }\n  });\n  const columns = [{\n    title: translate.formatMessage(message.name),\n    dataIndex: 'categoryName'\n  }, {\n    title: translate.formatMessage(message.createDate),\n    dataIndex: 'createdDate',\n    align: 'right',\n    width: 180\n  },\n  // {\n  //     title: translate.formatMessage(message.status),\n  //     dataIndex: 'status',\n  //     align: 'center',\n  //     width: 120,\n  //     render(dataRow) {\n  //         const status = statusValues.find((item) => item.value == dataRow);\n\n  //         return <Tag color={status.color}>{status.label}</Tag>;\n  //     },\n  // },\n  mixinFuncs.renderStatusColumn({\n    width: '120px'\n  }), mixinFuncs.renderActionColumn({\n    edit: true,\n    delete: true\n  }, {\n    width: '120px'\n  })];\n  const searchFields = [{\n    key: 'name',\n    placeholder: translate.formatMessage(message.name)\n  }, {\n    key: 'status',\n    placeholder: translate.formatMessage(message.status),\n    type: FieldTypes.SELECT,\n    options: statusValues,\n    submitOnChanged: true\n  }];\n  return /*#__PURE__*/React.createElement(PageWrapper, {\n    routes: routes\n  }, /*#__PURE__*/React.createElement(ListPage, {\n    searchForm: mixinFuncs.renderSearchForm({\n      fields: searchFields,\n      initialValues: queryFilter\n    }),\n    actionBar: mixinFuncs.renderActionBar(),\n    baseTable: /*#__PURE__*/React.createElement(BaseTable, {\n      onChange: changePagination,\n      pagination: pagination,\n      loading: loading,\n      dataSource: data,\n      columns: columns\n    })\n  }));\n};\n_s(CategoryListPageCommon, \"y/3SAEBvdjGvXtjRyifZH2lwD5I=\", false, function () {\n  return [useTranslate, useListBase];\n});\n_c = CategoryListPageCommon;\nexport default CategoryListPageCommon;\nvar _c;\n$RefreshReg$(_c, \"CategoryListPageCommon\");","map":{"version":3,"names":["AppConstants","DEFAULT_TABLE_ITEM_SIZE","useListBase","React","UserOutlined","DeleteOutlined","PageWrapper","ListPage","BaseTable","statusOptions","useTranslate","FieldTypes","apiConfig","defineMessages","Button","Tag","commonMessage","showErrorMessage","message","objectName","name","status","createDate","category","CategoryListPageCommon","routes","kind","_s","translate","statusValues","formatKeys","data","mixinFuncs","queryFilter","loading","pagination","changePagination","options","pageSize","formatMessage","override","funcs","additionalActionColumnButtons","deleteItem","buttonProps","dataRow","createElement","_extends","type","onClick","e","stopPropagation","showDeleteItemConfirm","_id","style","padding","prepareGetListParams","params","handleDeleteItemError","err","response","code","columns","title","dataIndex","align","width","renderStatusColumn","renderActionColumn","edit","delete","searchFields","key","placeholder","SELECT","submitOnChanged","searchForm","renderSearchForm","fields","initialValues","actionBar","renderActionBar","baseTable","onChange","dataSource","_c","$RefreshReg$"],"sources":["C:/Users/PC/Downloads/elms-cms/elms-cms/source/src/components/common/page/category/CategoryListPageCommon.js"],"sourcesContent":["import { AppConstants, DEFAULT_TABLE_ITEM_SIZE } from '@constants';\r\nimport useListBase from '@hooks/useListBase';\r\nimport React from 'react';\r\nimport { UserOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport PageWrapper from '@components/common/layout/PageWrapper';\r\nimport ListPage from '@components/common/layout/ListPage';\r\nimport BaseTable from '@components/common/table/BaseTable';\r\nimport { statusOptions } from '@constants/masterData';\r\nimport useTranslate from '@hooks/useTranslate';\r\nimport { FieldTypes } from '@constants/formConfig';\r\nimport apiConfig from '@constants/apiConfig';\r\nimport { defineMessages } from 'react-intl';\r\nimport { Button, Tag } from 'antd';\r\nimport { commonMessage } from '@locales/intl';\r\nimport { showErrorMessage } from '@services/notifyService';\r\n\r\nconst message = defineMessages({\r\n    objectName: 'Loại',\r\n    name: 'Tên',\r\n    status: 'Trạng thái',\r\n    createDate: 'Ngày tạo',\r\n    category: 'Danh mục hệ',\r\n});\r\n\r\nconst CategoryListPageCommon = ({ routes, kind }) => {\r\n    const translate = useTranslate();\r\n    const statusValues = translate.formatKeys(statusOptions, ['label']);\r\n\r\n    const { data, mixinFuncs, queryFilter, loading, pagination, changePagination } = useListBase({\r\n        apiConfig: apiConfig.category,\r\n        options: {\r\n            pageSize: DEFAULT_TABLE_ITEM_SIZE,\r\n            objectName: translate.formatMessage(message.objectName),\r\n        },\r\n        override: (funcs) => {\r\n            funcs.additionalActionColumnButtons = () => {\r\n                return {\r\n                    deleteItem: ({ buttonProps, ...dataRow }) => {\r\n                        return (\r\n                            <Button\r\n                                {...buttonProps}\r\n                                type=\"link\"\r\n                                onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    mixinFuncs.showDeleteItemConfirm(dataRow._id);\r\n                                }}\r\n                                style={{ padding: 0 }}\r\n                            >\r\n                                <DeleteOutlined />\r\n                            </Button>\r\n                        );\r\n                    },\r\n                };\r\n            };\r\n            const prepareGetListParams = funcs.prepareGetListParams;\r\n            funcs.prepareGetListParams = (params) => {\r\n                return {\r\n                    ...prepareGetListParams(params),\r\n                    kind,\r\n                };\r\n            };\r\n            funcs.handleDeleteItemError = (err) => {\r\n                if(err.response.data.code ==\"ERROR-CATEGORY-ERROR-0002\"){\r\n                    showErrorMessage('Không xoá được khi đã có sinh viên');\r\n                }\r\n                else if(err.response.data.code ==\"ERROR-CATEGORY-ERROR-0003\"){\r\n                    showErrorMessage('Không xoá được khi đã có lập trình viên');\r\n                }\r\n            };\r\n        },\r\n    });\r\n\r\n    const columns = [\r\n        {\r\n            title: translate.formatMessage(message.name),\r\n            dataIndex: 'categoryName',\r\n        },\r\n        {\r\n            title: translate.formatMessage(message.createDate),\r\n            dataIndex: 'createdDate',\r\n            align: 'right',\r\n            width: 180,\r\n        },\r\n        // {\r\n        //     title: translate.formatMessage(message.status),\r\n        //     dataIndex: 'status',\r\n        //     align: 'center',\r\n        //     width: 120,\r\n        //     render(dataRow) {\r\n        //         const status = statusValues.find((item) => item.value == dataRow);\r\n\r\n        //         return <Tag color={status.color}>{status.label}</Tag>;\r\n        //     },\r\n        // },\r\n        mixinFuncs.renderStatusColumn({ width: '120px' }),\r\n        mixinFuncs.renderActionColumn({ edit: true, delete: true }, { width: '120px' }),\r\n    ];\r\n\r\n    const searchFields = [\r\n        {\r\n            key: 'name',\r\n            placeholder: translate.formatMessage(message.name),\r\n        },\r\n        {\r\n            key: 'status',\r\n            placeholder: translate.formatMessage(message.status),\r\n            type: FieldTypes.SELECT,\r\n            options: statusValues,\r\n            submitOnChanged: true,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <PageWrapper routes={routes}>\r\n            <ListPage\r\n                searchForm={mixinFuncs.renderSearchForm({ fields: searchFields, initialValues: queryFilter })}\r\n                actionBar={mixinFuncs.renderActionBar()}\r\n                baseTable={\r\n                    <BaseTable\r\n                        onChange={changePagination}\r\n                        pagination={pagination}\r\n                        loading={loading}\r\n                        dataSource={data}\r\n                        columns={columns}\r\n                    />\r\n                }\r\n            />\r\n        </PageWrapper>\r\n    );\r\n};\r\n\r\nexport default CategoryListPageCommon;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}