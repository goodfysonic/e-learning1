{"ast":null,"code":"import { UserTypes, storageKeys } from '@constants';\nimport { commonMessage } from '@locales/intl';\nimport { notification } from 'antd';\nimport { defineMessages } from 'react-intl';\nimport { getData } from './localStorage';\nimport React from 'react';\nimport { IconBellRinging } from '@tabler/icons-react';\nconst messages = defineMessages({\n  studentDoneTaskDescription: {\n    \"id\": \"utils.webSocket.studentDoneTaskDescription\",\n    \"defaultMessage\": 'Bạn vừa hoàn thành task: '\n  },\n  studentNewTaskDescription: {\n    \"id\": \"utils.webSocket.studentNewTaskDescription\",\n    \"defaultMessage\": 'Bạn vừa được giao task: '\n  },\n  cancelTaskDescription: {\n    \"id\": \"utils.webSocket.cancelTaskDescription\",\n    \"defaultMessage\": 'Bạn vừa bị huỷ task : '\n  },\n  leaderNewTaskDescription: {\n    \"id\": \"utils.webSocket.leaderNewTaskDescription\",\n    \"defaultMessage\": 'Một task mới vừa được tạo: '\n  },\n  leaderDoneTaskDescription: {\n    \"id\": \"utils.webSocket.leaderDoneTaskDescription\",\n    \"defaultMessage\": 'Thông báo đã hoàn thành task: '\n  }\n});\nexport const webSocket = (tokenLogin, translate) => {\n  var wsUri = process.env.REACT_APP_WEB_SOCKET_URL;\n  var websocket;\n  var isClosedIntentionally = false;\n  document.addEventListener('visibilitychange', handleVisibilityChange);\n  function handleVisibilityChange() {\n    if (document.visibilityState === 'visible') {\n      // If the page becomes visible, reconnect WebSocket\n      webSocket();\n    } else {\n      // If the page becomes hidden, close WebSocket\n      if (websocket) {\n        isClosedIntentionally = true;\n        websocket.close();\n      }\n    }\n  }\n  function init() {\n    webSocket();\n    setInterval(() => {\n      doPing();\n    }, 30000);\n  }\n  function webSocket() {\n    websocket = new WebSocket(wsUri);\n    websocket.onopen = onOpen;\n    websocket.onclose = onClose;\n    websocket.onmessage = onMessage;\n    websocket.onerror = onError;\n  }\n  function onOpen(evt) {\n    console.log('CONNECTED');\n    var client_info = {\n      cmd: 'CLIENT_INFO',\n      platform: 0,\n      clientVersion: '1.0',\n      lang: 'vi',\n      token: tokenLogin,\n      app: 'CLIENT_APP',\n      data: {\n        app: 'CLIENT_APP'\n      }\n    };\n    doSend(JSON.stringify(client_info));\n  }\n  function onClose(evt) {\n    console.log('DISCONNECTED');\n    if (!isClosedIntentionally) {\n      setTimeout(() => {\n        webSocket();\n      }, 5000);\n    }\n    isClosedIntentionally = false;\n  }\n  function onMessage(evt) {\n    const data = JSON.parse(evt?.data)?.data;\n    console.log(data);\n    if (JSON.stringify(data) !== '{}' && data) {\n      const dataNotification = JSON.parse(data?.message);\n      const useKind = getData(storageKeys.USER_KIND);\n      const projectNameTitle = translate.formatMessage(commonMessage.project) + ` ${dataNotification?.projectName}: `;\n      const courseNameTitle = translate.formatMessage(commonMessage.course) + ` ${dataNotification?.courseName}: `;\n      if (useKind == UserTypes.STUDENT) {\n        if (data?.kind == 1) {\n          notification.success({\n            message: projectNameTitle + translate.formatMessage(commonMessage.doneTaskTitle),\n            description: translate.formatMessage(messages.studentDoneTaskDescription) + dataNotification?.taskName\n          });\n        } else if (data?.kind == 2) {\n          notification.info({\n            message: projectNameTitle + translate.formatMessage(commonMessage.newTaskTitle),\n            description: translate.formatMessage(messages.studentNewTaskDescription) + dataNotification?.taskName\n          });\n        } else if (data?.kind == 3) {\n          notification.error({\n            message: projectNameTitle + translate.formatMessage(commonMessage.cancelTaskTitle),\n            description: translate.formatMessage(messages.cancelTaskDescription) + dataNotification?.taskName\n          });\n        } else if (data?.kind == 5) {\n          notification.success({\n            message: courseNameTitle + translate.formatMessage(commonMessage.doneTaskTitle),\n            description: translate.formatMessage(messages.studentDoneTaskDescription) + dataNotification?.lectureName\n          });\n        } else if (data?.kind == 6) {\n          notification.info({\n            message: courseNameTitle + translate.formatMessage(commonMessage.newTaskTitle),\n            description: translate.formatMessage(messages.studentNewTaskDescription) + dataNotification?.lectureName\n          });\n        } else if (data?.kind == 7) {\n          notification.error({\n            message: courseNameTitle + translate.formatMessage(commonMessage.cancelTaskTitle),\n            description: translate.formatMessage(messages.cancelTaskDescription) + dataNotification?.lectureName\n          });\n        }\n      } else if (useKind == UserTypes.LEADER) {\n        if (data?.kind == 2) {\n          notification.info({\n            message: projectNameTitle + translate.formatMessage(commonMessage.newTaskTitle),\n            description: translate.formatMessage(messages.leaderNewTaskDescription) + dataNotification?.taskName\n          });\n        } else if (data?.kind == 4) {\n          notification.open({\n            message: projectNameTitle + translate.formatMessage(commonMessage.notifyDoneTaskTitle),\n            description: translate.formatMessage(messages.leaderDoneTaskDescription) + dataNotification?.taskName,\n            icon: /*#__PURE__*/React.createElement(IconBellRinging, {\n              color: \"orange\",\n              size: 30\n            })\n          });\n        } else if (data?.kind == 6) {\n          notification.info({\n            message: courseNameTitle + translate.formatMessage(commonMessage.newTaskTitle),\n            description: translate.formatMessage(messages.leaderNewTaskDescription) + dataNotification?.lectureName\n          });\n        } else if (data?.kind == 8) {\n          notification.open({\n            message: courseNameTitle + translate.formatMessage(commonMessage.notifyDoneTaskTitle),\n            description: translate.formatMessage(messages.leaderDoneTaskDescription) + dataNotification?.lectureName,\n            icon: /*#__PURE__*/React.createElement(IconBellRinging, {\n              color: \"orange\",\n              size: 30\n            })\n          });\n        }\n      }\n      localStorage.setItem('hasNotification', true);\n    }\n    //websocket.close();\n  }\n  function onError(evt) {\n    console.log(evt.data);\n  }\n  function doSend(message) {\n    // console.log('SENT: ' + message);\n    if (websocket.readyState === WebSocket.OPEN) {\n      websocket.send(message);\n    } else {\n      console.error('WebSocket is in CLOSING or CLOSED state.');\n    }\n  }\n  function doReceived(message) {\n    return message;\n  }\n  function doPing() {\n    var pingRequest = {\n      cmd: 'CLIENT_PING',\n      platform: 0,\n      clientVersion: '1.0',\n      lang: 'vi',\n      token: tokenLogin,\n      app: 'CLIENT_APP',\n      data: {\n        app: 'CLIENT_APP'\n      }\n    };\n    doSend(JSON.stringify(pingRequest));\n  }\n  init();\n};","map":{"version":3,"names":["UserTypes","storageKeys","commonMessage","notification","defineMessages","getData","React","IconBellRinging","messages","studentDoneTaskDescription","studentNewTaskDescription","cancelTaskDescription","leaderNewTaskDescription","leaderDoneTaskDescription","webSocket","tokenLogin","translate","wsUri","process","env","REACT_APP_WEB_SOCKET_URL","websocket","isClosedIntentionally","document","addEventListener","handleVisibilityChange","visibilityState","close","init","setInterval","doPing","WebSocket","onopen","onOpen","onclose","onClose","onmessage","onMessage","onerror","onError","evt","console","log","client_info","cmd","platform","clientVersion","lang","token","app","data","doSend","JSON","stringify","setTimeout","parse","dataNotification","message","useKind","USER_KIND","projectNameTitle","formatMessage","project","projectName","courseNameTitle","course","courseName","STUDENT","kind","success","doneTaskTitle","description","taskName","info","newTaskTitle","error","cancelTaskTitle","lectureName","LEADER","open","notifyDoneTaskTitle","icon","createElement","color","size","localStorage","setItem","readyState","OPEN","send","doReceived","pingRequest"],"sources":["C:/Users/PC/Downloads/elms-cms/elms-cms/source/src/utils/webSocket.js"],"sourcesContent":["import { UserTypes, storageKeys } from '@constants';\r\nimport { commonMessage } from '@locales/intl';\r\nimport { notification } from 'antd';\r\nimport { defineMessages } from 'react-intl';\r\nimport { getData } from './localStorage';\r\nimport React from 'react';\r\nimport { IconBellRinging } from '@tabler/icons-react';\r\n\r\nconst messages = defineMessages({\r\n    studentDoneTaskDescription: 'Bạn vừa hoàn thành task: ',\r\n    studentNewTaskDescription: 'Bạn vừa được giao task: ',\r\n    cancelTaskDescription: 'Bạn vừa bị huỷ task : ',\r\n    leaderNewTaskDescription: 'Một task mới vừa được tạo: ',\r\n    leaderDoneTaskDescription: 'Thông báo đã hoàn thành task: ',\r\n});\r\n\r\nexport const webSocket = (tokenLogin, translate) => {\r\n    var wsUri = process.env.REACT_APP_WEB_SOCKET_URL;\r\n    var websocket;\r\n    var isClosedIntentionally = false;\r\n    document.addEventListener('visibilitychange', handleVisibilityChange);\r\n    function handleVisibilityChange() {\r\n        if (document.visibilityState === 'visible') {\r\n            // If the page becomes visible, reconnect WebSocket\r\n            webSocket();\r\n        } else {\r\n            // If the page becomes hidden, close WebSocket\r\n            if (websocket) {\r\n                isClosedIntentionally = true;\r\n                websocket.close();\r\n            }\r\n        }\r\n    }\r\n\r\n    function init() {\r\n        webSocket();\r\n        setInterval(() => {\r\n            doPing();\r\n        }, 30000);\r\n    }\r\n    function webSocket() {\r\n        websocket = new WebSocket(wsUri);\r\n\r\n        websocket.onopen = onOpen;\r\n\r\n        websocket.onclose = onClose;\r\n\r\n        websocket.onmessage = onMessage;\r\n\r\n        websocket.onerror = onError;\r\n    }\r\n    function onOpen(evt) {\r\n        console.log('CONNECTED');\r\n\r\n        var client_info = {\r\n            cmd: 'CLIENT_INFO',\r\n            platform: 0,\r\n            clientVersion: '1.0',\r\n            lang: 'vi',\r\n            token: tokenLogin,\r\n            app: 'CLIENT_APP',\r\n            data: {\r\n                app: 'CLIENT_APP',\r\n            },\r\n        };\r\n        doSend(JSON.stringify(client_info));\r\n    }\r\n\r\n    function onClose(evt) {\r\n        console.log('DISCONNECTED');\r\n        if (!isClosedIntentionally) {\r\n            setTimeout(() => {\r\n                webSocket();\r\n            }, 5000);\r\n        }\r\n        isClosedIntentionally = false;\r\n    }\r\n\r\n    function onMessage(evt) {\r\n        const data = JSON.parse(evt?.data)?.data;\r\n        console.log(data);\r\n        if (JSON.stringify(data) !== '{}' && data) {\r\n            const dataNotification = JSON.parse(data?.message);\r\n            const useKind = getData(storageKeys.USER_KIND);\r\n            const projectNameTitle =\r\n                translate.formatMessage(commonMessage.project) + ` ${dataNotification?.projectName}: `;\r\n            const courseNameTitle =\r\n                translate.formatMessage(commonMessage.course) + ` ${dataNotification?.courseName}: `;\r\n            if (useKind == UserTypes.STUDENT) {\r\n                if (data?.kind == 1) {\r\n                    notification.success({\r\n                        message: projectNameTitle + translate.formatMessage(commonMessage.doneTaskTitle),\r\n                        description:\r\n                            translate.formatMessage(messages.studentDoneTaskDescription) + dataNotification?.taskName,\r\n                    });\r\n                } else if (data?.kind == 2) {\r\n                    notification.info({\r\n                        message: projectNameTitle + translate.formatMessage(commonMessage.newTaskTitle),\r\n                        description:\r\n                            translate.formatMessage(messages.studentNewTaskDescription) + dataNotification?.taskName,\r\n                    });\r\n                } else if (data?.kind == 3) {\r\n                    notification.error({\r\n                        message: projectNameTitle + translate.formatMessage(commonMessage.cancelTaskTitle),\r\n                        description:\r\n                            translate.formatMessage(messages.cancelTaskDescription) + dataNotification?.taskName,\r\n                    });\r\n                } else if (data?.kind == 5) {\r\n                    notification.success({\r\n                        message: courseNameTitle + translate.formatMessage(commonMessage.doneTaskTitle),\r\n                        description:\r\n                            translate.formatMessage(messages.studentDoneTaskDescription) +\r\n                            dataNotification?.lectureName,\r\n                    });\r\n                } else if (data?.kind == 6) {\r\n                    notification.info({\r\n                        message: courseNameTitle + translate.formatMessage(commonMessage.newTaskTitle),\r\n                        description:\r\n                            translate.formatMessage(messages.studentNewTaskDescription) + dataNotification?.lectureName,\r\n                    });\r\n                } else if (data?.kind == 7) {\r\n                    notification.error({\r\n                        message: courseNameTitle + translate.formatMessage(commonMessage.cancelTaskTitle),\r\n                        description:\r\n                            translate.formatMessage(messages.cancelTaskDescription) + dataNotification?.lectureName,\r\n                    });\r\n                }\r\n            } else if (useKind == UserTypes.LEADER) {\r\n                if (data?.kind == 2) {\r\n                    notification.info({\r\n                        message: projectNameTitle + translate.formatMessage(commonMessage.newTaskTitle),\r\n                        description:\r\n                            translate.formatMessage(messages.leaderNewTaskDescription) + dataNotification?.taskName,\r\n                    });\r\n                } else if (data?.kind == 4) {\r\n                    notification.open({\r\n                        message: projectNameTitle + translate.formatMessage(commonMessage.notifyDoneTaskTitle),\r\n                        description:\r\n                            translate.formatMessage(messages.leaderDoneTaskDescription) + dataNotification?.taskName,\r\n                        icon: <IconBellRinging color=\"orange\" size={30} />,\r\n                    });\r\n                } else if (data?.kind == 6) {\r\n                    notification.info({\r\n                        message: courseNameTitle + translate.formatMessage(commonMessage.newTaskTitle),\r\n                        description:\r\n                            translate.formatMessage(messages.leaderNewTaskDescription) + dataNotification?.lectureName,\r\n                    });\r\n                } else if (data?.kind == 8) {\r\n                    notification.open({\r\n                        message: courseNameTitle + translate.formatMessage(commonMessage.notifyDoneTaskTitle),\r\n                        description:\r\n                            translate.formatMessage(messages.leaderDoneTaskDescription) + dataNotification?.lectureName,\r\n                        icon: <IconBellRinging color=\"orange\" size={30} />,\r\n                    });\r\n                }\r\n            }\r\n            localStorage.setItem('hasNotification', true);\r\n        }\r\n        //websocket.close();\r\n    }\r\n    function onError(evt) {\r\n        console.log(evt.data);\r\n    }\r\n\r\n    function doSend(message) {\r\n        // console.log('SENT: ' + message);\r\n        if (websocket.readyState === WebSocket.OPEN) {\r\n            websocket.send(message);\r\n        } else {\r\n            console.error('WebSocket is in CLOSING or CLOSED state.');\r\n        }\r\n    }\r\n    function doReceived(message) {\r\n        return message;\r\n    }\r\n\r\n    function doPing() {\r\n        var pingRequest = {\r\n            cmd: 'CLIENT_PING',\r\n            platform: 0,\r\n            clientVersion: '1.0',\r\n            lang: 'vi',\r\n            token: tokenLogin,\r\n            app: 'CLIENT_APP',\r\n            data: {\r\n                app: 'CLIENT_APP',\r\n            },\r\n        };\r\n        doSend(JSON.stringify(pingRequest));\r\n    }\r\n    init();\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}